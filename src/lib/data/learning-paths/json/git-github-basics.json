{
  "id": "git-github-basics",
  "title": "Git & GitHub Essentials",
  "description": "Master version control with Git and GitHub",
  "level": "beginner",
  "category": "version-control",
  "createdAt": "2025-06-23T18:03:13.388Z",
  "updatedAt": "2025-06-23T18:03:13.388Z",
  "sets": [
    {
      "id": "git-basics",
      "title": "Basic Git Commands",
      "description": "Essential Git commands for version control",
      "category": "git",
      "createdAt": "2025-06-23T18:03:13.388Z",
      "updatedAt": "2025-06-23T18:03:13.388Z",
      "cards": [
        {
          "id": "gb-1",
          "front": "What is the command to initialize a new Git repository?",
          "back": "git init - This command creates a new Git repository in the current directory.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-2",
          "front": "How do you check the status of your Git repository?",
          "back": "git status - Shows the current state of your working directory and staging area.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-3",
          "front": "What command adds files to the staging area?",
          "back": "git add <filename> or git add . - Adds files to the staging area. Use . to add all files.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-4",
          "front": "How do you commit changes in Git?",
          "back": "git commit -m \"your message\" - Creates a new commit with the staged changes and a descriptive message.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-5",
          "front": "What command shows the commit history?",
          "back": "git log - Displays the commit history with details like author, date, and commit message.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-6",
          "front": "How do you view the differences between your working directory and the last commit?",
          "back": "git diff - Shows the differences between your working directory and the last commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-7",
          "front": "What command shows the differences between staged changes and the last commit?",
          "back": "git diff --staged - Shows the differences between staged changes and the last commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-8",
          "front": "How do you remove a file from Git tracking while keeping it in your working directory?",
          "back": "git rm --cached <filename> - Removes the file from Git tracking but keeps it in your working directory.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-9",
          "front": "What command shows the commit history in a more concise format?",
          "back": "git log --oneline - Shows each commit on a single line with its hash and message.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-10",
          "front": "How do you view the changes in a specific commit?",
          "back": "git show <commit-hash> - Shows the changes made in the specified commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-11",
          "front": "What command helps you create a more detailed commit message?",
          "back": "git commit - Opens your default editor to write a detailed commit message.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-12",
          "front": "How do you amend the last commit message?",
          "back": "git commit --amend -m \"new message\" - Changes the message of the last commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-13",
          "front": "What command shows the current Git configuration?",
          "back": "git config --list - Shows all Git configuration settings.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-14",
          "front": "How do you set your Git username and email?",
          "back": "git config --global user.name \"Your Name\" and git config --global user.email \"your.email@example.com\"",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-15",
          "front": "What command helps you find a specific commit by its message?",
          "back": "git log --grep=\"search term\" - Searches commit messages for the specified term.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-16",
          "front": "How do you view the commit history of a specific file?",
          "back": "git log --follow <filename> - Shows the commit history of a file, including its previous names.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-17",
          "front": "What command shows the changes made by each commit?",
          "back": "git log -p - Shows the patch (changes) for each commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-18",
          "front": "How do you create a new commit that undoes all changes from a specific commit?",
          "back": "git revert <commit-hash> - Creates a new commit that undoes the changes from the specified commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-19",
          "front": "What command helps you clean up untracked files?",
          "back": "git clean -n (dry run) or git clean -f (force) - Removes untracked files from the working directory.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gb-20",
          "front": "How do you view the commit history in a graphical format?",
          "back": "git log --graph --oneline --all - Shows a graphical representation of the commit history.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        }
      ]
    },
    {
      "id": "git-branching",
      "title": "Git Branching",
      "description": "Working with branches in Git",
      "category": "git",
      "createdAt": "2025-06-23T18:03:13.388Z",
      "updatedAt": "2025-06-23T18:03:13.388Z",
      "cards": [
        {
          "id": "br-1",
          "front": "How do you create a new branch?",
          "back": "git branch <branch-name> - Creates a new branch. Use git checkout -b <branch-name> to create and switch to it.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-2",
          "front": "What command switches to a different branch?",
          "back": "git checkout <branch-name> - Switches to the specified branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-3",
          "front": "How do you merge a branch into your current branch?",
          "back": "git merge <branch-name> - Merges the specified branch into your current branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-4",
          "front": "What command shows all branches?",
          "back": "git branch - Lists all local branches. Use git branch -a to see all branches including remote ones.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-5",
          "front": "How do you delete a branch?",
          "back": "git branch -d <branch-name> - Deletes the specified branch. Use -D for force delete.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-6",
          "front": "How do you create a new branch from a specific commit?",
          "back": "git branch <branch-name> <commit-hash> - Creates a new branch starting from the specified commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-7",
          "front": "What command shows the relationship between branches?",
          "back": "git log --graph --oneline --all - Shows a graphical representation of branch relationships.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-8",
          "front": "How do you rename a branch?",
          "back": "git branch -m <old-name> <new-name> - Renames a branch locally.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-9",
          "front": "What command shows which branches are already merged into the current branch?",
          "back": "git branch --merged - Lists branches that have been merged into the current branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-10",
          "front": "How do you create a new branch and switch to it in one command?",
          "back": "git checkout -b <branch-name> - Creates and switches to a new branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-11",
          "front": "What command helps you track a remote branch?",
          "back": "git branch --set-upstream-to=origin/<branch-name> <local-branch-name>",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-12",
          "front": "How do you merge a specific commit into your current branch?",
          "back": "git cherry-pick <commit-hash> - Applies the changes from a specific commit to your current branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-13",
          "front": "What command shows the commit history of a specific branch?",
          "back": "git log <branch-name> - Shows the commit history of the specified branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-14",
          "front": "How do you create a new branch from a remote branch?",
          "back": "git checkout -b <local-branch-name> origin/<remote-branch-name>",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-15",
          "front": "What command helps you find which branch contains a specific commit?",
          "back": "git branch --contains <commit-hash> - Shows all branches that contain the specified commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-16",
          "front": "How do you merge multiple branches at once?",
          "back": "git merge <branch1> <branch2> - Merges multiple branches into your current branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-17",
          "front": "What command shows the differences between your current branch and another branch?",
          "back": "git diff <branch-name> - Shows the differences between your current branch and the specified branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-18",
          "front": "How do you create a new branch from a tag?",
          "back": "git checkout -b <branch-name> <tag-name> - Creates a new branch from a specific tag.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-19",
          "front": "What command helps you find which branches have been merged into the main branch?",
          "back": "git branch --merged main - Lists branches that have been merged into the main branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "br-20",
          "front": "How do you create a new branch from a specific file in another branch?",
          "back": "git checkout <branch-name> -- <file-path> - Gets a specific file from another branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        }
      ]
    },
    {
      "id": "github-commands",
      "title": "GitHub Commands",
      "description": "Working with remote repositories on GitHub",
      "category": "git",
      "createdAt": "2025-06-23T18:03:13.388Z",
      "updatedAt": "2025-06-23T18:03:13.388Z",
      "cards": [
        {
          "id": "gh-1",
          "front": "How do you add a remote repository?",
          "back": "git remote add origin <repository-url> - Adds a remote repository named \"origin\" with the specified URL.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-2",
          "front": "What command pushes changes to GitHub?",
          "back": "git push origin <branch-name> - Pushes your local commits to the remote repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-3",
          "front": "How do you pull changes from GitHub?",
          "back": "git pull origin <branch-name> - Fetches and merges changes from the remote repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-4",
          "front": "What command clones a repository?",
          "back": "git clone <repository-url> - Creates a local copy of a remote repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-5",
          "front": "How do you fetch changes without merging?",
          "back": "git fetch origin - Downloads changes from the remote repository without merging them.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-6",
          "front": "How do you update your local repository with changes from the remote?",
          "back": "git pull --rebase origin <branch-name> - Fetches and rebases your local changes on top of remote changes.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-7",
          "front": "What command shows the remote repository information?",
          "back": "git remote -v - Shows the URLs of the remote repositories.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-8",
          "front": "How do you add multiple remote repositories?",
          "back": "git remote add <remote-name> <repository-url> - Adds a new remote with a custom name.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-9",
          "front": "What command helps you update the remote repository URL?",
          "back": "git remote set-url origin <new-url> - Updates the URL of the remote repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-10",
          "front": "How do you push a new branch to the remote repository?",
          "back": "git push -u origin <branch-name> - Pushes a new branch and sets up tracking.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-11",
          "front": "What command shows the differences between your local and remote branches?",
          "back": "git diff origin/<branch-name> - Shows the differences between your local and remote branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-12",
          "front": "How do you fetch changes from a specific remote?",
          "back": "git fetch <remote-name> - Downloads changes from the specified remote repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-13",
          "front": "What command helps you update your local repository with all remote changes?",
          "back": "git pull --all - Fetches and merges changes from all remote repositories.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-14",
          "front": "How do you push tags to the remote repository?",
          "back": "git push origin --tags - Pushes all tags to the remote repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-15",
          "front": "What command shows the remote branches?",
          "back": "git branch -r - Lists all remote branches.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-16",
          "front": "How do you delete a remote branch?",
          "back": "git push origin --delete <branch-name> - Deletes a branch on the remote repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-17",
          "front": "What command helps you update your local repository with remote changes without merging?",
          "back": "git fetch --prune - Removes references to deleted remote branches and updates your local repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-18",
          "front": "How do you push changes to a specific remote?",
          "back": "git push <remote-name> <branch-name> - Pushes changes to the specified remote repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-19",
          "front": "What command shows the commit history of a remote branch?",
          "back": "git log origin/<branch-name> - Shows the commit history of a remote branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "gh-20",
          "front": "How do you update your local repository with changes from a specific remote branch?",
          "back": "git pull origin <remote-branch>:<local-branch> - Pulls changes from a specific remote branch to a local branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        }
      ]
    },
    {
      "id": "git-advanced",
      "title": "Advanced Git Commands",
      "description": "Advanced Git operations and troubleshooting",
      "category": "git",
      "createdAt": "2025-06-23T18:03:13.388Z",
      "updatedAt": "2025-06-23T18:03:13.388Z",
      "cards": [
        {
          "id": "adv-1",
          "front": "How do you undo the last commit?",
          "back": "git reset HEAD~1 - Undoes the last commit while keeping the changes staged. Add --hard to discard changes.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-2",
          "front": "What command shows the differences between branches?",
          "back": "git diff <branch1>..<branch2> - Shows the differences between two branches.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-3",
          "front": "How do you stash changes?",
          "back": "git stash - Temporarily saves your changes. Use git stash pop to apply them later.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-4",
          "front": "What command rebases your branch?",
          "back": "git rebase <base-branch> - Replays your changes on top of the specified branch.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-5",
          "front": "How do you resolve merge conflicts?",
          "back": "1. Edit the conflicted files\n2. git add the resolved files\n3. git commit to complete the merge",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-6",
          "front": "How do you create a new commit that combines multiple commits?",
          "back": "git reset --soft HEAD~n (where n is the number of commits) then git commit -m \"new message\"",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-7",
          "front": "What command helps you find which commit introduced a bug?",
          "back": "git bisect start and git bisect good/bad - Uses binary search to find the commit that introduced a bug.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-8",
          "front": "How do you create a new commit that undoes changes from multiple commits?",
          "back": "git revert <commit1>..<commit2> - Creates new commits that undo the changes from a range of commits.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-9",
          "front": "What command helps you clean up your repository?",
          "back": "git gc - Runs garbage collection to optimize your repository.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-10",
          "front": "How do you create a new commit that combines changes from multiple branches?",
          "back": "git merge --no-ff <branch1> <branch2> - Creates a merge commit that combines changes from multiple branches.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-11",
          "front": "What command helps you find which commit introduced a specific line of code?",
          "back": "git blame <filename> - Shows who last modified each line of a file and when.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-12",
          "front": "How do you create a new commit that splits a previous commit?",
          "back": "git reset --soft HEAD~1 then git reset HEAD <file> then git commit -m \"first part\" then git add <file> then git commit -m \"second part\"",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-13",
          "front": "What command helps you find which commit introduced a specific change?",
          "back": "git log -S \"search term\" - Searches for commits that introduced or removed the specified term.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-14",
          "front": "How do you create a new commit that combines changes from multiple commits?",
          "back": "git reset --soft HEAD~n then git commit -m \"combined commit\" - Combines multiple commits into one.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-15",
          "front": "What command helps you find which commit introduced a specific file?",
          "back": "git log --diff-filter=A -- <filename> - Shows the commit that added the specified file.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-16",
          "front": "How do you create a new commit that undoes changes from a specific file?",
          "back": "git checkout <commit-hash> -- <filename> then git commit -m \"revert file\" - Reverts a specific file to a previous state.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-17",
          "front": "What command helps you find which commit removed a specific file?",
          "back": "git log --diff-filter=D -- <filename> - Shows the commit that deleted the specified file.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-18",
          "front": "How do you create a new commit that combines changes from multiple files?",
          "back": "git add <file1> <file2> then git commit -m \"combined changes\" - Combines changes from multiple files into one commit.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-19",
          "front": "What command helps you find which commit modified a specific line?",
          "back": "git log -L <start>,<end>:<filename> - Shows the commit that modified the specified lines.",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        },
        {
          "id": "adv-20",
          "front": "How do you create a new commit that splits changes from a specific file?",
          "back": "git reset HEAD <file> then git add -p <file> then git commit -m \"first part\" then git add <file> then git commit -m \"second part\"",
          "category": "git",
          "difficulty": "easy",
          "reviewCount": 0,
          "correctCount": 0
        }
      ]
    }
  ],
  "quizzes": [
    {
      "id": "git-github-quiz",
      "title": "Git & GitHub Quiz",
      "description": "Test your knowledge of Git and GitHub",
      "category": "git",
      "passingScore": 70,
      "createdAt": "2025-06-23T18:03:13.388Z",
      "updatedAt": "2025-06-23T18:03:13.388Z",
      "questions": [
        {
          "id": "q1",
          "question": "What is the command to initialize a new Git repository?",
          "options": [
            "git start",
            "git init",
            "git new",
            "git create"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q2",
          "question": "How do you check the status of your Git repository?",
          "options": [
            "git check",
            "git status",
            "git state",
            "git info"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q3",
          "question": "What command adds files to the staging area?",
          "options": [
            "git stage",
            "git include",
            "git add",
            "git track"
          ],
          "correctAnswer": 2,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q4",
          "question": "What command is used to temporarily save changes without committing?",
          "options": [
            "git save",
            "git store",
            "git stash",
            "git cache"
          ],
          "correctAnswer": 2,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q5",
          "question": "Which command shows the differences between your working directory and the staging area?",
          "options": [
            "git show",
            "git diff",
            "git compare",
            "git status"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q6",
          "question": "What command shows the differences between staged changes and the last commit?",
          "options": [
            "git diff",
            "git diff --staged",
            "git show",
            "git status"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q7",
          "question": "How do you create a new branch from a specific commit?",
          "options": [
            "git branch <branch-name>",
            "git branch <branch-name> <commit-hash>",
            "git checkout <commit-hash>",
            "git create-branch <branch-name> <commit-hash>"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q8",
          "question": "What command helps you find which commit introduced a bug?",
          "options": [
            "git find-bug",
            "git debug",
            "git bisect",
            "git search-bug"
          ],
          "correctAnswer": 2,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q9",
          "question": "How do you update your local repository with changes from all remotes?",
          "options": [
            "git pull --all",
            "git fetch --all",
            "git update --all",
            "git sync --all"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q10",
          "question": "What command shows the commit history in a graphical format?",
          "options": [
            "git show-graph",
            "git log --graph",
            "git history --graph",
            "git view-graph"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q11",
          "question": "How do you stage specific parts of a file?",
          "options": [
            "git add -p",
            "git stage -p",
            "git add --partial",
            "git stage --partial"
          ],
          "correctAnswer": 0,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q12",
          "question": "What command helps you find which commit introduced a specific line of code?",
          "options": [
            "git find-line",
            "git blame",
            "git search-line",
            "git show-line"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q13",
          "question": "How do you push a new branch to the remote repository?",
          "options": [
            "git push -u origin <branch-name>",
            "git push origin <branch-name>",
            "git push --new origin <branch-name>",
            "git push --branch origin <branch-name>"
          ],
          "correctAnswer": 0,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q14",
          "question": "What command shows the relationship between branches?",
          "options": [
            "git show-branches",
            "git branch-relations",
            "git log --graph",
            "git view-branches"
          ],
          "correctAnswer": 2,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q15",
          "question": "How do you create a new commit that undoes changes from multiple commits?",
          "options": [
            "git undo <commit1>..<commit2>",
            "git revert <commit1>..<commit2>",
            "git remove <commit1>..<commit2>",
            "git delete <commit1>..<commit2>"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q16",
          "question": "What command helps you clean up your repository?",
          "options": [
            "git clean",
            "git optimize",
            "git gc",
            "git maintenance"
          ],
          "correctAnswer": 2,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q17",
          "question": "How do you update the remote repository URL?",
          "options": [
            "git remote update origin <new-url>",
            "git remote set-url origin <new-url>",
            "git remote change origin <new-url>",
            "git remote modify origin <new-url>"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q18",
          "question": "What command shows the differences between your local and remote branches?",
          "options": [
            "git diff origin/<branch-name>",
            "git compare origin/<branch-name>",
            "git show-diff origin/<branch-name>",
            "git view-diff origin/<branch-name>"
          ],
          "correctAnswer": 0,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q19",
          "question": "How do you create a new commit that combines changes from multiple files?",
          "options": [
            "git commit --combine <file1> <file2>",
            "git add <file1> <file2> && git commit",
            "git merge-files <file1> <file2>",
            "git combine <file1> <file2>"
          ],
          "correctAnswer": 1,
          "category": "git",
          "difficulty": "easy"
        },
        {
          "id": "q20",
          "question": "What command helps you find which commit introduced a specific change in all files?",
          "options": [
            "git log -p | grep \"search term\"",
            "git search-all \"search term\"",
            "git find-all \"search term\"",
            "git show-all \"search term\""
          ],
          "correctAnswer": 0,
          "category": "git",
          "difficulty": "easy"
        }
      ]
    }
  ]
}