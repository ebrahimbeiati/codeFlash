(()=>{var e={};e.id=387,e.ids=[387],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4403:(e,t,o)=>{"use strict";o.r(t),o.d(t,{patchFetch:()=>C,routeModule:()=>g,serverHooks:()=>v,workAsyncStorage:()=>b,workUnitAsyncStorage:()=>w});var a={};o.r(a),o.d(a,{GET:()=>m});var r=o(6559),i=o(8088),s=o(7719),n=o(2190);let c={id:"javascript-fundamentals",title:"JavaScript Fundamentals",description:"Learn the basics of JavaScript programming",level:"beginner",category:"programming",createdAt:new Date,updatedAt:new Date,sets:[{id:"js-beginner",title:"JavaScript Basics",description:"Core JavaScript concepts and syntax",category:"javascript",createdAt:new Date,updatedAt:new Date,cards:[{id:"js-b1",front:"What is JavaScript?",back:"JavaScript is a high-level, interpreted programming language that enables interactive web pages. It is an essential part of web applications and can be used for both front-end and back-end development.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b2",front:"What are the basic data types in JavaScript?",back:"JavaScript has 7 primitive data types: String, Number, Boolean, Undefined, Null, Symbol, and BigInt. Objects are the only non-primitive data type.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b3",front:"What is the difference between let, const, and var?",back:"let and const are block-scoped, while var is function-scoped. const cannot be reassigned, while let and var can. var declarations are hoisted, while let and const are not.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b4",front:"What is hoisting in JavaScript?",back:"Hoisting is JavaScript's behavior of moving declarations to the top of their scope. Variable declarations using var are hoisted, while let and const are not. Function declarations are also hoisted.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b5",front:"What is the difference between == and ===?",back:"== performs type coercion before comparison, while === checks both value and type without coercion. === is generally preferred as it's more predictable.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b6",front:"What is a function?",back:"A function is a reusable block of code that performs a specific task. Functions can take parameters and return values. They are first-class objects in JavaScript.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b7",front:"What is an array?",back:"An array is an ordered collection of values. Arrays can store multiple values of different types and are zero-indexed. They have built-in methods for manipulation.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b8",front:"What is an object?",back:"An object is a collection of key-value pairs. Objects can store multiple values as properties and methods. They are used to represent real-world entities.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b9",front:"What is a string?",back:"A string is a sequence of characters. Strings are immutable and have various methods for manipulation. They can be created using single or double quotes.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b10",front:"What is a number?",back:"Numbers in JavaScript are 64-bit floating point values. They can be integers or decimals. JavaScript also has special number values like Infinity and NaN.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b11",front:"What is a boolean?",back:"A boolean is a logical data type that can have only two values: true or false. Booleans are often used in conditional statements and loops.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b12",front:"What is null?",back:"null is a special value that represents the intentional absence of any object value. It is a primitive value and is often used to indicate that a variable has no value.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b13",front:"What is undefined?",back:"undefined is a special value that represents an uninitialized variable. It is a primitive value and is the default value of variables that have been declared but not assigned.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b14",front:"What is a conditional statement?",back:"A conditional statement is a block of code that executes only if a specified condition is true. JavaScript has if, else if, else, and switch statements.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b15",front:"What is a loop?",back:"A loop is a block of code that executes repeatedly until a specified condition is met. JavaScript has for, while, do...while, and for...of loops.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b16",front:"What is the difference between for and while loops?",back:"for loops are used when you know how many times you want to loop. while loops are used when you don't know how many times you need to loop.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b17",front:"What is the difference between break and continue?",back:"break exits a loop completely, while continue skips the current iteration and continues with the next one.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b18",front:"What is the difference between function declaration and function expression?",back:"Function declarations are hoisted and can be called before they are defined. Function expressions are not hoisted and must be defined before they are called.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b19",front:"What is the difference between parameters and arguments?",back:"Parameters are the variables listed in the function definition. Arguments are the actual values passed to the function when it is called.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b20",front:"What is the return statement?",back:"The return statement ends function execution and specifies a value to be returned to the function caller.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b21",front:"What is the difference between local and global variables?",back:"Local variables are declared inside a function and can only be accessed within that function. Global variables are declared outside any function and can be accessed anywhere.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b22",front:"What is the difference between let and const?",back:"let allows you to reassign values, while const does not. Both are block-scoped and not hoisted.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b23",front:"What is the difference between null and undefined?",back:"null is an explicit assignment of no value, while undefined means a variable has been declared but not assigned a value.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b24",front:"What is the difference between == and ===?",back:"== performs type coercion before comparison, while === checks both value and type without coercion.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b25",front:"What is the difference between != and !==?",back:"!= performs type coercion before comparison, while !== checks both value and type without coercion.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b26",front:"What is the difference between && and ||?",back:"&& returns true if both operands are true, while || returns true if either operand is true.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b27",front:"What is the difference between ! and !!?",back:"! converts a value to its boolean opposite, while !! converts a value to its boolean equivalent.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b28",front:"What is the difference between ++ and --?",back:"++ increments a value by 1, while -- decrements a value by 1.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b29",front:"What is the difference between += and -=?",back:"+= adds a value to a variable, while -= subtracts a value from a variable.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"js-b30",front:"What is the difference between *= and /=?",back:"*= multiplies a variable by a value, while /= divides a variable by a value.",category:"javascript",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"js-intermediate",title:"Intermediate JavaScript",description:"Advanced JavaScript features and patterns",category:"javascript",createdAt:new Date,updatedAt:new Date,cards:[{id:"js-i1",front:"What is closure in JavaScript?",back:"A closure is a function that has access to variables from its outer lexical scope, even after the outer function has returned. It maintains access to its scope chain.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i2",front:'What is the "this" keyword?',back:"The this keyword refers to the object that is currently executing the code. Its value depends on how a function is called: global context, object method, constructor, or event handler.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i3",front:"What is the difference between call(), apply(), and bind()?",back:"All three methods are used to set the this value. call() invokes the function with given this and arguments. apply() is similar but takes arguments as an array. bind() returns a new function with fixed this.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i4",front:"What is a promise?",back:"A promise is an object representing the eventual completion or failure of an asynchronous operation. It has three states: pending, fulfilled, or rejected.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i5",front:"What is async/await?",back:"async/await is a syntax for handling promises. async functions return promises, and await pauses execution until the promise resolves. It makes asynchronous code look synchronous.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i6",front:"What is the event loop?",back:"The event loop is a mechanism that allows JavaScript to handle asynchronous operations. It continuously checks the call stack and message queue, executing callbacks when the stack is empty.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i7",front:"What is the difference between synchronous and asynchronous code?",back:"Synchronous code executes in sequence, blocking until each operation completes. Asynchronous code allows other operations to continue while waiting for an operation to complete.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i8",front:"What is a callback function?",back:"A callback function is a function passed as an argument to another function, to be executed after the main function has finished its execution.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i9",front:"What is the spread operator?",back:"The spread operator (...) allows an iterable to be expanded in places where multiple arguments or elements are expected. It can be used with arrays, objects, and function arguments.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i10",front:"What is destructuring?",back:"Destructuring is a JavaScript expression that allows you to extract values from arrays or properties from objects into distinct variables.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i11",front:"What is the difference between map(), filter(), and reduce()?",back:"map() transforms each element in an array. filter() creates a new array with elements that pass a test. reduce() reduces an array to a single value by executing a reducer function.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i12",front:"What is the difference between forEach() and map()?",back:"forEach() executes a function for each element but doesn't return anything. map() creates a new array with the results of calling a function for every array element.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i13",front:"What is the difference between slice() and splice()?",back:"slice() returns a shallow copy of a portion of an array without modifying the original. splice() changes the contents of an array by removing or replacing elements and/or adding new elements.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i14",front:"What is the difference between Object.freeze() and Object.seal()?",back:"Object.freeze() makes an object immutable, preventing any changes to its properties. Object.seal() prevents adding or removing properties but allows modifying existing ones.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i15",front:"What is the difference between Object.keys() and Object.entries()?",back:"Object.keys() returns an array of a given object's own enumerable property names. Object.entries() returns an array of a given object's own enumerable string-keyed property [key, value] pairs.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i16",front:"What is the difference between Object.assign() and the spread operator?",back:"Both can be used to copy objects, but Object.assign() modifies the target object, while the spread operator creates a new object. The spread operator is generally preferred for its immutability.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i17",front:"What is the difference between Array.from() and the spread operator?",back:"Array.from() can convert array-like objects to arrays and accepts a mapping function. The spread operator can only spread iterable objects into arrays.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i18",front:"What is the difference between Array.isArray() and instanceof Array?",back:"Array.isArray() is more reliable as it works across different frames/windows. instanceof Array can fail when checking arrays from different contexts.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i19",front:"What is the difference between String.prototype.slice() and String.prototype.substring()?",back:"Both extract parts of a string, but slice() can use negative indices and doesn't swap parameters if start > end. substring() swaps parameters if start > end and treats negative indices as 0.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"js-i20",front:"What is the difference between String.prototype.replace() and String.prototype.replaceAll()?",back:"replace() replaces only the first occurrence of a pattern. replaceAll() replaces all occurrences of a pattern in a string.",category:"javascript",difficulty:"medium",reviewCount:0,correctCount:0}]},{id:"js-advanced",title:"Advanced JavaScript",description:"Complex JavaScript patterns and best practices",category:"javascript",createdAt:new Date,updatedAt:new Date,cards:[{id:"js-a1",front:"What is the prototype chain?",back:"The prototype chain is how JavaScript implements inheritance. Each object has a prototype object, and objects inherit properties and methods from their prototype chain.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a2",front:"What is the difference between classical and prototypal inheritance?",back:"Classical inheritance uses classes and extends them, while prototypal inheritance uses objects and delegates to their prototypes. JavaScript uses prototypal inheritance.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a3",front:"What is the difference between Object.create() and new?",back:"Object.create() creates a new object with the specified prototype object. new creates an instance of a constructor function, which sets up the prototype chain.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a4",front:"What is the difference between Object.getPrototypeOf() and Object.setPrototypeOf()?",back:"Object.getPrototypeOf() returns the prototype of an object. Object.setPrototypeOf() sets the prototype of an object to another object or null.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a5",front:"What is the difference between Object.defineProperty() and Object.defineProperties()?",back:"Object.defineProperty() defines a new property or modifies an existing property on an object. Object.defineProperties() defines multiple properties on an object.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a6",front:"What is the difference between Object.getOwnPropertyDescriptor() and Object.getOwnPropertyDescriptors()?",back:"Object.getOwnPropertyDescriptor() returns a property descriptor for an own property. Object.getOwnPropertyDescriptors() returns all own property descriptors of an object.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a7",front:"What is the difference between Object.preventExtensions() and Object.seal()?",back:"Object.preventExtensions() prevents new properties from being added to an object. Object.seal() prevents new properties from being added and existing properties from being deleted.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a8",front:"What is the difference between Object.freeze() and Object.seal()?",back:"Object.freeze() makes an object immutable, preventing any changes to its properties. Object.seal() prevents adding or removing properties but allows modifying existing ones.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a9",front:"What is the difference between Object.is() and ===?",back:"Object.is() is similar to === but handles special cases like NaN and -0 differently. Object.is(NaN, NaN) is true, while NaN === NaN is false.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a10",front:"What is the difference between Object.keys() and Object.getOwnPropertyNames()?",back:"Object.keys() returns an array of a given object's own enumerable property names. Object.getOwnPropertyNames() returns an array of all own property names, including non-enumerable ones.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a11",front:"What is the difference between Object.entries() and Object.fromEntries()?",back:"Object.entries() converts an object to an array of [key, value] pairs. Object.fromEntries() converts an array of [key, value] pairs back to an object.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a12",front:"What is the difference between Object.values() and Object.keys()?",back:"Object.values() returns an array of a given object's own enumerable property values. Object.keys() returns an array of a given object's own enumerable property names.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a13",front:"What is the difference between Object.getOwnPropertySymbols() and Object.getOwnPropertyNames()?",back:"Object.getOwnPropertySymbols() returns an array of all symbol properties found directly on an object. Object.getOwnPropertyNames() returns an array of all string properties found directly on an object.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a14",front:"What is the difference between Object.isExtensible() and Object.isSealed()?",back:"Object.isExtensible() determines if an object is extensible. Object.isSealed() determines if an object is sealed.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a15",front:"What is the difference between Object.isFrozen() and Object.isSealed()?",back:"Object.isFrozen() determines if an object is frozen. Object.isSealed() determines if an object is sealed.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a16",front:"What is the difference between Object.getOwnPropertyDescriptor() and Object.getOwnPropertyDescriptors()?",back:"Object.getOwnPropertyDescriptor() returns a property descriptor for an own property. Object.getOwnPropertyDescriptors() returns all own property descriptors of an object.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a17",front:"What is the difference between Object.defineProperty() and Object.defineProperties()?",back:"Object.defineProperty() defines a new property or modifies an existing property on an object. Object.defineProperties() defines multiple properties on an object.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a18",front:"What is the difference between Object.getPrototypeOf() and Object.setPrototypeOf()?",back:"Object.getPrototypeOf() returns the prototype of an object. Object.setPrototypeOf() sets the prototype of an object to another object or null.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a19",front:"What is the difference between Object.create() and new?",back:"Object.create() creates a new object with the specified prototype object. new creates an instance of a constructor function, which sets up the prototype chain.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"js-a20",front:"What is the difference between classical and prototypal inheritance?",back:"Classical inheritance uses classes and extends them, while prototypal inheritance uses objects and delegates to their prototypes. JavaScript uses prototypal inheritance.",category:"javascript",difficulty:"hard",reviewCount:0,correctCount:0}]}],quiz:{id:"js-quiz",title:"JavaScript Quiz",description:"Test your knowledge of JavaScript fundamentals",category:"javascript",passingScore:70,createdAt:new Date,updatedAt:new Date,questions:[{id:"q1",question:"What is JavaScript?",options:["A markup language","A programming language","A styling language","A database language"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q2",question:"Which keyword is used to declare a variable in JavaScript?",options:["variable","var","v","declare"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q3",question:"What is the difference between let, const, and var?",options:["They are all the same","let and const are block-scoped, var is function-scoped","let is for numbers, const is for strings, var is for booleans","let is for variables, const is for constants, var is for arrays"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q4",question:"What is hoisting in JavaScript?",options:["Moving variables to the bottom of their scope","Moving declarations to the top of their scope","Moving functions to the bottom of their scope","Moving objects to the top of their scope"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q5",question:"What is the difference between == and ===?",options:["They are the same","== performs type coercion, === checks both value and type","== is for numbers, === is for strings","== is for variables, === is for constants"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q6",question:"What is closure in JavaScript?",options:["A way to close a function","A function with access to its outer scope","A way to end a program","A way to close a file"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q7",question:"What is the 'this' keyword?",options:["A way to refer to the current function","A reference to the current object","A way to refer to the next function","A way to refer to the previous function"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q8",question:"What is the difference between call(), apply(), and bind()?",options:["They are all the same","Different ways to set the this value","Different ways to call a function","Different ways to bind a function"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q9",question:"What is a promise?",options:["A way to make a function call","An object representing an asynchronous operation","A way to create a variable","A way to create an object"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q10",question:"What is async/await?",options:["A way to create a function","A syntax for handling promises","A way to create a variable","A way to create an object"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q11",question:"What is the event loop?",options:["A way to create a loop","A mechanism for handling asynchronous operations","A way to create a function","A way to create a variable"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q12",question:"What is the difference between synchronous and asynchronous code?",options:["They are the same","Synchronous executes in sequence, asynchronous allows other operations to continue","Synchronous is for variables, asynchronous is for functions","Synchronous is for numbers, asynchronous is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q13",question:"What is a callback function?",options:["A way to create a function","A function passed as an argument to another function","A way to create a variable","A way to create an object"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q14",question:"What is the difference between null and undefined?",options:["They are the same","undefined is unassigned, null is explicitly assigned","undefined is for numbers, null is for strings","undefined is for variables, null is for functions"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q15",question:"What is the difference between function declaration and function expression?",options:["They are the same","Declaration is hoisted, expression is not","Declaration is for variables, expression is for functions","Declaration is for numbers, expression is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q16",question:"What is the spread operator?",options:["A way to create a function","A way to expand iterables","A way to create a variable","A way to create an object"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q17",question:"What is destructuring?",options:["A way to create a function","A way to extract values from arrays or objects","A way to create a variable","A way to create an object"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q18",question:"What is the difference between map(), filter(), and reduce()?",options:["They are the same","Different array methods for transformation, filtering, and reduction","Different ways to create a function","Different ways to create a variable"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q19",question:"What is the difference between forEach() and map()?",options:["They are the same","forEach() executes for each element, map() creates a new array","forEach() is for variables, map() is for functions","forEach() is for numbers, map() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q20",question:"What is the difference between slice() and splice()?",options:["They are the same","slice() returns a copy, splice() modifies the array","slice() is for variables, splice() is for functions","slice() is for numbers, splice() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q21",question:"What is the prototype chain?",options:["A way to create a function","How JavaScript implements inheritance","A way to create a variable","A way to create an object"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q22",question:"What is the difference between classical and prototypal inheritance?",options:["They are the same","Classical uses classes, prototypal uses objects","Classical is for variables, prototypal is for functions","Classical is for numbers, prototypal is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q23",question:"What is the difference between Object.create() and new?",options:["They are the same","Object.create() creates with prototype, new creates instance","Object.create() is for variables, new is for functions","Object.create() is for numbers, new is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q24",question:"What is the difference between Object.freeze() and Object.seal()?",options:["They are the same","freeze() makes immutable, seal() prevents adding/removing properties","freeze() is for variables, seal() is for functions","freeze() is for numbers, seal() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q25",question:"What is the difference between Object.keys() and Object.entries()?",options:["They are the same","keys() returns property names, entries() returns [key, value] pairs","keys() is for variables, entries() is for functions","keys() is for numbers, entries() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q26",question:"What is the difference between Object.assign() and the spread operator?",options:["They are the same","assign() modifies target, spread creates new object","assign() is for variables, spread is for functions","assign() is for numbers, spread is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q27",question:"What is the difference between Array.from() and the spread operator?",options:["They are the same","from() can convert array-like objects, spread only works with iterables","from() is for variables, spread is for functions","from() is for numbers, spread is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q28",question:"What is the difference between Array.isArray() and instanceof Array?",options:["They are the same","isArray() is more reliable across contexts","isArray() is for variables, instanceof is for functions","isArray() is for numbers, instanceof is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q29",question:"What is the difference between String.prototype.slice() and String.prototype.substring()?",options:["They are the same","slice() can use negative indices, substring() swaps parameters","slice() is for variables, substring() is for functions","slice() is for numbers, substring() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q30",question:"What is the difference between String.prototype.replace() and String.prototype.replaceAll()?",options:["They are the same","replace() replaces first occurrence, replaceAll() replaces all","replace() is for variables, replaceAll() is for functions","replace() is for numbers, replaceAll() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q31",question:"What is the difference between String.prototype.trim() and String.prototype.trimStart()?",options:["They are the same","trim() removes from both ends, trimStart() removes from start","trim() is for variables, trimStart() is for functions","trim() is for numbers, trimStart() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q32",question:"What is the difference between String.prototype.padStart() and String.prototype.padEnd()?",options:["They are the same","padStart() pads beginning, padEnd() pads end","padStart() is for variables, padEnd() is for functions","padStart() is for numbers, padEnd() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q33",question:"What is the difference between String.prototype.includes() and String.prototype.indexOf()?",options:["They are the same","includes() returns boolean, indexOf() returns index","includes() is for variables, indexOf() is for functions","includes() is for numbers, indexOf() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q34",question:"What is the difference between String.prototype.startsWith() and String.prototype.endsWith()?",options:["They are the same","startsWith() checks beginning, endsWith() checks end","startsWith() is for variables, endsWith() is for functions","startsWith() is for numbers, endsWith() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q35",question:"What is the difference between String.prototype.toLowerCase() and String.prototype.toUpperCase()?",options:["They are the same","toLowerCase() converts to lowercase, toUpperCase() converts to uppercase","toLowerCase() is for variables, toUpperCase() is for functions","toLowerCase() is for numbers, toUpperCase() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q36",question:"What is the difference between String.prototype.split() and String.prototype.match()?",options:["They are the same","split() splits into array, match() retrieves regex matches","split() is for variables, match() is for functions","split() is for numbers, match() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q37",question:"What is the difference between String.prototype.concat() and the + operator?",options:["They are the same","concat() joins strings, + operator is more commonly used","concat() is for variables, + is for functions","concat() is for numbers, + is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q38",question:"What is the difference between String.prototype.repeat() and String.prototype.padStart()?",options:["They are the same","repeat() creates copies, padStart() pads to length","repeat() is for variables, padStart() is for functions","repeat() is for numbers, padStart() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q39",question:"What is the difference between String.prototype.trim() and String.prototype.trimEnd()?",options:["They are the same","trim() removes from both ends, trimEnd() removes from end","trim() is for variables, trimEnd() is for functions","trim() is for numbers, trimEnd() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q40",question:"What is the difference between String.prototype.search() and String.prototype.match()?",options:["They are the same","search() returns index, match() returns array of matches","search() is for variables, match() is for functions","search() is for numbers, match() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q41",question:"What is the difference between String.prototype.indexOf() and String.prototype.lastIndexOf()?",options:["They are the same","indexOf() returns first occurrence, lastIndexOf() returns last occurrence","indexOf() is for variables, lastIndexOf() is for functions","indexOf() is for numbers, lastIndexOf() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q42",question:"What is the difference between String.prototype.charCodeAt() and String.prototype.codePointAt()?",options:["They are the same","charCodeAt() returns UTF-16 code unit, codePointAt() returns Unicode code point","charCodeAt() is for variables, codePointAt() is for functions","charCodeAt() is for numbers, codePointAt() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q43",question:"What is the difference between String.prototype.normalize() and String.prototype.localeCompare()?",options:["They are the same","normalize() returns Unicode Normalization Form, localeCompare() compares strings","normalize() is for variables, localeCompare() is for functions","normalize() is for numbers, localeCompare() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q44",question:"What is the difference between String.prototype.toLocaleLowerCase() and String.prototype.toLocaleUpperCase()?",options:["They are the same","toLocaleLowerCase() converts to lowercase, toLocaleUpperCase() converts to uppercase","toLocaleLowerCase() is for variables, toLocaleUpperCase() is for functions","toLocaleLowerCase() is for numbers, toLocaleUpperCase() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q45",question:"What is the difference between String.prototype.anchor() and String.prototype.link()?",options:["They are the same","anchor() creates anchor element, link() creates link element","anchor() is for variables, link() is for functions","anchor() is for numbers, link() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q46",question:"What is the difference between String.prototype.big() and String.prototype.small()?",options:["They are the same","big() creates big font, small() creates small font","big() is for variables, small() is for functions","big() is for numbers, small() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q47",question:"What is the difference between String.prototype.bold() and String.prototype.italics()?",options:["They are the same","bold() creates bold text, italics() creates italic text","bold() is for variables, italics() is for functions","bold() is for numbers, italics() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q48",question:"What is the difference between String.prototype.fixed() and String.prototype.strike()?",options:["They are the same","fixed() creates monospace font, strike() creates strikethrough text","fixed() is for variables, strike() is for functions","fixed() is for numbers, strike() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q49",question:"What is the difference between String.prototype.sub() and String.prototype.sup()?",options:["They are the same","sub() creates subscript text, sup() creates superscript text","sub() is for variables, sup() is for functions","sub() is for numbers, sup() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"},{id:"q50",question:"What is the difference between String.prototype.fontcolor() and String.prototype.fontsize()?",options:["They are the same","fontcolor() sets color, fontsize() sets size","fontcolor() is for variables, fontsize() is for functions","fontcolor() is for numbers, fontsize() is for strings"],correctAnswer:"1",category:"javascript",difficulty:"easy"}]}},d={id:"typescript-essentials",title:"TypeScript",description:"Learn TypeScript from basics to advanced concepts",level:"beginner",category:"programming",createdAt:new Date,updatedAt:new Date,sets:[{id:"typescript-beginner",title:"TypeScript Beginner",description:"Basic TypeScript concepts and features",category:"typescript",createdAt:new Date,updatedAt:new Date,cards:[{id:"typescript-b-1",front:"What is TypeScript?",back:"TypeScript is a typed superset of JavaScript that compiles to plain JavaScript, adding static type definitions.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-2",front:"What is type annotation?",back:"Type annotation is a way to explicitly declare the type of a variable, parameter, or function return value.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-3",front:"What is an interface?",back:"An interface is a TypeScript feature that defines a contract for object structure, specifying required properties and their types.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-4",front:"What is a type alias?",back:"A type alias is a way to create a new name for a type, making it easier to reuse complex types.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-5",front:"What is the purpose of the any type?",back:"The any type allows a variable to hold any type of value, effectively opting out of type checking.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-6",front:"What is the purpose of the unknown type?",back:"The unknown type is a type-safe alternative to any, requiring type checking before operations.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-7",front:"What is the purpose of the void type?",back:"The void type represents the absence of any type, commonly used for functions that don't return a value.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-8",front:"What is the purpose of the never type?",back:"The never type represents values that never occur, used for functions that always throw or never return.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-9",front:"What is the purpose of the null type?",back:"The null type represents the intentional absence of any object value.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-10",front:"What is the purpose of the undefined type?",back:"The undefined type represents a variable that has been declared but not assigned a value.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-11",front:"What is the purpose of the boolean type?",back:"The boolean type represents a logical entity with true or false values.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-12",front:"What is the purpose of the number type?",back:"The number type represents both integer and floating-point numbers.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-13",front:"What is the purpose of the string type?",back:"The string type represents a sequence of characters.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-14",front:"What is the purpose of the symbol type?",back:"The symbol type represents a unique identifier, used as object property keys.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-15",front:"What is the purpose of the bigint type?",back:"The bigint type represents integers of arbitrary precision.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-16",front:"What is the purpose of the object type?",back:"The object type represents any non-primitive type.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0},{id:"typescript-b-17",front:"What is the purpose of the array type?",back:"The array type represents an array of elements of a specific type.",category:"typescript",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"typescript-intermediate",title:"TypeScript Intermediate",description:"Intermediate TypeScript concepts and features",category:"typescript",createdAt:new Date,updatedAt:new Date,cards:[{id:"typescript-i-1",front:"What is a generic type?",back:"A generic type is a type that can work with different types, providing type safety while maintaining flexibility.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-2",front:"What is a union type?",back:"A union type is a type formed from two or more other types, representing values that may be any one of those types.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-3",front:"What is an intersection type?",back:"An intersection type combines multiple types into one, requiring an object to have all properties of each type.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-4",front:"What is a type guard?",back:"A type guard is a function that performs a runtime check to narrow down the type of a variable.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-5",front:"What is a literal type?",back:"A literal type is a type that represents a specific value, such as a specific string or number.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-6",front:"What is a tuple type?",back:"A tuple type is an array type with a fixed number of elements of specific types.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-7",front:"What is an enum?",back:"An enum is a way to define a set of named constants, making code more readable and maintainable.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-8",front:"What is a namespace?",back:"A namespace is a way to organize code into logical groups and prevent naming conflicts.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-9",front:"What is a module?",back:"A module is a way to organize code into separate files, with its own scope and exports.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-10",front:"What is a decorator?",back:"A decorator is a special kind of declaration that can be attached to a class, method, or property.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-11",front:"What is a mixin?",back:"A mixin is a way to reuse code across multiple classes, allowing for multiple inheritance.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-12",front:"What is a mapped type?",back:"A mapped type is a way to create a new type by transforming properties of an existing type.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-13",front:"What is a conditional type?",back:"A conditional type is a type that depends on a condition, similar to a ternary operator for types.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-14",front:"What is an indexed access type?",back:"An indexed access type is a way to access the type of a property using an index type.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-15",front:"What is a keyof type operator?",back:"The keyof type operator creates a union type of all property names of a given type.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-16",front:"What is a typeof type operator?",back:"The typeof type operator creates a type from the type of a value.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0},{id:"typescript-i-17",front:"What is an instanceof type guard?",back:"An instanceof type guard checks if an object is an instance of a specific class.",category:"typescript",difficulty:"medium",reviewCount:0,correctCount:0}]},{id:"typescript-advanced",title:"TypeScript Advanced",description:"Advanced TypeScript concepts and features",category:"typescript",createdAt:new Date,updatedAt:new Date,cards:[{id:"typescript-a-1",front:"What is a utility type?",back:"A utility type is a built-in type that helps with common type transformations.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-2",front:"What is the purpose of Partial<T>?",back:"Partial<T> makes all properties of type T optional.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-3",front:"What is the purpose of Required<T>?",back:"Required<T> makes all properties of type T required.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-4",front:"What is the purpose of Readonly<T>?",back:"Readonly<T> makes all properties of type T read-only.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-5",front:"What is the purpose of Pick<T, K>?",back:"Pick<T, K> creates a type with a subset of properties K from type T.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-6",front:"What is the purpose of Omit<T, K>?",back:"Omit<T, K> creates a type with all properties of T except those in K.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-7",front:"What is the purpose of Exclude<T, U>?",back:"Exclude<T, U> creates a type by excluding from T all types that are assignable to U.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-8",front:"What is the purpose of Extract<T, U>?",back:"Extract<T, U> creates a type by extracting from T all types that are assignable to U.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-9",front:"What is the purpose of NonNullable<T>?",back:"NonNullable<T> creates a type by excluding null and undefined from T.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-10",front:"What is the purpose of ReturnType<T>?",back:"ReturnType<T> creates a type from the return type of function type T.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-11",front:"What is the purpose of InstanceType<T>?",back:"InstanceType<T> creates a type from the instance type of a constructor function type T.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-12",front:"What is the purpose of ThisType<T>?",back:"ThisType<T> marks the type of this in a function or object literal.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-13",front:"What is the purpose of Parameters<T>?",back:"Parameters<T> creates a tuple type from the parameter types of function type T.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-14",front:"What is the purpose of ConstructorParameters<T>?",back:"ConstructorParameters<T> creates a tuple type from the parameter types of a constructor function type T.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-15",front:"What is the purpose of ThisParameterType<T>?",back:"ThisParameterType<T> extracts the type of the this parameter of function type T.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0},{id:"typescript-a-16",front:"What is the purpose of OmitThisParameter<T>?",back:"OmitThisParameter<T> creates a type from function type T with the this parameter removed.",category:"typescript",difficulty:"hard",reviewCount:0,correctCount:0}]}],quiz:{id:"typescript-quiz",title:"TypeScript Quiz",description:"Test your knowledge of TypeScript concepts",category:"typescript",passingScore:70,createdAt:new Date,updatedAt:new Date,questions:[{id:"q1",question:"What is TypeScript?",options:["A programming language","A typed superset of JavaScript","A database","A web framework"],correctAnswer:"1",category:"typescript",difficulty:"easy"},{id:"q2",question:"What is type annotation?",options:["A way to add comments to code","A way to declare variable types","A way to format code","A way to debug code"],correctAnswer:"1",category:"typescript",difficulty:"easy"},{id:"q3",question:"What is an interface?",options:["A way to add comments to code","A way to format code","A contract for object structure","A way to debug code"],correctAnswer:"2",category:"typescript",difficulty:"easy"},{id:"q4",question:"What is a type alias?",options:["A way to add comments to code","A way to format code","A way to debug code","A new name for a type"],correctAnswer:"3",category:"typescript",difficulty:"easy"},{id:"q5",question:"What is the purpose of the any type?",options:["To make code more readable","To make code more maintainable","To opt out of type checking","To make code more performant"],correctAnswer:"2",category:"typescript",difficulty:"easy"},{id:"q6",question:"What is the purpose of the unknown type?",options:["To make code more readable","To make code more maintainable","To make code more performant","A type-safe alternative to any"],correctAnswer:"3",category:"typescript",difficulty:"easy"},{id:"q7",question:"What is the purpose of the void type?",options:["To represent any type","To represent no type","To represent a function return type","To represent a variable type"],correctAnswer:"2",category:"typescript",difficulty:"easy"},{id:"q8",question:"What is the purpose of the never type?",options:["To represent any type","To represent no type","To represent values that never occur","To represent a variable type"],correctAnswer:"2",category:"typescript",difficulty:"easy"},{id:"q9",question:"What is the purpose of the null type?",options:["To represent any type","To represent no type","To represent a function return type","To represent the absence of a value"],correctAnswer:"3",category:"typescript",difficulty:"easy"},{id:"q10",question:"What is the purpose of the undefined type?",options:["To represent any type","To represent no type","To represent a function return type","To represent an unassigned variable"],correctAnswer:"3",category:"typescript",difficulty:"easy"},{id:"q11",question:"What is a generic type?",options:["A type that can only be used once","A type that can work with different types","A type that can only be used with classes","A type that can only be used with functions"],correctAnswer:"1",category:"typescript",difficulty:"medium"},{id:"q12",question:"What is a union type?",options:["A type that can only be used once","A type that can only be used with classes","A type that can only be used with functions","A type formed from multiple types"],correctAnswer:"3",category:"typescript",difficulty:"medium"},{id:"q13",question:"What is an intersection type?",options:["A type that can only be used once","A type that can only be used with classes","A type that combines multiple types","A type that can only be used with functions"],correctAnswer:"2",category:"typescript",difficulty:"medium"},{id:"q14",question:"What is a type guard?",options:["A way to add comments to code","A way to format code","A way to debug code","A function that narrows down types"],correctAnswer:"3",category:"typescript",difficulty:"medium"},{id:"q15",question:"What is a literal type?",options:["A type that can only be used once","A type that can only be used with classes","A type that represents a specific value","A type that can only be used with functions"],correctAnswer:"2",category:"typescript",difficulty:"medium"},{id:"q16",question:"What is a tuple type?",options:["A type that can only be used once","A type that can only be used with classes","A type that can only be used with functions","An array with fixed element types"],correctAnswer:"3",category:"typescript",difficulty:"medium"},{id:"q17",question:"What is an enum?",options:["A type that can only be used once","A type that can only be used with classes","A set of named constants","A type that can only be used with functions"],correctAnswer:"2",category:"typescript",difficulty:"medium"},{id:"q18",question:"What is a namespace?",options:["A type that can only be used once","A way to organize code","A type that can only be used with classes","A type that can only be used with functions"],correctAnswer:"1",category:"typescript",difficulty:"medium"},{id:"q19",question:"What is a module?",options:["A type that can only be used once","A type that can only be used with classes","A type that can only be used with functions","A way to organize code into files"],correctAnswer:"3",category:"typescript",difficulty:"medium"},{id:"q20",question:"What is a decorator?",options:["A type that can only be used once","A type that can only be used with classes","A special kind of declaration","A type that can only be used with functions"],correctAnswer:"2",category:"typescript",difficulty:"medium"},{id:"q21",question:"What is a utility type?",options:["A type that can only be used once","A type that can only be used with classes","A type that can only be used with functions","A built-in type for transformations"],correctAnswer:"3",category:"typescript",difficulty:"hard"},{id:"q22",question:"What is the purpose of Partial<T>?",options:["To make all properties required","To make all properties optional","To make all properties read-only","To make all properties nullable"],correctAnswer:"1",category:"typescript",difficulty:"hard"},{id:"q23",question:"What is the purpose of Required<T>?",options:["To make all properties optional","To make all properties required","To make all properties read-only","To make all properties nullable"],correctAnswer:"1",category:"typescript",difficulty:"hard"},{id:"q24",question:"What is the purpose of Readonly<T>?",options:["To make all properties optional","To make all properties required","To make all properties read-only","To make all properties nullable"],correctAnswer:"2",category:"typescript",difficulty:"hard"},{id:"q25",question:"What is the purpose of Pick<T, K>?",options:["To make all properties optional","To make all properties required","To make all properties read-only","To create a type with subset of properties"],correctAnswer:"3",category:"typescript",difficulty:"hard"},{id:"q26",question:"What is the purpose of Omit<T, K>?",options:["To make all properties optional","To make all properties required","To make all properties read-only","To create a type excluding properties"],correctAnswer:"3",category:"typescript",difficulty:"hard"},{id:"q27",question:"What is the purpose of Exclude<T, U>?",options:["To make all properties optional","To make all properties required","To make all properties read-only","To exclude types from a union"],correctAnswer:"3",category:"typescript",difficulty:"hard"},{id:"q28",question:"What is the purpose of Extract<T, U>?",options:["To make all properties optional","To make all properties required","To make all properties read-only","To extract types from a union"],correctAnswer:"3",category:"typescript",difficulty:"hard"},{id:"q29",question:"What is the purpose of NonNullable<T>?",options:["To make all properties optional","To make all properties required","To make all properties read-only","To exclude null and undefined"],correctAnswer:"3",category:"typescript",difficulty:"hard"},{id:"q30",question:"What is the purpose of ReturnType<T>?",options:["To make all properties optional","To make all properties required","To make all properties read-only","To get function return type"],correctAnswer:"3",category:"typescript",difficulty:"hard"}]}},u={id:"git-github-basics",title:"Git & GitHub Essentials",description:"Master version control with Git and GitHub",level:"beginner",category:"version-control",createdAt:new Date,updatedAt:new Date,sets:[{id:"git-basics",title:"Basic Git Commands",description:"Essential Git commands for version control",category:"git",createdAt:new Date,updatedAt:new Date,cards:[{id:"gb-1",front:"What is the command to initialize a new Git repository?",back:"git init - This command creates a new Git repository in the current directory.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-2",front:"How do you check the status of your Git repository?",back:"git status - Shows the current state of your working directory and staging area.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-3",front:"What command adds files to the staging area?",back:"git add <filename> or git add . - Adds files to the staging area. Use . to add all files.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-4",front:"How do you commit changes in Git?",back:'git commit -m "your message" - Creates a new commit with the staged changes and a descriptive message.',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-5",front:"What command shows the commit history?",back:"git log - Displays the commit history with details like author, date, and commit message.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-6",front:"How do you view the differences between your working directory and the last commit?",back:"git diff - Shows the differences between your working directory and the last commit.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-7",front:"What command shows the differences between staged changes and the last commit?",back:"git diff --staged - Shows the differences between staged changes and the last commit.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-8",front:"How do you remove a file from Git tracking while keeping it in your working directory?",back:"git rm --cached <filename> - Removes the file from Git tracking but keeps it in your working directory.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-9",front:"What command shows the commit history in a more concise format?",back:"git log --oneline - Shows each commit on a single line with its hash and message.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-10",front:"How do you view the changes in a specific commit?",back:"git show <commit-hash> - Shows the changes made in the specified commit.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-11",front:"What command helps you create a more detailed commit message?",back:"git commit - Opens your default editor to write a detailed commit message.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-12",front:"How do you amend the last commit message?",back:'git commit --amend -m "new message" - Changes the message of the last commit.',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-13",front:"What command shows the current Git configuration?",back:"git config --list - Shows all Git configuration settings.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-14",front:"How do you set your Git username and email?",back:'git config --global user.name "Your Name" and git config --global user.email "your.email@example.com"',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-15",front:"What command helps you find a specific commit by its message?",back:'git log --grep="search term" - Searches commit messages for the specified term.',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-16",front:"How do you view the commit history of a specific file?",back:"git log --follow <filename> - Shows the commit history of a file, including its previous names.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-17",front:"What command shows the changes made by each commit?",back:"git log -p - Shows the patch (changes) for each commit.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-18",front:"How do you create a new commit that undoes all changes from a specific commit?",back:"git revert <commit-hash> - Creates a new commit that undoes the changes from the specified commit.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-19",front:"What command helps you clean up untracked files?",back:"git clean -n (dry run) or git clean -f (force) - Removes untracked files from the working directory.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gb-20",front:"How do you view the commit history in a graphical format?",back:"git log --graph --oneline --all - Shows a graphical representation of the commit history.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"git-branching",title:"Git Branching",description:"Working with branches in Git",category:"git",createdAt:new Date,updatedAt:new Date,cards:[{id:"br-1",front:"How do you create a new branch?",back:"git branch <branch-name> - Creates a new branch. Use git checkout -b <branch-name> to create and switch to it.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-2",front:"What command switches to a different branch?",back:"git checkout <branch-name> - Switches to the specified branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-3",front:"How do you merge a branch into your current branch?",back:"git merge <branch-name> - Merges the specified branch into your current branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-4",front:"What command shows all branches?",back:"git branch - Lists all local branches. Use git branch -a to see all branches including remote ones.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-5",front:"How do you delete a branch?",back:"git branch -d <branch-name> - Deletes the specified branch. Use -D for force delete.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-6",front:"How do you create a new branch from a specific commit?",back:"git branch <branch-name> <commit-hash> - Creates a new branch starting from the specified commit.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-7",front:"What command shows the relationship between branches?",back:"git log --graph --oneline --all - Shows a graphical representation of branch relationships.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-8",front:"How do you rename a branch?",back:"git branch -m <old-name> <new-name> - Renames a branch locally.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-9",front:"What command shows which branches are already merged into the current branch?",back:"git branch --merged - Lists branches that have been merged into the current branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-10",front:"How do you create a new branch and switch to it in one command?",back:"git checkout -b <branch-name> - Creates and switches to a new branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-11",front:"What command helps you track a remote branch?",back:"git branch --set-upstream-to=origin/<branch-name> <local-branch-name>",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-12",front:"How do you merge a specific commit into your current branch?",back:"git cherry-pick <commit-hash> - Applies the changes from a specific commit to your current branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-13",front:"What command shows the commit history of a specific branch?",back:"git log <branch-name> - Shows the commit history of the specified branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-14",front:"How do you create a new branch from a remote branch?",back:"git checkout -b <local-branch-name> origin/<remote-branch-name>",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-15",front:"What command helps you find which branch contains a specific commit?",back:"git branch --contains <commit-hash> - Shows all branches that contain the specified commit.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-16",front:"How do you merge multiple branches at once?",back:"git merge <branch1> <branch2> - Merges multiple branches into your current branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-17",front:"What command shows the differences between your current branch and another branch?",back:"git diff <branch-name> - Shows the differences between your current branch and the specified branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-18",front:"How do you create a new branch from a tag?",back:"git checkout -b <branch-name> <tag-name> - Creates a new branch from a specific tag.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-19",front:"What command helps you find which branches have been merged into the main branch?",back:"git branch --merged main - Lists branches that have been merged into the main branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"br-20",front:"How do you create a new branch from a specific file in another branch?",back:"git checkout <branch-name> -- <file-path> - Gets a specific file from another branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"github-commands",title:"GitHub Commands",description:"Working with remote repositories on GitHub",category:"git",createdAt:new Date,updatedAt:new Date,cards:[{id:"gh-1",front:"How do you add a remote repository?",back:'git remote add origin <repository-url> - Adds a remote repository named "origin" with the specified URL.',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-2",front:"What command pushes changes to GitHub?",back:"git push origin <branch-name> - Pushes your local commits to the remote repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-3",front:"How do you pull changes from GitHub?",back:"git pull origin <branch-name> - Fetches and merges changes from the remote repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-4",front:"What command clones a repository?",back:"git clone <repository-url> - Creates a local copy of a remote repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-5",front:"How do you fetch changes without merging?",back:"git fetch origin - Downloads changes from the remote repository without merging them.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-6",front:"How do you update your local repository with changes from the remote?",back:"git pull --rebase origin <branch-name> - Fetches and rebases your local changes on top of remote changes.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-7",front:"What command shows the remote repository information?",back:"git remote -v - Shows the URLs of the remote repositories.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-8",front:"How do you add multiple remote repositories?",back:"git remote add <remote-name> <repository-url> - Adds a new remote with a custom name.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-9",front:"What command helps you update the remote repository URL?",back:"git remote set-url origin <new-url> - Updates the URL of the remote repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-10",front:"How do you push a new branch to the remote repository?",back:"git push -u origin <branch-name> - Pushes a new branch and sets up tracking.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-11",front:"What command shows the differences between your local and remote branches?",back:"git diff origin/<branch-name> - Shows the differences between your local and remote branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-12",front:"How do you fetch changes from a specific remote?",back:"git fetch <remote-name> - Downloads changes from the specified remote repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-13",front:"What command helps you update your local repository with all remote changes?",back:"git pull --all - Fetches and merges changes from all remote repositories.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-14",front:"How do you push tags to the remote repository?",back:"git push origin --tags - Pushes all tags to the remote repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-15",front:"What command shows the remote branches?",back:"git branch -r - Lists all remote branches.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-16",front:"How do you delete a remote branch?",back:"git push origin --delete <branch-name> - Deletes a branch on the remote repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-17",front:"What command helps you update your local repository with remote changes without merging?",back:"git fetch --prune - Removes references to deleted remote branches and updates your local repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-18",front:"How do you push changes to a specific remote?",back:"git push <remote-name> <branch-name> - Pushes changes to the specified remote repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-19",front:"What command shows the commit history of a remote branch?",back:"git log origin/<branch-name> - Shows the commit history of a remote branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"gh-20",front:"How do you update your local repository with changes from a specific remote branch?",back:"git pull origin <remote-branch>:<local-branch> - Pulls changes from a specific remote branch to a local branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"git-advanced",title:"Advanced Git Commands",description:"Advanced Git operations and troubleshooting",category:"git",createdAt:new Date,updatedAt:new Date,cards:[{id:"adv-1",front:"How do you undo the last commit?",back:"git reset HEAD~1 - Undoes the last commit while keeping the changes staged. Add --hard to discard changes.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-2",front:"What command shows the differences between branches?",back:"git diff <branch1>..<branch2> - Shows the differences between two branches.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-3",front:"How do you stash changes?",back:"git stash - Temporarily saves your changes. Use git stash pop to apply them later.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-4",front:"What command rebases your branch?",back:"git rebase <base-branch> - Replays your changes on top of the specified branch.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-5",front:"How do you resolve merge conflicts?",back:"1. Edit the conflicted files\n2. git add the resolved files\n3. git commit to complete the merge",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-6",front:"How do you create a new commit that combines multiple commits?",back:'git reset --soft HEAD~n (where n is the number of commits) then git commit -m "new message"',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-7",front:"What command helps you find which commit introduced a bug?",back:"git bisect start and git bisect good/bad - Uses binary search to find the commit that introduced a bug.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-8",front:"How do you create a new commit that undoes changes from multiple commits?",back:"git revert <commit1>..<commit2> - Creates new commits that undo the changes from a range of commits.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-9",front:"What command helps you clean up your repository?",back:"git gc - Runs garbage collection to optimize your repository.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-10",front:"How do you create a new commit that combines changes from multiple branches?",back:"git merge --no-ff <branch1> <branch2> - Creates a merge commit that combines changes from multiple branches.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-11",front:"What command helps you find which commit introduced a specific line of code?",back:"git blame <filename> - Shows who last modified each line of a file and when.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-12",front:"How do you create a new commit that splits a previous commit?",back:'git reset --soft HEAD~1 then git reset HEAD <file> then git commit -m "first part" then git add <file> then git commit -m "second part"',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-13",front:"What command helps you find which commit introduced a specific change?",back:'git log -S "search term" - Searches for commits that introduced or removed the specified term.',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-14",front:"How do you create a new commit that combines changes from multiple commits?",back:'git reset --soft HEAD~n then git commit -m "combined commit" - Combines multiple commits into one.',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-15",front:"What command helps you find which commit introduced a specific file?",back:"git log --diff-filter=A -- <filename> - Shows the commit that added the specified file.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-16",front:"How do you create a new commit that undoes changes from a specific file?",back:'git checkout <commit-hash> -- <filename> then git commit -m "revert file" - Reverts a specific file to a previous state.',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-17",front:"What command helps you find which commit removed a specific file?",back:"git log --diff-filter=D -- <filename> - Shows the commit that deleted the specified file.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-18",front:"How do you create a new commit that combines changes from multiple files?",back:'git add <file1> <file2> then git commit -m "combined changes" - Combines changes from multiple files into one commit.',category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-19",front:"What command helps you find which commit modified a specific line?",back:"git log -L <start>,<end>:<filename> - Shows the commit that modified the specified lines.",category:"git",difficulty:"easy",reviewCount:0,correctCount:0},{id:"adv-20",front:"How do you create a new commit that splits changes from a specific file?",back:'git reset HEAD <file> then git add -p <file> then git commit -m "first part" then git add <file> then git commit -m "second part"',category:"git",difficulty:"easy",reviewCount:0,correctCount:0}]}],quiz:{id:"git-github-quiz",title:"Git & GitHub Quiz",description:"Test your knowledge of Git and GitHub",category:"git",passingScore:70,createdAt:new Date,updatedAt:new Date,questions:[{id:"q1",question:"What is the command to initialize a new Git repository?",options:["git start","git init","git new","git create"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q2",question:"How do you check the status of your Git repository?",options:["git check","git status","git state","git info"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q3",question:"What command adds files to the staging area?",options:["git stage","git include","git add","git track"],correctAnswer:"2",category:"git",difficulty:"easy"},{id:"q4",question:"What command is used to temporarily save changes without committing?",options:["git save","git store","git stash","git cache"],correctAnswer:"2",category:"git",difficulty:"easy"},{id:"q5",question:"Which command shows the differences between your working directory and the staging area?",options:["git show","git diff","git compare","git status"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q6",question:"What command shows the differences between staged changes and the last commit?",options:["git diff","git diff --staged","git show","git status"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q7",question:"How do you create a new branch from a specific commit?",options:["git branch <branch-name>","git branch <branch-name> <commit-hash>","git checkout <commit-hash>","git create-branch <branch-name> <commit-hash>"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q8",question:"What command helps you find which commit introduced a bug?",options:["git find-bug","git debug","git bisect","git search-bug"],correctAnswer:"2",category:"git",difficulty:"easy"},{id:"q9",question:"How do you update your local repository with changes from all remotes?",options:["git pull --all","git fetch --all","git update --all","git sync --all"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q10",question:"What command shows the commit history in a graphical format?",options:["git show-graph","git log --graph","git history --graph","git view-graph"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q11",question:"How do you stage specific parts of a file?",options:["git add -p","git stage -p","git add --partial","git stage --partial"],correctAnswer:"0",category:"git",difficulty:"easy"},{id:"q12",question:"What command helps you find which commit introduced a specific line of code?",options:["git find-line","git blame","git search-line","git show-line"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q13",question:"How do you push a new branch to the remote repository?",options:["git push -u origin <branch-name>","git push origin <branch-name>","git push --new origin <branch-name>","git push --branch origin <branch-name>"],correctAnswer:"0",category:"git",difficulty:"easy"},{id:"q14",question:"What command shows the relationship between branches?",options:["git show-branches","git branch-relations","git log --graph","git view-branches"],correctAnswer:"2",category:"git",difficulty:"easy"},{id:"q15",question:"How do you create a new commit that undoes changes from multiple commits?",options:["git undo <commit1>..<commit2>","git revert <commit1>..<commit2>","git remove <commit1>..<commit2>","git delete <commit1>..<commit2>"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q16",question:"What command helps you clean up your repository?",options:["git clean","git optimize","git gc","git maintenance"],correctAnswer:"2",category:"git",difficulty:"easy"},{id:"q17",question:"How do you update the remote repository URL?",options:["git remote update origin <new-url>","git remote set-url origin <new-url>","git remote change origin <new-url>","git remote modify origin <new-url>"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q18",question:"What command shows the differences between your local and remote branches?",options:["git diff origin/<branch-name>","git compare origin/<branch-name>","git show-diff origin/<branch-name>","git view-diff origin/<branch-name>"],correctAnswer:"0",category:"git",difficulty:"easy"},{id:"q19",question:"How do you create a new commit that combines changes from multiple files?",options:["git commit --combine <file1> <file2>","git add <file1> <file2> && git commit","git merge-files <file1> <file2>","git combine <file1> <file2>"],correctAnswer:"1",category:"git",difficulty:"easy"},{id:"q20",question:"What command helps you find which commit introduced a specific change in all files?",options:['git log -p | grep "search term"','git search-all "search term"','git find-all "search term"','git show-all "search term"'],correctAnswer:"0",category:"git",difficulty:"easy"}]}},l={id:"nodejs-basics",title:"Node.js",description:"Learn Node.js from basics to advanced concepts",level:"beginner",category:"backend",createdAt:new Date,updatedAt:new Date,sets:[{id:"nodejs-beginner",title:"Node.js Beginner",description:"Basic Node.js concepts and features",category:"nodejs",createdAt:new Date,updatedAt:new Date,cards:[{id:"nodejs-b-1",front:"What is Node.js?",back:"Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine that allows you to run JavaScript on the server side.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-2",front:"What is the purpose of require()?",back:"require() is a function used to import modules in Node.js, allowing you to use code from other files or installed packages.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-3",front:"What is the purpose of module.exports?",back:"module.exports is an object that defines what a module exports, allowing you to make functions, objects, or values available to other files.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-4",front:"What is npm?",back:"npm (Node Package Manager) is the default package manager for Node.js, used to install and manage dependencies.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-5",front:"What is package.json?",back:"package.json is a file that contains metadata about your Node.js project, including dependencies, scripts, and project information.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-6",front:"What is the purpose of __dirname?",back:"__dirname is a global variable that contains the directory name of the currently executing file.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-7",front:"What is the purpose of __filename?",back:"__filename is a global variable that contains the file name of the currently executing file.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-8",front:"What is the purpose of process.argv?",back:"process.argv is an array containing the command line arguments passed when the Node.js process was launched.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-9",front:"What is the purpose of process.exit()?",back:"process.exit() is a method that terminates the Node.js process with the specified exit code.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-10",front:"What is the purpose of process.cwd()?",back:"process.cwd() returns the current working directory of the Node.js process.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-11",front:"What is the purpose of process.env?",back:"process.env is an object containing the user environment variables.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-12",front:"What is the purpose of process.nextTick()?",back:"process.nextTick() adds a callback to the next tick queue, which will be executed after the current operation completes.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-13",front:"What is the purpose of process.on()?",back:"process.on() is used to register event listeners for process events.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-14",front:"What is the purpose of process.stdout?",back:"process.stdout is a writable stream that represents the standard output of the Node.js process.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-15",front:"What is the purpose of process.stderr?",back:"process.stderr is a writable stream that represents the standard error output of the Node.js process.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-16",front:"What is the purpose of process.stdin?",back:"process.stdin is a readable stream that represents the standard input of the Node.js process.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0},{id:"nodejs-b-17",front:"What is the purpose of process.versions?",back:"process.versions is an object containing the version strings of Node.js and its dependencies.",category:"nodejs",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"nodejs-intermediate",title:"Node.js Intermediate",description:"Intermediate Node.js concepts and features",category:"nodejs",createdAt:new Date,updatedAt:new Date,cards:[{id:"nodejs-i-1",front:"What is the purpose of Buffer?",back:"Buffer is a class that handles binary data in Node.js, allowing you to work with streams of binary data.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-2",front:"What is the purpose of Stream?",back:"Stream is an abstract interface for working with streaming data in Node.js, allowing you to handle data that comes in chunks.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-3",front:"What is the purpose of EventEmitter?",back:"EventEmitter is a class that provides an event-driven architecture, allowing objects to communicate with each other through events.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-4",front:"What is the purpose of fs.promises?",back:"fs.promises provides a promise-based version of the Node.js file system module.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-5",front:"What is the purpose of path.join()?",back:"path.join() joins all given path segments together using the platform-specific separator.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-6",front:"What is the purpose of path.resolve()?",back:"path.resolve() resolves a sequence of paths or path segments into an absolute path.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-7",front:"What is the purpose of path.parse()?",back:"path.parse() returns an object whose properties represent significant elements of the path.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-8",front:"What is the purpose of path.format()?",back:"path.format() returns a path string from an object, the opposite of path.parse().",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-9",front:"What is the purpose of path.normalize()?",back:"path.normalize() normalizes the given path, resolving '..' and '.' segments.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-10",front:"What is the purpose of path.isAbsolute()?",back:"path.isAbsolute() determines if path is an absolute path.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-11",front:"What is the purpose of path.relative()?",back:"path.relative() returns the relative path from from to to based on the current working directory.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-12",front:"What is the purpose of path.dirname()?",back:"path.dirname() returns the directory name of a path.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-13",front:"What is the purpose of path.basename()?",back:"path.basename() returns the last portion of a path.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-14",front:"What is the purpose of path.extname()?",back:"path.extname() returns the extension of the path.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-15",front:"What is the purpose of path.sep?",back:"path.sep provides the platform-specific path segment separator.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-16",front:"What is the purpose of path.delimiter?",back:"path.delimiter provides the platform-specific path delimiter.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0},{id:"nodejs-i-17",front:"What is the purpose of path.posix?",back:"path.posix provides access to POSIX specific implementations of the path methods.",category:"nodejs",difficulty:"medium",reviewCount:0,correctCount:0}]},{id:"nodejs-advanced",title:"Node.js Advanced",description:"Advanced Node.js concepts and features",category:"nodejs",createdAt:new Date,updatedAt:new Date,cards:[{id:"nodejs-a-1",front:"What is the purpose of Worker Threads?",back:"Worker Threads allow you to run JavaScript in parallel, enabling CPU-intensive tasks to be executed without blocking the main thread.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-2",front:"What is the purpose of Cluster?",back:"Cluster is a module that allows you to create child processes that share server ports, enabling you to scale your Node.js application across multiple CPU cores.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-3",front:"What is the purpose of the Event Loop?",back:"The Event Loop is a mechanism that allows Node.js to perform non-blocking I/O operations, despite JavaScript being single-threaded, by offloading operations to the system kernel whenever possible.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-4",front:"What is the purpose of process.hrtime()?",back:"process.hrtime() returns the current high-resolution real time in a [seconds, nanoseconds] tuple.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-5",front:"What is the purpose of process.memoryUsage()?",back:"process.memoryUsage() returns an object describing the memory usage of the Node.js process.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-6",front:"What is the purpose of process.cpuUsage()?",back:"process.cpuUsage() returns the user and system CPU time usage of the current process.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-7",front:"What is the purpose of process.uptime()?",back:"process.uptime() returns the number of seconds the current Node.js process has been running.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-8",front:"What is the purpose of process.kill()?",back:"process.kill() sends a signal to a process identified by pid.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-9",front:"What is the purpose of process.abort()?",back:"process.abort() causes the Node.js process to exit immediately and generate a core file.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-10",front:"What is the purpose of process.chdir()?",back:"process.chdir() changes the current working directory of the Node.js process.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-11",front:"What is the purpose of process.umask()?",back:"process.umask() sets or returns the process's file mode creation mask.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-12",front:"What is the purpose of process.getuid()?",back:"process.getuid() returns the numeric user identity of the process.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-13",front:"What is the purpose of process.getgid()?",back:"process.getgid() returns the numeric group identity of the process.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-14",front:"What is the purpose of process.setuid()?",back:"process.setuid() sets the user identity of the process.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-15",front:"What is the purpose of process.setgid()?",back:"process.setgid() sets the group identity of the process.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0},{id:"nodejs-a-16",front:"What is the purpose of process.getgroups()?",back:"process.getgroups() returns an array with the supplementary group IDs.",category:"nodejs",difficulty:"hard",reviewCount:0,correctCount:0}]}],quiz:{id:"nodejs-quiz",title:"Node.js Quiz",description:"Test your knowledge of Node.js concepts",category:"nodejs",passingScore:70,createdAt:new Date,updatedAt:new Date,questions:[{id:"q1",question:"What is Node.js?",options:["A programming language","A JavaScript runtime","A database","A web browser"],correctAnswer:"1",category:"nodejs",difficulty:"easy"},{id:"q2",question:"What is npm?",options:["Node Package Manager","Node Process Manager","Node Program Manager","Node Project Manager"],correctAnswer:"0",category:"nodejs",difficulty:"easy"},{id:"q3",question:"What is the purpose of package.json?",options:["To store JavaScript code","To store project metadata and dependencies","To store HTML templates","To store CSS styles"],correctAnswer:"1",category:"nodejs",difficulty:"easy"},{id:"q4",question:"What is the purpose of __dirname?",options:["To get the current file name","To get the current directory name","To get the current working directory","To get the current process ID"],correctAnswer:"1",category:"nodejs",difficulty:"easy"},{id:"q5",question:"What is the purpose of process.argv?",options:["To access environment variables","To access command line arguments","To access file system","To access network interfaces"],correctAnswer:"1",category:"nodejs",difficulty:"easy"},{id:"q6",question:"What is the purpose of process.env?",options:["To access command line arguments","To access environment variables","To access file system","To access network interfaces"],correctAnswer:"1",category:"nodejs",difficulty:"easy"},{id:"q7",question:"What is the purpose of process.stdout?",options:["Standard error output","Standard input","Standard output","Standard warning output"],correctAnswer:"2",category:"nodejs",difficulty:"easy"},{id:"q8",question:"What is the purpose of process.stderr?",options:["Standard output","Standard input","Standard error output","Standard warning output"],correctAnswer:"2",category:"nodejs",difficulty:"easy"},{id:"q9",question:"What is the purpose of process.stdin?",options:["Standard output","Standard error output","Standard input","Standard warning output"],correctAnswer:"2",category:"nodejs",difficulty:"easy"},{id:"q10",question:"What is the purpose of process.versions?",options:["To get the current process ID","To get the current working directory","To get Node.js and dependency versions","To get the current file name"],correctAnswer:"2",category:"nodejs",difficulty:"easy"},{id:"q11",question:"What is the purpose of Buffer?",options:["To handle HTTP requests","To handle binary data","To handle file system operations","To handle network operations"],correctAnswer:"1",category:"nodejs",difficulty:"medium"},{id:"q12",question:"What is the purpose of Stream?",options:["To handle HTTP requests","To handle file system operations","To handle streaming data","To handle network operations"],correctAnswer:"2",category:"nodejs",difficulty:"medium"},{id:"q13",question:"What is the purpose of EventEmitter?",options:["To handle HTTP requests","To handle file system operations","To handle network operations","To handle event-driven architecture"],correctAnswer:"3",category:"nodejs",difficulty:"medium"},{id:"q14",question:"What is the purpose of fs.promises?",options:["To handle HTTP requests","To handle file system operations with promises","To handle network operations","To handle event-driven architecture"],correctAnswer:"1",category:"nodejs",difficulty:"medium"},{id:"q15",question:"What is the purpose of path.join()?",options:["To split a path","To join path segments","To normalize a path","To resolve a path"],correctAnswer:"1",category:"nodejs",difficulty:"medium"},{id:"q16",question:"What is the purpose of path.resolve()?",options:["To split a path","To join path segments","To normalize a path","To resolve a path to absolute path"],correctAnswer:"3",category:"nodejs",difficulty:"medium"},{id:"q17",question:"What is the purpose of path.parse()?",options:["To split a path","To join path segments","To parse a path into segments","To resolve a path"],correctAnswer:"2",category:"nodejs",difficulty:"medium"},{id:"q18",question:"What is the purpose of path.format()?",options:["To split a path","To join path segments","To format path segments into a path","To resolve a path"],correctAnswer:"2",category:"nodejs",difficulty:"medium"},{id:"q19",question:"What is the purpose of path.normalize()?",options:["To split a path","To join path segments","To normalize a path","To resolve a path"],correctAnswer:"2",category:"nodejs",difficulty:"medium"},{id:"q20",question:"What is the purpose of path.isAbsolute()?",options:["To split a path","To join path segments","To check if a path is absolute","To resolve a path"],correctAnswer:"2",category:"nodejs",difficulty:"medium"},{id:"q21",question:"What is the purpose of Worker Threads?",options:["To handle HTTP requests","To handle file system operations","To run JavaScript in parallel","To handle network operations"],correctAnswer:"2",category:"nodejs",difficulty:"hard"},{id:"q22",question:"What is the purpose of Cluster?",options:["To handle HTTP requests","To handle file system operations","To handle network operations","To scale Node.js across CPU cores"],correctAnswer:"3",category:"nodejs",difficulty:"hard"},{id:"q23",question:"What is the purpose of the Event Loop?",options:["To handle HTTP requests","To handle file system operations","To handle network operations","To perform non-blocking I/O operations"],correctAnswer:"3",category:"nodejs",difficulty:"hard"},{id:"q24",question:"What is the purpose of process.hrtime()?",options:["To get current time","To get high-resolution real time","To get process uptime","To get process memory usage"],correctAnswer:"1",category:"nodejs",difficulty:"hard"},{id:"q25",question:"What is the purpose of process.memoryUsage()?",options:["To get current time","To get high-resolution real time","To get process uptime","To get process memory usage"],correctAnswer:"3",category:"nodejs",difficulty:"hard"},{id:"q26",question:"What is the purpose of process.cpuUsage()?",options:["To get current time","To get high-resolution real time","To get CPU time usage","To get process memory usage"],correctAnswer:"2",category:"nodejs",difficulty:"hard"},{id:"q27",question:"What is the purpose of process.uptime()?",options:["To get current time","To get high-resolution real time","To get process uptime","To get process memory usage"],correctAnswer:"2",category:"nodejs",difficulty:"hard"},{id:"q28",question:"What is the purpose of process.kill()?",options:["To get current time","To get high-resolution real time","To send a signal to a process","To get process memory usage"],correctAnswer:"2",category:"nodejs",difficulty:"hard"},{id:"q29",question:"What is the purpose of process.abort()?",options:["To get current time","To get high-resolution real time","To exit and generate core file","To get process memory usage"],correctAnswer:"2",category:"nodejs",difficulty:"hard"},{id:"q30",question:"What is the purpose of process.chdir()?",options:["To get current time","To get high-resolution real time","To change working directory","To get process memory usage"],correctAnswer:"2",category:"nodejs",difficulty:"hard"}]}},p={id:"express-basics",title:"Express.js Basics",description:"Learn the fundamentals of Express.js web framework",level:"intermediate",sets:[{id:"express-fundamentals",title:"Express Fundamentals",description:"Core concepts and setup of Express.js",category:"framework",cards:[{id:"ef-1",front:"What is Express.js?",back:"Express.js is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.",category:"framework",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-2",front:"How do you install Express.js?",back:"You can install Express.js using npm: npm install express, or yarn: yarn add express.",category:"setup",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-3",front:"What is the basic Express.js server setup?",back:"const express = require('express'); const app = express(); app.listen(3000, () => { console.log('Server running on port 3000'); });",category:"setup",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-4",front:"What is middleware in Express.js?",back:"Middleware functions are functions that have access to the request object (req), the response object (res), and the next middleware function in the application's request-response cycle.",category:"concepts",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-5",front:"How do you create a GET route in Express.js?",back:"app.get('/path', (req, res) => { res.send('Hello World'); });",category:"routing",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-6",front:"How do you create a POST route in Express.js?",back:"app.post('/path', (req, res) => { res.send('Data received'); });",category:"routing",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-7",front:"What is the purpose of app.use()?",back:"app.use() is used to mount middleware functions at a specified path. It's executed every time the app receives a request.",category:"middleware",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-8",front:"How do you serve static files in Express.js?",back:"app.use(express.static('public')); This serves files from the public directory.",category:"static-files",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-9",front:"What is the purpose of express.json() middleware?",back:"express.json() is a built-in middleware that parses incoming requests with JSON payloads. It's based on body-parser.",category:"middleware",difficulty:"medium",reviewCount:0,correctCount:0},{id:"ef-10",front:"How do you handle URL parameters in Express.js?",back:"app.get('/users/:id', (req, res) => { const userId = req.params.id; });",category:"routing",difficulty:"medium",reviewCount:0,correctCount:0}]},{id:"express-beginner",title:"Express Beginner",description:"Basic Express.js concepts and features",category:"express",createdAt:new Date,updatedAt:new Date,cards:[{id:"express-b-1",front:"What is Express.js?",back:"Express.js is a web application framework for Node.js that provides a robust set of features for web and mobile applications.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-2",front:"What is middleware in Express?",back:"Middleware in Express are functions that have access to the request object (req), the response object (res), and the next middleware function in the application's request-response cycle.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-3",front:"What is a route in Express?",back:"A route in Express is a combination of a URL pattern and an HTTP method that defines how the application responds to client requests.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-4",front:"What is the purpose of app.get()?",back:"app.get() is used to handle GET requests at a specified path, defining what happens when a client makes a GET request to that path.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-5",front:"What is the purpose of app.post()?",back:"app.post() is used to handle POST requests at a specified path, defining what happens when a client makes a POST request to that path.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-6",front:"What is the purpose of app.put()?",back:"app.put() is used to handle PUT requests at a specified path, defining what happens when a client makes a PUT request to that path.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-7",front:"What is the purpose of app.delete()?",back:"app.delete() is used to handle DELETE requests at a specified path, defining what happens when a client makes a DELETE request to that path.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-8",front:"What is the purpose of res.send()?",back:"res.send() is used to send a response to the client, automatically setting the Content-Type header based on the type of data being sent.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-9",front:"What is the purpose of res.json()?",back:"res.json() is used to send a JSON response to the client, automatically setting the Content-Type header to application/json.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-10",front:"What is the purpose of res.redirect()?",back:"res.redirect() is used to redirect the client to a different URL, sending a 302 Found response by default.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-11",front:"What is the purpose of res.status()?",back:"res.status() is used to set the HTTP status code of the response, allowing you to send different status codes to the client.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-12",front:"What is the purpose of req.params?",back:"req.params is an object containing properties mapped to the named route parameters, allowing you to access URL parameters.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-13",front:"What is the purpose of req.query?",back:"req.query is an object containing a property for each query string parameter in the route, allowing you to access query parameters.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-14",front:"What is the purpose of req.body?",back:"req.body is an object containing the parsed request body, populated by body-parser middleware, allowing you to access POST data.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-15",front:"What is the purpose of req.method?",back:"req.method is a string containing the HTTP method of the request, allowing you to determine the type of request.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-16",front:"What is the purpose of req.path?",back:"req.path is a string containing the path portion of the request URL, allowing you to access the request path.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0},{id:"express-b-17",front:"What is the purpose of req.get()?",back:"req.get() is a function that returns the specified HTTP request header field, allowing you to access request headers.",category:"express",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"express-intermediate",title:"Express Intermediate",description:"Intermediate Express.js concepts and features",category:"express",createdAt:new Date,updatedAt:new Date,cards:[{id:"express-i-1",front:"What is the purpose of app.use()?",back:"app.use() is used to mount middleware functions at a specified path, or to mount middleware for all routes if no path is specified.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-2",front:"What is the purpose of express.Router()?",back:"express.Router() is used to create a new router object, allowing you to modularize route handlers and create a mini-application.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-3",front:"What is the purpose of res.render()?",back:"res.render() is used to render a view template and send the rendered HTML string to the client, commonly used with template engines.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-4",front:"What is the purpose of app.all()?",back:"app.all() is used to handle all HTTP methods at a specified path, defining what happens when a client makes any type of request to that path.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-5",front:"What is the purpose of app.param()?",back:"app.param() is used to add callback triggers to route parameters, allowing you to perform operations on route parameters before they are passed to route handlers.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-6",front:"What is the purpose of app.route()?",back:"app.route() is used to create a chainable route handler for a path, allowing you to define multiple HTTP method handlers for the same path.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-7",front:"What is the purpose of res.set()?",back:"res.set() is used to set HTTP response headers, allowing you to customize the headers sent to the client.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-8",front:"What is the purpose of res.cookie()?",back:"res.cookie() is used to set a cookie in the response, allowing you to store data on the client's browser.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-9",front:"What is the purpose of res.clearCookie()?",back:"res.clearCookie() is used to clear a cookie in the response, removing it from the client's browser.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-10",front:"What is the purpose of req.cookies?",back:"req.cookies is an object containing the cookies sent by the request, populated by cookie-parser middleware.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-11",front:"What is the purpose of req.headers?",back:"req.headers is an object containing the HTTP headers sent by the request, allowing you to access request headers.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-12",front:"What is the purpose of req.protocol?",back:"req.protocol is a string containing the request protocol, allowing you to determine if the request is HTTP or HTTPS.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-13",front:"What is the purpose of req.secure?",back:"req.secure is a boolean that is true if the request is over HTTPS, allowing you to check if the request is secure.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-14",front:"What is the purpose of req.ip?",back:"req.ip is a string containing the remote IP address of the request, allowing you to access the client's IP address.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-15",front:"What is the purpose of req.ips?",back:"req.ips is an array of IP addresses in the X-Forwarded-For header, allowing you to access the client's IP addresses when behind a proxy.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-16",front:"What is the purpose of req.subdomains?",back:"req.subdomains is an array of subdomains in the domain name of the request, allowing you to access the subdomains.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0},{id:"express-i-17",front:"What is the purpose of req.originalUrl?",back:"req.originalUrl is a string containing the original request URL, allowing you to access the full URL of the request.",category:"express",difficulty:"medium",reviewCount:0,correctCount:0}]},{id:"express-advanced",title:"Advanced Express.js",description:"Advanced concepts and best practices",category:"advanced",cards:[{id:"ea-1",front:"What is express.Router()?",back:"express.Router() is used to create a new router object, allowing you to modularize route handlers and create a mini-application.",category:"routing",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-2",front:"What is res.render()?",back:"res.render() is used to render a view template and send the rendered HTML string to the client, commonly used with template engines.",category:"views",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-3",front:"What is app.all()?",back:"app.all() is used to handle all HTTP methods at a specified path, defining what happens when a client makes any type of request to that path.",category:"routing",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-4",front:"What is app.param()?",back:"app.param() is used to add callback triggers to route parameters, allowing you to perform operations on route parameters before they are passed to route handlers.",category:"routing",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-5",front:"What is app.route()?",back:"app.route() is used to create a chainable route handler for a path, allowing you to define multiple HTTP method handlers for the same path.",category:"routing",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-6",front:"What is res.set()?",back:"res.set() is used to set HTTP response headers, allowing you to customize the headers sent to the client.",category:"response",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-7",front:"What is res.cookie()?",back:"res.cookie() is used to set a cookie in the response, allowing you to store data on the client's browser.",category:"cookies",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-8",front:"What is res.clearCookie()?",back:"res.clearCookie() is used to clear a cookie in the response, removing it from the client's browser.",category:"cookies",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-9",front:"What is req.cookies?",back:"req.cookies is an object containing the cookies sent by the request, populated by cookie-parser middleware.",category:"request",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ea-10",front:"What is req.headers?",back:"req.headers is an object containing the HTTP headers sent by the request, allowing you to access request headers.",category:"request",difficulty:"hard",reviewCount:0,correctCount:0}]}],quiz:{id:"express-quiz",title:"Express.js Quiz",description:"Test your knowledge of Express.js concepts",category:"express",passingScore:70,createdAt:new Date,updatedAt:new Date,questions:[{id:"q1",question:"What is Express.js?",options:["A database","A web application framework for Node.js","A programming language","A web browser"],correctAnswer:"1",category:"express",difficulty:"easy"},{id:"q2",question:"What is middleware in Express.js?",options:["A database","A programming language","Functions that have access to request and response objects","A web browser"],correctAnswer:"2",category:"express",difficulty:"easy"},{id:"q3",question:"What is a route in Express.js?",options:["A database","A programming language","A web browser","A path that matches a URL pattern"],correctAnswer:"3",category:"express",difficulty:"easy"},{id:"q4",question:"What is the purpose of app.use()?",options:["To create a new route","To start the server","To mount middleware functions","To connect to a database"],correctAnswer:"2",category:"express",difficulty:"easy"},{id:"q5",question:"What is the purpose of express.Router()?",options:["To create a new route","To start the server","To connect to a database","To create a modular router"],correctAnswer:"3",category:"express",difficulty:"easy"},{id:"q6",question:"What is the purpose of res.send()?",options:["To create a new route","To start the server","To send a response","To connect to a database"],correctAnswer:"2",category:"express",difficulty:"easy"},{id:"q7",question:"What is the purpose of res.json()?",options:["To create a new route","To start the server","To send a JSON response","To connect to a database"],correctAnswer:"2",category:"express",difficulty:"easy"},{id:"q8",question:"What is the purpose of res.render()?",options:["To create a new route","To start the server","To render a view template","To connect to a database"],correctAnswer:"2",category:"express",difficulty:"easy"},{id:"q9",question:"What is the purpose of req.params?",options:["To access route parameters","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"easy"},{id:"q10",question:"What is the purpose of req.query?",options:["To access route parameters","To access query string parameters","To connect to a database","To create a new route"],correctAnswer:"1",category:"express",difficulty:"easy"},{id:"q11",question:"What is the purpose of req.body?",options:["To access route parameters","To access query string parameters","To access request body data","To create a new route"],correctAnswer:"2",category:"express",difficulty:"easy"},{id:"q12",question:"What is the purpose of req.cookies?",options:["To access route parameters","To access query string parameters","To access request body data","To access cookies"],correctAnswer:"3",category:"express",difficulty:"easy"},{id:"q13",question:"What is the purpose of app.set()?",options:["To create a new route","To start the server","To set application settings","To connect to a database"],correctAnswer:"2",category:"express",difficulty:"medium"},{id:"q14",question:"What is the purpose of app.get()?",options:["To create a GET route","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q15",question:"What is the purpose of app.post()?",options:["To create a POST route","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q16",question:"What is the purpose of app.put()?",options:["To create a PUT route","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q17",question:"What is the purpose of app.delete()?",options:["To create a DELETE route","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q18",question:"What is the purpose of app.all()?",options:["To create a route for all HTTP methods","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q19",question:"What is the purpose of app.route()?",options:["To create a chainable route handler","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q20",question:"What is the purpose of app.param()?",options:["To add callback triggers to route parameters","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q21",question:"What is the purpose of app.locals?",options:["To store application-level variables","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q22",question:"What is the purpose of res.locals?",options:["To store response-level variables","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q23",question:"What is the purpose of res.cookie()?",options:["To set a cookie","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q24",question:"What is the purpose of res.clearCookie()?",options:["To clear a cookie","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"medium"},{id:"q25",question:"What is the purpose of req.accepts()?",options:["To check if the request accepts a specific content type","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q26",question:"What is the purpose of res.format()?",options:["To send different responses based on Accept header","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q27",question:"What is the purpose of req.range()?",options:["To parse Range header","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q28",question:"What is the purpose of res.attachment()?",options:["To set Content-Disposition header","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q29",question:"What is the purpose of res.download()?",options:["To prompt a file download","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q30",question:"What is the purpose of res.end()?",options:["To end the response process","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q31",question:"What is the purpose of res.redirect()?",options:["To redirect to a different URL","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q32",question:"What is the purpose of res.status()?",options:["To set the HTTP status code","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q33",question:"What is the purpose of res.type()?",options:["To set the Content-Type header","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q34",question:"What is the purpose of res.vary()?",options:["To set the Vary header","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"},{id:"q35",question:"What is the purpose of res.set()?",options:["To set response headers","To start the server","To connect to a database","To create a new route"],correctAnswer:"0",category:"express",difficulty:"hard"}]}},h={id:"mongodb-basics",title:"MongoDB",description:"Learn MongoDB from basics to advanced concepts",level:"beginner",category:"database",createdAt:new Date,updatedAt:new Date,sets:[{id:"mongodb-beginner",title:"MongoDB Beginner",description:"Basic MongoDB concepts and features",category:"mongodb",createdAt:new Date,updatedAt:new Date,cards:[{id:"mongodb-b-1",front:"What is MongoDB?",back:"MongoDB is a NoSQL document database that stores data in flexible, JSON-like documents, making it easy to work with data.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-2",front:"What is a document in MongoDB?",back:"A document is a record in MongoDB that stores data in BSON format, similar to JSON objects with key-value pairs.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-3",front:"What is a collection in MongoDB?",back:"A collection is a group of MongoDB documents, similar to a table in relational databases.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-4",front:"What is a database in MongoDB?",back:"A database is a physical container for collections, storing data on the filesystem.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-5",front:"What is BSON?",back:"BSON (Binary JSON) is the binary-encoded serialization of JSON-like documents used by MongoDB.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-6",front:"What is the _id field?",back:"The _id field is a unique identifier for each document in a collection, automatically created if not specified.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-7",front:"What is the insertOne() method?",back:"insertOne() is a method to insert a single document into a collection.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-8",front:"What is the find() method?",back:"find() is a method to query documents in a collection, returning a cursor to the matching documents.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-9",front:"What is the updateOne() method?",back:"updateOne() is a method to update a single document in a collection that matches a filter.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-10",front:"What is the deleteOne() method?",back:"deleteOne() is a method to delete a single document from a collection that matches a filter.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-11",front:"What is a query filter?",back:"A query filter is a document that specifies the conditions for selecting documents to update or delete.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-12",front:"What is the $set operator?",back:"The $set operator replaces the value of a field with the specified value.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-13",front:"What is the $inc operator?",back:"The $inc operator increments the value of a field by the specified amount.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-14",front:"What is the $push operator?",back:"The $push operator adds an element to an array field.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-15",front:"What is the $pull operator?",back:"The $pull operator removes elements from an array that match a specified condition.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-16",front:"What is the $sort operator?",back:"The $sort operator orders the documents in a specified order (1 for ascending, -1 for descending).",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0},{id:"mongodb-b-17",front:"What is the $limit operator?",back:"The $limit operator limits the number of documents passed to the next stage in the pipeline.",category:"mongodb",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"mongodb-intermediate",title:"MongoDB Intermediate",description:"Intermediate MongoDB concepts and features",category:"mongodb",createdAt:new Date,updatedAt:new Date,cards:[{id:"mongodb-i-1",front:"What is an index in MongoDB?",back:"An index is a data structure that improves the speed of data retrieval operations by storing a small portion of the collection's data in an easy-to-traverse form.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-2",front:"What is a compound index?",back:"A compound index is an index on multiple fields, supporting queries that match on the prefix of the index fields.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-3",front:"What is a text index?",back:"A text index is a special index that supports text search queries on string content.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-4",front:"What is aggregation in MongoDB?",back:"Aggregation is a framework for processing data records and returning computed results, similar to GROUP BY in SQL.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-5",front:"What is the $match stage?",back:"The $match stage filters documents to pass only those that match the specified condition to the next stage.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-6",front:"What is the $group stage?",back:"The $group stage groups documents by a specified expression and outputs a document for each distinct grouping.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-7",front:"What is the $project stage?",back:"The $project stage specifies the fields to include or exclude in the output documents.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-8",front:"What is the $lookup stage?",back:"The $lookup stage performs a left outer join to a collection in the same database.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-9",front:"What is a replica set?",back:"A replica set is a group of MongoDB instances that maintain the same data set, providing redundancy and high availability.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-10",front:"What is a primary node?",back:"A primary node is the main node in a replica set that receives all write operations.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-11",front:"What is a secondary node?",back:"A secondary node is a node in a replica set that maintains a copy of the primary's data set.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-12",front:"What is sharding?",back:"Sharding is a method for distributing data across multiple machines, enabling horizontal scaling.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-13",front:"What is a shard key?",back:"A shard key is a field or fields that determine how data is distributed across shards.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-14",front:"What is a chunk?",back:"A chunk is a contiguous range of shard key values within a particular shard.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-15",front:"What is a balancer?",back:"A balancer is a background process that monitors the number of chunks on each shard and migrates chunks if necessary.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-16",front:"What is a config server?",back:"A config server is a MongoDB instance that stores metadata about the cluster, including the chunk distribution.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0},{id:"mongodb-i-17",front:"What is a mongos?",back:"A mongos is a routing service for MongoDB shard clusters that processes queries and routes operations to the appropriate shards.",category:"mongodb",difficulty:"medium",reviewCount:0,correctCount:0}]},{id:"mongodb-advanced",title:"MongoDB Advanced",description:"Advanced MongoDB concepts and features",category:"mongodb",createdAt:new Date,updatedAt:new Date,cards:[{id:"mongodb-a-1",front:"What is a change stream?",back:"A change stream is a feature that allows applications to access real-time data changes without the complexity and risk of tailing the oplog.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-2",front:"What is a transaction?",back:"A transaction is a sequence of operations that are treated as a single unit, ensuring data consistency.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-3",front:"What is the WiredTiger storage engine?",back:"WiredTiger is the default storage engine in MongoDB, providing document-level concurrency control and compression.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-4",front:"What is the oplog?",back:"The oplog is a special capped collection that keeps a rolling record of all operations that modify the data stored in the database.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-5",front:"What is a covered query?",back:"A covered query is a query that can be satisfied entirely using an index, without examining any documents.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-6",front:"What is a sparse index?",back:"A sparse index only includes documents that have the indexed field, even if the field is null.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-7",front:"What is a TTL index?",back:"A TTL (Time To Live) index is a special index that MongoDB can use to automatically remove documents after a certain period.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-8",front:"What is a geospatial index?",back:"A geospatial index supports queries that calculate geometries on an earth-like sphere.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-9",front:"What is a collation?",back:"A collation allows users to specify language-specific rules for string comparison, such as rules for lettercase and accent marks.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-10",front:"What is a view?",back:"A view is a queryable object whose contents are defined by an aggregation pipeline on other collections or views.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-11",front:"What is a role?",back:"A role is a set of privileges that can be granted to users or other roles, defining what operations they can perform.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-12",front:"What is a privilege?",back:"A privilege is a combination of a resource and the actions permitted on that resource.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-13",front:"What is a resource?",back:"A resource is a database, collection, set of collections, or the cluster, on which privileges can be granted.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-14",front:"What is a backup?",back:"A backup is a copy of data that can be used to restore the database in case of data loss.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-15",front:"What is a restore?",back:"A restore is the process of copying data from a backup to a database.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0},{id:"mongodb-a-16",front:"What is a dump?",back:"A dump is a binary export of the contents of a database, created using the mongodump utility.",category:"mongodb",difficulty:"hard",reviewCount:0,correctCount:0}]}],quiz:{id:"mongodb-quiz",title:"MongoDB Quiz",description:"Test your knowledge of MongoDB concepts.",category:"database",timeLimit:30,passingScore:70,createdAt:new Date,updatedAt:new Date,questions:[{id:"q1",question:"What is MongoDB?",options:["A relational database","A NoSQL document database","A key-value store","A graph database"],correctAnswer:"A NoSQL document database",category:"database",difficulty:"easy"},{id:"q2",question:"What is a document in MongoDB?",options:["A text file","A JSON-like object","A table row","A database schema"],correctAnswer:"A JSON-like object",category:"database",difficulty:"easy"},{id:"q3",question:"What is a collection in MongoDB?",options:["A group of databases","A group of documents","A group of indexes","A group of users"],correctAnswer:"A group of documents",category:"database",difficulty:"easy"},{id:"q4",question:"What is BSON?",options:["Binary JSON","Basic SQL Object Notation","Binary SQL","Basic Object Notation"],correctAnswer:"Binary JSON",category:"database",difficulty:"easy"},{id:"q5",question:"What is the purpose of _id in MongoDB?",options:["It is optional","It is a unique identifier","It is a foreign key","It is a composite key"],correctAnswer:"It is a unique identifier",category:"database",difficulty:"easy"},{id:"q6",question:"What is the insertOne() method used for?",options:["Updating multiple documents","Inserting multiple documents","Inserting a single document","Deleting a document"],correctAnswer:"Inserting a single document",category:"database",difficulty:"easy"},{id:"q7",question:"What is the find() method used for?",options:["Updating documents","Deleting documents","Querying documents","Creating indexes"],correctAnswer:"Querying documents",category:"database",difficulty:"easy"},{id:"q8",question:"What is the updateOne() method used for?",options:["Updating multiple documents","Updating a single document","Inserting a document","Deleting a document"],correctAnswer:"Updating a single document",category:"database",difficulty:"easy"},{id:"q9",question:"What is the deleteOne() method used for?",options:["Deleting multiple documents","Deleting a single document","Updating a document","Inserting a document"],correctAnswer:"Deleting a single document",category:"database",difficulty:"easy"},{id:"q10",question:"What is the $set operator used for?",options:["Setting multiple fields","Setting a single field","Unsetting fields","Incrementing fields"],correctAnswer:"Setting multiple fields",category:"database",difficulty:"easy"},{id:"q11",question:"What is the $inc operator used for?",options:["Setting fields","Unsetting fields","Incrementing fields","Multiplying fields"],correctAnswer:"Incrementing fields",category:"database",difficulty:"easy"},{id:"q12",question:"What is the $push operator used for?",options:["Adding to arrays","Removing from arrays","Updating arrays","Deleting arrays"],correctAnswer:"Adding to arrays",category:"database",difficulty:"easy"},{id:"q13",question:"What is a compound index?",options:["An index on a single field","An index on multiple fields","A unique index","A text index"],correctAnswer:"An index on multiple fields",category:"database",difficulty:"medium"},{id:"q14",question:"What is a text index?",options:["An index for numbers","An index for dates","An index for text search","An index for arrays"],correctAnswer:"An index for text search",category:"database",difficulty:"medium"},{id:"q15",question:"What is the $match stage in aggregation?",options:["Filtering documents","Grouping documents","Sorting documents","Limiting documents"],correctAnswer:"Filtering documents",category:"database",difficulty:"medium"},{id:"q16",question:"What is the $group stage in aggregation?",options:["Filtering documents","Grouping documents","Sorting documents","Limiting documents"],correctAnswer:"Grouping documents",category:"database",difficulty:"medium"},{id:"q17",question:"What is the $sort stage in aggregation?",options:["Filtering documents","Grouping documents","Sorting documents","Limiting documents"],correctAnswer:"Sorting documents",category:"database",difficulty:"medium"},{id:"q18",question:"What is the $limit stage in aggregation?",options:["Filtering documents","Grouping documents","Sorting documents","Limiting documents"],correctAnswer:"Limiting documents",category:"database",difficulty:"medium"},{id:"q19",question:"What is the $project stage in aggregation?",options:["Filtering fields","Grouping fields","Sorting fields","Limiting fields"],correctAnswer:"Filtering fields",category:"database",difficulty:"medium"},{id:"q20",question:"What is the $unwind stage in aggregation?",options:["Deconstructing arrays","Constructing arrays","Filtering arrays","Sorting arrays"],correctAnswer:"Deconstructing arrays",category:"database",difficulty:"medium"},{id:"q21",question:"What is the $lookup stage in aggregation?",options:["Joining collections","Splitting collections","Filtering collections","Sorting collections"],correctAnswer:"Joining collections",category:"database",difficulty:"medium"},{id:"q22",question:"What is the $facet stage in aggregation?",options:["Creating multiple pipelines","Creating single pipeline","Filtering pipeline","Sorting pipeline"],correctAnswer:"Creating multiple pipelines",category:"database",difficulty:"medium"},{id:"q23",question:"What is the $bucket stage in aggregation?",options:["Grouping by ranges","Grouping by values","Filtering by ranges","Sorting by ranges"],correctAnswer:"Grouping by ranges",category:"database",difficulty:"medium"},{id:"q24",question:"What is the $geoNear stage in aggregation?",options:["Geospatial querying","Text querying","Date querying","Number querying"],correctAnswer:"Geospatial querying",category:"database",difficulty:"medium"},{id:"q25",question:"What is a change stream?",options:["A stream of documents","A stream of changes","A stream of indexes","A stream of users"],correctAnswer:"A stream of changes",category:"database",difficulty:"hard"},{id:"q26",question:"What is a transaction?",options:["A single operation","Multiple operations","A read operation","A write operation"],correctAnswer:"Multiple operations",category:"database",difficulty:"hard"},{id:"q27",question:"What is the WiredTiger storage engine?",options:["A document storage engine","A key-value storage engine","A graph storage engine","A relational storage engine"],correctAnswer:"A document storage engine",category:"database",difficulty:"hard"},{id:"q28",question:"What is a replica set?",options:["A single server","Multiple servers","A single database","Multiple databases"],correctAnswer:"Multiple servers",category:"database",difficulty:"hard"},{id:"q29",question:"What is sharding?",options:["Splitting data","Combining data","Filtering data","Sorting data"],correctAnswer:"Splitting data",category:"database",difficulty:"hard"},{id:"q30",question:"What is a covered query?",options:["A query using indexes","A query using documents","A query using collections","A query using databases"],correctAnswer:"A query using indexes",category:"database",difficulty:"hard"},{id:"q31",question:"What is the $expr operator used for?",options:["Expression evaluation","Document evaluation","Collection evaluation","Database evaluation"],correctAnswer:"Expression evaluation",category:"database",difficulty:"hard"},{id:"q32",question:"What is the $text operator used for?",options:["Text search","Number search","Date search","Array search"],correctAnswer:"Text search",category:"database",difficulty:"hard"},{id:"q33",question:"What is the $regex operator used for?",options:["Pattern matching","Value matching","Type matching","Size matching"],correctAnswer:"Pattern matching",category:"database",difficulty:"hard"},{id:"q34",question:"What is the $where operator used for?",options:["JavaScript evaluation","Python evaluation","Java evaluation","C++ evaluation"],correctAnswer:"JavaScript evaluation",category:"database",difficulty:"hard"},{id:"q35",question:"What is the $mod operator used for?",options:["Modulo operation","Multiplication","Division","Addition"],correctAnswer:"Modulo operation",category:"database",difficulty:"hard"}]}},f={id:"sql-basics",title:"SQL",description:"Learn SQL from basics to advanced concepts",level:"beginner",category:"database",createdAt:new Date,updatedAt:new Date,sets:[{id:"sql-beginner",title:"SQL Beginner",description:"Basic SQL concepts and features",category:"sql",createdAt:new Date,updatedAt:new Date,cards:[{id:"sql-b-1",front:"What is SQL?",back:"SQL (Structured Query Language) is a standard language for storing, manipulating, and retrieving data in relational databases.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-2",front:"What is a table in SQL?",back:"A table is a collection of related data organized in rows and columns, where each row represents a record and each column represents a field.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-3",front:"What is a primary key?",back:"A primary key is a unique identifier for each record in a table. It must contain unique values and cannot be null.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-4",front:"What is a foreign key?",back:"A foreign key is a field that references the primary key of another table, creating a relationship between the tables.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-5",front:"What is the SELECT statement?",back:"The SELECT statement is used to retrieve data from a database. It specifies which columns to retrieve and from which table.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-6",front:"What is the INSERT statement?",back:"The INSERT statement is used to add new records to a table. It specifies the table and the values to be inserted.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-7",front:"What is the UPDATE statement?",back:"The UPDATE statement is used to modify existing records in a table. It specifies the table, the new values, and which records to update.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-8",front:"What is the DELETE statement?",back:"The DELETE statement is used to remove records from a table. It specifies which records to delete based on a condition.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-9",front:"What is the WHERE clause?",back:"The WHERE clause is used to filter records based on a condition. It can be used with SELECT, UPDATE, and DELETE statements.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-10",front:"What is the ORDER BY clause?",back:"The ORDER BY clause is used to sort the result set in ascending or descending order based on one or more columns.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-11",front:"What is the GROUP BY clause?",back:"The GROUP BY clause is used to group rows that have the same values in specified columns into summary rows.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-12",front:"What is the HAVING clause?",back:"The HAVING clause is used to filter groups based on a condition, similar to WHERE but for grouped data.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-13",front:"What is the LIKE operator?",back:"The LIKE operator is used to search for a specified pattern in a column. It uses wildcards % and _ for pattern matching.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-14",front:"What is the IN operator?",back:"The IN operator allows you to specify multiple values in a WHERE clause, making it easier to test for multiple possible values.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-15",front:"What is the BETWEEN operator?",back:"The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-16",front:"What is the NULL value?",back:"NULL represents a missing or unknown value. It is different from zero or an empty string.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0},{id:"sql-b-17",front:"What is the DISTINCT keyword?",back:"The DISTINCT keyword is used to return only distinct (different) values, eliminating duplicate rows from the result set.",category:"sql",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"sql-intermediate",title:"SQL Intermediate",description:"Intermediate SQL concepts and features",category:"sql",createdAt:new Date,updatedAt:new Date,cards:[{id:"sql-i-1",front:"What is a JOIN?",back:"A JOIN combines rows from two or more tables based on a related column between them.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-2",front:"What is an INNER JOIN?",back:"An INNER JOIN returns records that have matching values in both tables.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-3",front:"What is a LEFT JOIN?",back:"A LEFT JOIN returns all records from the left table and matching records from the right table.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-4",front:"What is a RIGHT JOIN?",back:"A RIGHT JOIN returns all records from the right table and matching records from the left table.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-5",front:"What is a FULL JOIN?",back:"A FULL JOIN returns all records when there is a match in either the left or right table.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-6",front:"What is a subquery?",back:"A subquery is a query nested inside another query, used to return data that will be used in the main query.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-7",front:"What is a view?",back:"A view is a virtual table based on the result set of a SQL statement. It contains rows and columns like a real table.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-8",front:"What is an index?",back:"An index is a data structure that improves the speed of data retrieval operations on a database table.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-9",front:"What is a stored procedure?",back:"A stored procedure is a prepared SQL code that can be saved and reused. It can accept parameters and return values.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-10",front:"What is a trigger?",back:"A trigger is a stored procedure that automatically executes when an event occurs in the database.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-11",front:"What is a transaction?",back:"A transaction is a sequence of operations that are treated as a single unit. It must be completed entirely or not at all.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-12",front:"What is normalization?",back:"Normalization is the process of organizing data to reduce redundancy and improve data integrity.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-13",front:"What is a composite key?",back:"A composite key is a primary key that consists of two or more columns that uniquely identify a record.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-14",front:"What is a self-join?",back:"A self-join is a regular join where a table is joined with itself. It is useful for comparing rows within the same table.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-15",front:"What is a cross join?",back:"A cross join produces a Cartesian product of the two tables, combining each row from the first table with each row from the second table.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-16",front:"What is a natural join?",back:"A natural join is a type of join that automatically matches columns with the same name in both tables.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0},{id:"sql-i-17",front:"What is a union?",back:"A union combines the result sets of two or more SELECT statements, removing duplicates.",category:"sql",difficulty:"medium",reviewCount:0,correctCount:0}]},{id:"sql-advanced",title:"SQL Advanced",description:"Advanced SQL concepts and features",category:"sql",createdAt:new Date,updatedAt:new Date,cards:[{id:"sql-a-1",front:"What is a window function?",back:"A window function performs calculations across a set of rows that are related to the current row.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-2",front:"What is a CTE (Common Table Expression)?",back:"A CTE is a temporary named result set that can be referenced within a SELECT, INSERT, UPDATE, or DELETE statement.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-3",front:"What is a recursive query?",back:"A recursive query is a query that references itself, typically used to work with hierarchical data.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-4",front:"What is a materialized view?",back:"A materialized view is a view that stores the query results, improving query performance at the cost of storage space.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-5",front:"What is a partition?",back:"A partition is a division of a table into smaller, more manageable pieces, improving query performance and maintenance.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-6",front:"What is a deadlock?",back:"A deadlock occurs when two or more transactions are waiting for each other to release locks, creating a circular dependency.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-7",front:"What is a cursor?",back:"A cursor is a control structure that enables traversal over the records in a database, allowing row-by-row processing.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-8",front:"What is a function in SQL?",back:"A function is a reusable block of code that returns a value. It can be built-in or user-defined.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-9",front:"What is a constraint?",back:"A constraint is a rule that limits the data that can be stored in a table, ensuring data integrity.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-10",front:"What is a schema?",back:"A schema is a collection of database objects, including tables, views, and other database objects.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-11",front:"What is a role?",back:"A role is a set of permissions that can be assigned to users, simplifying security management.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-12",front:"What is a transaction isolation level?",back:"A transaction isolation level defines how transactions interact with each other, affecting concurrency and consistency.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-13",front:"What is a lock?",back:"A lock is a mechanism that prevents multiple transactions from accessing the same data simultaneously.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-14",front:"What is a backup?",back:"A backup is a copy of database data that can be used to restore the database in case of data loss.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-15",front:"What is replication?",back:"Replication is the process of copying and maintaining database objects in multiple databases.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0},{id:"sql-a-16",front:"What is sharding?",back:"Sharding is a database architecture pattern where data is horizontally partitioned across multiple databases.",category:"sql",difficulty:"hard",reviewCount:0,correctCount:0}]}],quiz:{id:"sql-quiz",title:"SQL Quiz",description:"Test your knowledge of SQL concepts",category:"sql",passingScore:70,createdAt:new Date,updatedAt:new Date,questions:[{id:"q1",question:"What is SQL?",options:["A programming language","A database management system","A structured query language for managing databases","A web framework"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q2",question:"What is a table in SQL?",options:["A database","A programming language","A collection of related data organized in rows and columns","A web framework"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q3",question:"What is a primary key?",options:["A database","A programming language","A unique identifier for each record in a table","A web framework"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q4",question:"What is a foreign key?",options:["A database","A programming language","A field that references the primary key of another table","A web framework"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q5",question:"What is the purpose of SELECT?",options:["To create a new table","To modify data","To retrieve data from a database","To delete data"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q6",question:"What is the purpose of INSERT?",options:["To create a new table","To add new records to a table","To modify data","To delete data"],correctAnswer:"1",category:"sql",difficulty:"easy"},{id:"q7",question:"What is the purpose of UPDATE?",options:["To create a new table","To add new records","To modify existing records","To delete data"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q8",question:"What is the purpose of DELETE?",options:["To create a new table","To add new records","To modify data","To remove records from a table"],correctAnswer:"3",category:"sql",difficulty:"easy"},{id:"q9",question:"What is the purpose of WHERE?",options:["To create a new table","To add new records","To filter records","To delete data"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q10",question:"What is the purpose of ORDER BY?",options:["To create a new table","To add new records","To sort records","To delete data"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q11",question:"What is the purpose of GROUP BY?",options:["To create a new table","To add new records","To group records by a column","To delete data"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q12",question:"What is the purpose of HAVING?",options:["To create a new table","To add new records","To filter groups","To delete data"],correctAnswer:"2",category:"sql",difficulty:"easy"},{id:"q13",question:"What is a JOIN?",options:["To create a new table","To add new records","To combine rows from multiple tables","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q14",question:"What is an INNER JOIN?",options:["To create a new table","To add new records","To return matching records from both tables","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q15",question:"What is a LEFT JOIN?",options:["To create a new table","To add new records","To return all records from the left table and matching records from the right","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q16",question:"What is a RIGHT JOIN?",options:["To create a new table","To add new records","To return all records from the right table and matching records from the left","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q17",question:"What is a FULL JOIN?",options:["To create a new table","To add new records","To return all records from both tables","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q18",question:"What is a subquery?",options:["To create a new table","To add new records","A query nested inside another query","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q19",question:"What is a view?",options:["To create a new table","To add new records","A virtual table based on a query","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q20",question:"What is an index?",options:["To create a new table","To add new records","A data structure that improves query performance","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q21",question:"What is a stored procedure?",options:["To create a new table","To add new records","A prepared SQL code that can be saved and reused","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q22",question:"What is a trigger?",options:["To create a new table","To add new records","A procedure that automatically executes when an event occurs","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q23",question:"What is a transaction?",options:["To create a new table","To add new records","A sequence of operations that are treated as a single unit","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q24",question:"What is normalization?",options:["To create a new table","To add new records","The process of organizing data to reduce redundancy","To delete data"],correctAnswer:"2",category:"sql",difficulty:"medium"},{id:"q25",question:"What is a window function?",options:["To create a new table","To add new records","A function that performs calculations across a set of rows","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q26",question:"What is a CTE (Common Table Expression)?",options:["To create a new table","To add new records","A temporary named result set","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q27",question:"What is a recursive query?",options:["To create a new table","To add new records","A query that references itself","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q28",question:"What is a materialized view?",options:["To create a new table","To add new records","A view that stores the query results","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q29",question:"What is a partition?",options:["To create a new table","To add new records","A division of a table into smaller, more manageable pieces","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q30",question:"What is a deadlock?",options:["To create a new table","To add new records","A situation where two or more transactions are waiting for each other","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q31",question:"What is a cursor?",options:["To create a new table","To add new records","A control structure for traversing records in a database","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q32",question:"What is a function in SQL?",options:["To create a new table","To add new records","A reusable block of code that returns a value","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q33",question:"What is a constraint?",options:["To create a new table","To add new records","A rule that limits the data that can be stored","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q34",question:"What is a schema?",options:["To create a new table","To add new records","A collection of database objects","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"},{id:"q35",question:"What is a role?",options:["To create a new table","To add new records","A set of permissions that can be assigned to users","To delete data"],correctAnswer:"2",category:"sql",difficulty:"hard"}]}},y=[{id:"intro-to-digital",title:"Introduction to Digital",description:"Master the fundamentals of digital technology and computer basics",level:"beginner",sets:[{id:"computer-basics",title:"Computer Basics",description:"Essential knowledge about computers and digital systems",category:"hardware",cards:[{id:"cb-1",front:"What is a CPU?",back:'CPU (Central Processing Unit) is the primary component of a computer that processes instructions and performs calculations. It\'s often called the "brain" of the computer.',category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-2",front:"What is RAM?",back:"RAM (Random Access Memory) is temporary storage that holds data and instructions for the CPU to process. It's volatile memory, meaning it loses its contents when power is turned off.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-3",front:"What is the difference between hardware and software?",back:"Hardware refers to physical components of a computer (CPU, RAM, hard drive), while software refers to programs and applications that run on the hardware.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-4",front:"What is an operating system?",back:"An operating system (OS) is software that manages computer hardware and software resources, providing common services for computer programs.",category:"software",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-5",front:"What is a motherboard?",back:"The motherboard is the main circuit board of a computer that connects all components together, including CPU, RAM, storage, and other peripherals.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-6",front:"What is a GPU?",back:"GPU (Graphics Processing Unit) is a specialized processor designed to handle graphics and image processing tasks. It's essential for gaming and visual applications.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-7",front:"What is a hard drive?",back:"A hard drive is a non-volatile storage device that permanently stores and retrieves data. It can be mechanical (HDD) or solid-state (SSD).",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-8",front:"What is a network interface card (NIC)?",back:"A NIC is a hardware component that allows computers to connect to a network. It can be wired (Ethernet) or wireless (Wi-Fi).",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-9",front:"What is a power supply unit (PSU)?",back:"A PSU converts electrical power from an outlet into usable power for the computer's components. It provides different voltage levels for various parts.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-10",front:"What is a BIOS?",back:"BIOS (Basic Input/Output System) is firmware that initializes hardware during the boot process and provides runtime services for operating systems.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-11",front:"What is a port?",back:"A port is a physical or virtual connection point that allows data to be transferred between devices. Examples include USB, HDMI, and network ports.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-12",front:"What is a peripheral device?",back:"A peripheral is an external device that connects to a computer to provide input or output functionality, such as keyboards, mice, and printers.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-13",front:"What is a driver?",back:"A driver is software that allows the operating system to communicate with hardware devices. It translates OS commands into device-specific instructions.",category:"software",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-14",front:"What is a cache?",back:"Cache is a small, fast memory that stores frequently accessed data to improve performance. It exists at multiple levels in a computer system.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-15",front:"What is a bus?",back:"A bus is a communication system that transfers data between components inside a computer or between computers. It can be parallel or serial.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-16",front:"What is a chipset?",back:"A chipset is a set of electronic components that manages data flow between the processor, memory, and peripherals. It's part of the motherboard.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-17",front:"What is a heat sink?",back:"A heat sink is a passive cooling device that absorbs and dissipates heat from electronic components, typically the CPU or GPU.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-18",front:"What is a fan?",back:"A fan is an active cooling device that moves air to cool computer components. It helps prevent overheating and maintains optimal performance.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-19",front:"What is a battery?",back:"A battery provides power to portable devices when not connected to an electrical outlet. It stores electrical energy chemically and converts it to electrical power.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0},{id:"cb-20",front:"What is a display?",back:"A display is an output device that shows visual information. Common types include LCD, LED, and OLED screens, measured in pixels and refresh rates.",category:"hardware",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"digital-concepts",title:"Digital Concepts",description:"Understanding digital data and binary systems",category:"concepts",cards:[{id:"dc-1",front:"What is binary?",back:"Binary is a number system that uses only two digits: 0 and 1. It's the fundamental language of computers, where each digit is called a bit.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-2",front:"What is a byte?",back:"A byte is a unit of digital information that consists of 8 bits. It's the basic unit of storage in computer systems.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-3",front:"What is ASCII?",back:"ASCII (American Standard Code for Information Interchange) is a character encoding standard that represents text in computers. It uses 7 bits to represent 128 characters.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-4",front:"What is Unicode?",back:"Unicode is a character encoding standard that can represent almost all characters from all writing systems in the world. It's an extension of ASCII.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-5",front:"What is the difference between analog and digital?",back:"Analog signals are continuous and can have any value, while digital signals are discrete and can only have specific values (usually 0 and 1).",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-6",front:"What is a bit?",back:"A bit (binary digit) is the smallest unit of data in computing, representing either 0 or 1. It's the fundamental building block of digital information.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-7",front:"What is a kilobyte (KB)?",back:"A kilobyte is 1024 bytes (2^10 bytes). It's commonly used to measure small amounts of data storage.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-8",front:"What is a megabyte (MB)?",back:"A megabyte is 1024 kilobytes (2^20 bytes). It's used to measure medium-sized files and storage capacity.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-9",front:"What is a gigabyte (GB)?",back:"A gigabyte is 1024 megabytes (2^30 bytes). It's used to measure large files and storage devices.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-10",front:"What is a terabyte (TB)?",back:"A terabyte is 1024 gigabytes (2^40 bytes). It's used to measure very large storage capacities.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-11",front:"What is hexadecimal?",back:"Hexadecimal is a base-16 number system using digits 0-9 and letters A-F. It's commonly used in computing to represent binary data more compactly.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-12",front:"What is a pixel?",back:"A pixel (picture element) is the smallest unit of a digital image. It's a single point in a raster image, containing color information.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-13",front:"What is resolution?",back:"Resolution is the number of pixels in a display or image, typically expressed as width \xd7 height (e.g., 1920\xd71080).",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-14",front:"What is a color depth?",back:"Color depth is the number of bits used to represent the color of a single pixel. Common depths are 8-bit (256 colors) and 24-bit (16.7 million colors).",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-15",front:"What is a file format?",back:"A file format is a standard way of encoding information for storage in a computer file. Examples include JPEG, PNG, MP3, and PDF.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-16",front:"What is compression?",back:"Compression is the process of reducing the size of data files by encoding information more efficiently. It can be lossless or lossy.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-17",front:"What is a protocol?",back:"A protocol is a set of rules that define how data is transmitted and received over a network. Examples include HTTP, FTP, and TCP/IP.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-18",front:"What is bandwidth?",back:"Bandwidth is the maximum rate of data transfer across a network or communication channel, typically measured in bits per second (bps).",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-19",front:"What is latency?",back:"Latency is the time delay between sending and receiving data. It's typically measured in milliseconds and affects real-time applications.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0},{id:"dc-20",front:"What is encryption?",back:"Encryption is the process of encoding information to make it secure and unreadable to unauthorized parties. It uses algorithms and keys to protect data.",category:"concepts",difficulty:"easy",reviewCount:0,correctCount:0}]}],quiz:{questions:[{id:"q1",question:'Which component is often called the "brain" of the computer?',options:["RAM","CPU","Hard Drive","Motherboard"],correctAnswer:1},{id:"q2",question:"What is the main difference between RAM and ROM?",options:["RAM is faster than ROM","RAM is volatile, ROM is non-volatile","RAM is cheaper than ROM","RAM is newer technology than ROM"],correctAnswer:1},{id:"q3",question:"How many bits are in a byte?",options:["4","8","16","32"],correctAnswer:1},{id:"q4",question:"What is the purpose of an operating system?",options:["To make the computer look pretty","To manage hardware and software resources","To connect to the internet","To store data permanently"],correctAnswer:1},{id:"q5",question:"Which of the following is NOT a binary number?",options:["1010","1111","1234","1001"],correctAnswer:2},{id:"q6",question:"What is the main function of a GPU?",options:["Process text documents","Handle graphics and image processing","Store data permanently","Connect to the internet"],correctAnswer:1},{id:"q7",question:"What is the difference between HDD and SSD?",options:["HDD is faster than SSD","SSD has no moving parts, HDD does","HDD is newer technology than SSD","SSD is always larger than HDD"],correctAnswer:1},{id:"q8",question:"What is the purpose of a network interface card?",options:["Process graphics","Store data","Connect to a network","Power the computer"],correctAnswer:2},{id:"q9",question:"What is the main function of a power supply unit?",options:["Process data","Store information","Convert electrical power","Display images"],correctAnswer:2},{id:"q10",question:"What is the purpose of a BIOS?",options:["Display graphics","Store user data","Initialize hardware during boot","Connect to the internet"],correctAnswer:2},{id:"q11",question:"What is a peripheral device?",options:["The main processor","An external device that provides input/output","The operating system","The power supply"],correctAnswer:1},{id:"q12",question:"What is the purpose of a driver?",options:["Power the computer","Store data","Allow OS to communicate with hardware","Display graphics"],correctAnswer:2},{id:"q13",question:"What is the main purpose of a cache?",options:["Store permanent data","Improve performance with frequently accessed data","Power the computer","Display graphics"],correctAnswer:1},{id:"q14",question:"What is the function of a heat sink?",options:["Store data","Process information","Cool electronic components","Display images"],correctAnswer:2},{id:"q15",question:"What is the purpose of a fan in a computer?",options:["Store data","Process information","Cool components","Display graphics"],correctAnswer:2},{id:"q16",question:"What is the main difference between analog and digital signals?",options:["Digital signals are always faster","Analog signals are always more accurate","Analog signals are continuous, digital are discrete","Digital signals are always more expensive"],correctAnswer:2},{id:"q17",question:"What is the purpose of Unicode?",options:["Store binary data","Represent characters from all writing systems","Process graphics","Connect to networks"],correctAnswer:1},{id:"q18",question:"What is the main purpose of compression?",options:["Improve image quality","Reduce file size","Increase processing speed","Enhance security"],correctAnswer:1},{id:"q19",question:"What is the purpose of a protocol?",options:["Store data","Define rules for data transmission","Process graphics","Power the computer"],correctAnswer:1},{id:"q20",question:"What is the main purpose of encryption?",options:["Improve performance","Reduce file size","Make data secure and unreadable","Enhance graphics"],correctAnswer:2}]}},{id:"intro-to-programming",title:"Introduction to Programming",description:"Learn the basics of programming and computational thinking",level:"beginner",sets:[{id:"programming-basics",title:"Programming Fundamentals",description:"Core concepts of programming and problem-solving",cards:[{id:"pb-1",front:"What is a variable?",back:"A variable is a named container that stores data in a program. It can hold different types of values (numbers, text, etc.) and its value can change during program execution."},{id:"pb-2",front:"What is a function?",back:"A function is a reusable block of code that performs a specific task. It can take inputs (parameters) and return outputs."},{id:"pb-3",front:"What is a loop?",back:"A loop is a programming structure that repeats a block of code multiple times. Common types include for loops and while loops."},{id:"pb-4",front:"What is an algorithm?",back:"An algorithm is a step-by-step procedure for solving a problem or accomplishing a task. It's like a recipe for a computer to follow."},{id:"pb-5",front:"What is debugging?",back:"Debugging is the process of finding and fixing errors (bugs) in a program. It involves identifying the cause of the error and making the necessary corrections."},{id:"pb-6",front:"What is a conditional statement?",back:"A conditional statement is a programming structure that executes different code blocks based on whether a condition is true or false. Examples include if-else statements."},{id:"pb-7",front:"What is a comment?",back:"A comment is text in the code that is not executed. It's used to explain what the code does and make it more readable for other programmers."},{id:"pb-8",front:"What is a data type?",back:"A data type defines the kind of data a variable can hold and the operations that can be performed on it. Common types include integers, strings, and booleans."},{id:"pb-9",front:"What is an operator?",back:"An operator is a symbol that performs operations on values. Examples include arithmetic operators (+, -, *, /) and comparison operators (==, !=, >, <)."},{id:"pb-10",front:"What is a constant?",back:"A constant is a variable whose value cannot be changed after it's assigned. It's used for values that should remain the same throughout the program."},{id:"pb-11",front:"What is scope?",back:"Scope defines where a variable can be accessed in a program. Variables can have global scope (accessible everywhere) or local scope (accessible only within a function)."},{id:"pb-12",front:"What is a parameter?",back:"A parameter is a variable that is passed to a function when it's called. It allows the function to work with different values each time it's used."},{id:"pb-13",front:"What is a return value?",back:"A return value is the output of a function. It's the result that the function sends back to the code that called it."},{id:"pb-14",front:"What is an array?",back:"An array is a data structure that stores a collection of elements, each identified by an index. Elements can be accessed directly using their index."},{id:"pb-15",front:"What is a string?",back:"A string is a sequence of characters. In programming, strings are typically used to represent text."},{id:"pb-16",front:"What is a boolean?",back:"A boolean is a data type that can have only two values: true or false. It's used for logical operations and conditions."},{id:"pb-17",front:"What is a list?",back:"A list is a data structure that can store multiple items in a single variable. Unlike arrays, lists can store items of different types."},{id:"pb-18",front:"What is a dictionary/map?",back:"A dictionary (or map) is a data structure that stores key-value pairs. Each value is associated with a unique key that can be used to access it."},{id:"pb-19",front:"What is a class?",back:"A class is a blueprint for creating objects. It defines the properties and methods that objects of that class will have."},{id:"pb-20",front:"What is an object?",back:"An object is an instance of a class. It contains data (properties) and code (methods) that operate on that data."}]},{id:"programming-concepts",title:"Advanced Programming Concepts",description:"Understanding complex programming concepts and patterns",cards:[{id:"pc-1",front:"What is object-oriented programming (OOP)?",back:"OOP is a programming paradigm that organizes code into objects that contain data and code. It emphasizes reusability and maintainability."},{id:"pc-2",front:"What is inheritance?",back:"Inheritance is a mechanism that allows a class to inherit properties and methods from another class. It promotes code reuse and establishes relationships between classes."},{id:"pc-3",front:"What is polymorphism?",back:"Polymorphism is the ability of different objects to respond to the same method call in different ways. It allows for flexible and extensible code."},{id:"pc-4",front:"What is encapsulation?",back:"Encapsulation is the bundling of data and methods that operate on that data within a single unit (class). It helps protect data from unauthorized access."},{id:"pc-5",front:"What is abstraction?",back:"Abstraction is the process of hiding complex implementation details and showing only the necessary features of an object. It helps manage complexity."},{id:"pc-6",front:"What is a design pattern?",back:"A design pattern is a reusable solution to common problems in software design. It provides a template for solving similar problems in different contexts."},{id:"pc-7",front:"What is recursion?",back:"Recursion is a programming technique where a function calls itself to solve a problem. It's useful for problems that can be broken down into smaller, similar subproblems."},{id:"pc-8",front:"What is a stack?",back:"A stack is a data structure that follows the Last-In-First-Out (LIFO) principle. Elements can only be added or removed from the top of the stack."},{id:"pc-9",front:"What is a queue?",back:"A queue is a data structure that follows the First-In-First-Out (FIFO) principle. Elements are added to the end and removed from the front."},{id:"pc-10",front:"What is a tree?",back:"A tree is a hierarchical data structure with nodes connected by edges. Each node can have multiple children but only one parent (except the root)."},{id:"pc-11",front:"What is a graph?",back:"A graph is a data structure consisting of nodes (vertices) connected by edges. It can represent complex relationships between objects."},{id:"pc-12",front:"What is a hash table?",back:"A hash table is a data structure that maps keys to values using a hash function. It provides fast access to data based on keys."},{id:"pc-13",front:"What is a binary search?",back:"Binary search is an efficient algorithm for finding an element in a sorted array. It repeatedly divides the search interval in half."},{id:"pc-14",front:"What is a sorting algorithm?",back:"A sorting algorithm is a method for arranging elements in a specific order. Common algorithms include bubble sort, quick sort, and merge sort."},{id:"pc-15",front:"What is a linked list?",back:"A linked list is a data structure where elements are stored in nodes, and each node points to the next node. It allows for efficient insertion and deletion."},{id:"pc-16",front:"What is a binary tree?",back:"A binary tree is a tree data structure where each node has at most two children, referred to as the left child and right child."},{id:"pc-17",front:"What is a heap?",back:"A heap is a specialized tree-based data structure that satisfies the heap property. It's commonly used to implement priority queues."},{id:"pc-18",front:"What is a set?",back:"A set is a data structure that stores unique elements. It doesn't allow duplicates and provides efficient operations for adding, removing, and checking membership."},{id:"pc-19",front:"What is a map?",back:"A map is a data structure that stores key-value pairs. It provides efficient lookup, insertion, and deletion operations based on keys."},{id:"pc-20",front:"What is a stack overflow?",back:"A stack overflow occurs when a program tries to use more stack space than is available, typically due to infinite recursion or very deep recursion."}]}],quiz:{questions:[{id:"q1",question:"What is the purpose of a variable in programming?",options:["To make the code look pretty","To store and manipulate data","To connect to the internet","To display text on screen"],correctAnswer:1},{id:"q2",question:"Which of the following is NOT a common loop type?",options:["for loop","while loop","if loop","do-while loop"],correctAnswer:2},{id:"q3",question:"What is the main difference between an array and a list?",options:["Arrays are faster than lists","Lists can store different types of data, arrays cannot","Arrays are newer than lists","Lists are always larger than arrays"],correctAnswer:1},{id:"q4",question:"What is the purpose of a function?",options:["To make the code longer","To store data permanently","To perform a specific task","To display graphics"],correctAnswer:2},{id:"q5",question:"What is the main purpose of debugging?",options:["To make the code run faster","To find and fix errors","To add new features","To improve graphics"],correctAnswer:1},{id:"q6",question:"What is the purpose of a conditional statement?",options:["To store data","To repeat code","To make decisions in code","To display text"],correctAnswer:2},{id:"q7",question:"What is the main purpose of comments in code?",options:["To make the code run faster","To explain what the code does","To store data","To display graphics"],correctAnswer:1},{id:"q8",question:"What is the purpose of a data type?",options:["To make the code look pretty","To define what kind of data can be stored","To connect to the internet","To display text"],correctAnswer:1},{id:"q9",question:"What is the main purpose of a constant?",options:["To store changing data","To store data that cannot be changed","To make the code run faster","To display graphics"],correctAnswer:1},{id:"q10",question:"What is the purpose of scope in programming?",options:["To make the code look pretty","To define where variables can be accessed","To connect to the internet","To display text"],correctAnswer:1},{id:"q11",question:"What is the main purpose of parameters in a function?",options:["To make the function longer","To allow the function to work with different values","To store data permanently","To display graphics"],correctAnswer:1},{id:"q12",question:"What is the purpose of a return value?",options:["To make the function longer","To send data back from a function","To store data permanently","To display graphics"],correctAnswer:1},{id:"q13",question:"What is the main purpose of a class?",options:["To store data","To create objects with properties and methods","To connect to the internet","To display text"],correctAnswer:1},{id:"q14",question:"What is the purpose of inheritance?",options:["To make the code longer","To reuse code from another class","To store data","To display graphics"],correctAnswer:1},{id:"q15",question:"What is the main purpose of polymorphism?",options:["To make the code longer","To allow different objects to respond to the same method","To store data","To display text"],correctAnswer:1},{id:"q16",question:"What is the purpose of encapsulation?",options:["To make the code longer","To protect data from unauthorized access","To connect to the internet","To display graphics"],correctAnswer:1},{id:"q17",question:"What is the main purpose of abstraction?",options:["To make the code longer","To hide complex implementation details","To store data","To display text"],correctAnswer:1},{id:"q18",question:"What is the purpose of a design pattern?",options:["To make the code longer","To provide reusable solutions to common problems","To store data","To display graphics"],correctAnswer:1},{id:"q19",question:"What is the main purpose of recursion?",options:["To make the code longer","To solve problems by breaking them into smaller subproblems","To store data","To display text"],correctAnswer:1},{id:"q20",question:"What is the purpose of a stack overflow?",options:["To make the code longer","To indicate that the program has used too much stack space","To store data","To display graphics"],correctAnswer:1}]}},{id:"html-css-basics",title:"HTML & CSS Fundamentals",description:"Master the building blocks of web development",level:"beginner",sets:[{id:"html-basics",title:"HTML Fundamentals",description:"Understanding HTML structure and elements",cards:[{id:"html-1",front:"What is HTML?",back:"HTML (Hypertext Markup Language) is the standard markup language for creating web pages. It defines the structure and content of a webpage."},{id:"html-2",front:"What is a doctype?",back:"The doctype declaration specifies the version of HTML being used. It helps browsers render the page correctly. Example: <!DOCTYPE html>"},{id:"html-3",front:"What is a tag?",back:"A tag is used to define HTML elements. They come in pairs: opening and closing tags. Example: <p>content</p>"},{id:"html-4",front:"What is an attribute?",back:'Attributes provide additional information about HTML elements. They are always specified in the start tag. Example: <img src="image.jpg" alt="description">'},{id:"html-5",front:"What is a comment?",back:"Comments are used to leave notes in the code for other developers. They are not displayed in the browser. Example: \x3c!-- This is a comment --\x3e"},{id:"html-6",front:"What is semantic HTML?",back:"Semantic HTML uses meaningful tags that clearly describe their content. Examples include <header>, <nav>, <main>, <article>, <section>, and <footer>."},{id:"html-7",front:"What is the difference between <div> and <span>?",back:"<div> is a block-level element that creates a new line, while <span> is an inline element that doesn't create a new line."},{id:"html-8",front:"What is the purpose of the <meta> tag?",back:"The <meta> tag provides metadata about the HTML document, such as character encoding, viewport settings, and SEO information."},{id:"html-9",front:"What is the difference between <ul> and <ol>?",back:"<ul> creates an unordered list with bullet points, while <ol> creates an ordered list with numbers or letters."},{id:"html-10",front:"What is the purpose of the <form> element?",back:"The <form> element is used to create an HTML form for user input. It can contain various input elements like text fields, checkboxes, and buttons."},{id:"html-11",front:"What is the difference between GET and POST methods?",back:"GET sends data in the URL, while POST sends data in the request body. GET is for retrieving data, POST is for submitting data."},{id:"html-12",front:"What is the purpose of the <table> element?",back:"The <table> element is used to create tables with rows and columns. It includes <tr> for rows, <td> for cells, and <th> for header cells."},{id:"html-13",front:"What is the purpose of the <iframe> element?",back:"The <iframe> element is used to embed another HTML document within the current document. It's commonly used for videos, maps, and other external content."},{id:"html-14",front:"What is the purpose of the <canvas> element?",back:"The <canvas> element is used to draw graphics using JavaScript. It provides a drawing surface for creating animations, games, and other visual content."},{id:"html-15",front:"What is the purpose of the <video> element?",back:"The <video> element is used to embed video content in a webpage. It supports multiple video formats and provides controls for playback."},{id:"html-16",front:"What is the purpose of the <audio> element?",back:"The <audio> element is used to embed sound content in a webpage. It supports multiple audio formats and provides controls for playback."},{id:"html-17",front:"What is the purpose of the <figure> element?",back:"The <figure> element is used to group media content with a caption. It's commonly used with images, videos, and other media."},{id:"html-18",front:"What is the purpose of the <details> element?",back:"The <details> element creates a disclosure widget that can be toggled open and closed. It's used for additional information that can be shown or hidden."},{id:"html-19",front:"What is the purpose of the <dialog> element?",back:"The <dialog> element represents a dialog box or window. It's used for modal dialogs, popups, and other interactive content."},{id:"html-20",front:"What is the purpose of the <template> element?",back:"The <template> element is used to hold HTML content that should not be rendered immediately. It can be cloned and inserted into the document using JavaScript."}]},{id:"css-basics",title:"CSS Fundamentals",description:"Understanding CSS styling and layout",cards:[{id:"css-1",front:"What is CSS?",back:"CSS (Cascading Style Sheets) is a styling language used to describe the presentation of a document written in HTML. It controls layout, colors, fonts, and animations."},{id:"css-2",front:"What is a selector?",back:"A selector is used to select HTML elements for styling. Examples include element selectors (p), class selectors (.class), and ID selectors (#id)."},{id:"css-3",front:"What is a property?",back:"A property is a characteristic of an HTML element that can be styled. Examples include color, font-size, margin, and padding."},{id:"css-4",front:"What is a value?",back:"A value is assigned to a property to determine its appearance. Examples include color values (red, #FF0000), size values (10px, 2em), and position values (center, left)."},{id:"css-5",front:"What is a declaration?",back:"A declaration is a property-value pair in a CSS rule. Example: color: blue;"},{id:"css-6",front:"What is the box model?",back:"The box model describes how elements are rendered as boxes with content, padding, border, and margin. It affects layout and spacing."},{id:"css-7",front:"What is the difference between margin and padding?",back:"Margin is the space outside an element's border, while padding is the space between the content and the border."},{id:"css-8",front:"What is the difference between display: block and display: inline?",back:"Block elements take up the full width and create a new line, while inline elements only take up as much width as necessary and don't create new lines."},{id:"css-9",front:"What is flexbox?",back:"Flexbox is a one-dimensional layout method for arranging items in rows or columns. It provides flexible and responsive layouts."},{id:"css-10",front:"What is CSS Grid?",back:"CSS Grid is a two-dimensional layout system for creating complex web layouts. It allows for both rows and columns to be defined."},{id:"css-11",front:"What is a media query?",back:"A media query is a CSS technique that applies styles based on device characteristics, such as screen size, resolution, and orientation."},{id:"css-12",front:"What is the difference between position: relative and position: absolute?",back:"Relative positioning moves an element relative to its normal position, while absolute positioning removes the element from the normal flow and positions it relative to its nearest positioned ancestor."},{id:"css-13",front:"What is the z-index property?",back:"The z-index property specifies the stack order of elements. Elements with higher z-index values appear on top of elements with lower values."},{id:"css-14",front:"What is a CSS variable?",back:"CSS variables (custom properties) allow you to store and reuse values throughout your stylesheet. They are defined with -- and accessed with var()."},{id:"css-15",front:"What is the difference between em and rem units?",back:"em is relative to the font-size of the element, while rem is relative to the font-size of the root element (html)."},{id:"css-16",front:"What is the purpose of the @import rule?",back:"The @import rule is used to import one stylesheet into another. It must be placed at the top of the stylesheet."},{id:"css-17",front:"What is the purpose of the @media rule?",back:"The @media rule is used to apply styles based on media queries. It allows for responsive design by targeting specific device characteristics."},{id:"css-18",front:"What is the purpose of the @keyframes rule?",back:"The @keyframes rule is used to create animations. It defines the stages and styles of the animation."},{id:"css-19",front:"What is the purpose of the transform property?",back:"The transform property allows you to modify the coordinate space of an element. It can be used for rotation, scaling, translation, and skewing."},{id:"css-20",front:"What is the purpose of the transition property?",back:"The transition property allows you to change property values smoothly over a given duration. It creates animations between states."}]}],quiz:{questions:[{id:"q1",question:"What is the purpose of HTML?",options:["To style web pages","To create the structure of web pages","To add interactivity to web pages","To connect to databases"],correctAnswer:1},{id:"q2",question:"What is the purpose of CSS?",options:["To create the structure of web pages","To style web pages","To add interactivity to web pages","To connect to databases"],correctAnswer:1},{id:"q3",question:"What is semantic HTML?",options:["HTML that uses only div elements","HTML that uses meaningful tags","HTML that uses only class names","HTML that uses only inline styles"],correctAnswer:1},{id:"q4",question:"What is the box model?",options:["A way to create boxes in CSS","A way to create layouts in CSS","A way to describe how elements are rendered","A way to create animations in CSS"],correctAnswer:2},{id:"q5",question:"What is the difference between margin and padding?",options:["Margin is inside, padding is outside","Margin is outside, padding is inside","Margin is for text, padding is for images","Margin is for color, padding is for size"],correctAnswer:1},{id:"q6",question:"What is flexbox?",options:["A way to create tables","A way to create animations","A way to create flexible layouts","A way to create colors"],correctAnswer:2},{id:"q7",question:"What is CSS Grid?",options:["A way to create tables","A way to create animations","A way to create two-dimensional layouts","A way to create colors"],correctAnswer:2},{id:"q8",question:"What is a media query?",options:["A way to create tables","A way to create animations","A way to create responsive designs","A way to create colors"],correctAnswer:2},{id:"q9",question:"What is the difference between em and rem units?",options:["em is for text, rem is for images","em is relative to parent, rem is relative to root","em is for color, rem is for size","em is for layout, rem is for animation"],correctAnswer:1},{id:"q10",question:"What is the purpose of CSS variables?",options:["To create tables","To create animations","To store and reuse values","To create colors"],correctAnswer:2},{id:"q11",question:"What is the purpose of the transform property?",options:["To create tables","To create animations","To modify the coordinate space of an element","To create colors"],correctAnswer:2},{id:"q12",question:"What is the purpose of the transition property?",options:["To create tables","To create smooth animations between states","To create layouts","To create colors"],correctAnswer:1},{id:"q13",question:"What is the purpose of the @keyframes rule?",options:["To create tables","To create animations","To create layouts","To create colors"],correctAnswer:1},{id:"q14",question:"What is the purpose of the z-index property?",options:["To create tables","To create animations","To specify the stack order of elements","To create colors"],correctAnswer:2},{id:"q15",question:"What is the purpose of the position property?",options:["To create tables","To create animations","To specify how an element is positioned","To create colors"],correctAnswer:2},{id:"q16",question:"What is the purpose of the display property?",options:["To create tables","To create animations","To specify how an element is displayed","To create colors"],correctAnswer:2},{id:"q17",question:"What is the purpose of the float property?",options:["To create tables","To create animations","To specify how an element should float","To create colors"],correctAnswer:2},{id:"q18",question:"What is the purpose of the clear property?",options:["To create tables","To create animations","To specify which sides of an element can be next to floating elements","To create colors"],correctAnswer:2},{id:"q19",question:"What is the purpose of the overflow property?",options:["To create tables","To create animations","To specify what happens if content overflows an element's box","To create colors"],correctAnswer:2},{id:"q20",question:"What is the purpose of the visibility property?",options:["To create tables","To create animations","To specify whether an element is visible or hidden","To create colors"],correctAnswer:2}]}},c,{id:"react-basics",title:"React Fundamentals",description:"Learn the core concepts of React and modern web development",level:"beginner",sets:[{id:"react-core",title:"React Core Concepts",description:"Understanding React fundamentals and component-based architecture",cards:[{id:"rc-1",front:"What is React?",back:"React is a JavaScript library for building user interfaces, particularly single-page applications. It's maintained by Facebook and a community of developers."},{id:"rc-2",front:"What is a component?",back:"A component is a reusable piece of UI that can contain its own logic and state. Components can be functional or class-based."},{id:"rc-3",front:"What is JSX?",back:"JSX is a syntax extension for JavaScript that allows you to write HTML-like code in your JavaScript files. It gets transformed into regular JavaScript."},{id:"rc-4",front:"What is state?",back:"State is a JavaScript object that stores a component's dynamic data and determines the component's behavior and rendering."},{id:"rc-5",front:"What are props?",back:"Props (properties) are read-only components that are passed from parent to child components. They are used to pass data and event handlers."},{id:"rc-6",front:"What is the Virtual DOM?",back:"The Virtual DOM is a lightweight copy of the actual DOM. React uses it to improve performance by minimizing direct manipulation of the DOM."},{id:"rc-7",front:"What is a hook?",back:"Hooks are functions that let you use state and other React features in functional components. Examples include useState and useEffect."},{id:"rc-8",front:"What is useState?",back:"useState is a Hook that lets you add state to functional components. It returns an array with the current state and a function to update it."},{id:"rc-9",front:"What is useEffect?",back:"useEffect is a Hook that lets you perform side effects in functional components, such as data fetching, subscriptions, or DOM manipulations."},{id:"rc-10",front:"What is a controlled component?",back:"A controlled component is a form element whose value is controlled by React state. The component's value is always in sync with the state."},{id:"rc-11",front:"What is a key prop?",back:"The key prop is a special attribute used to identify which items have changed, been added, or been removed in lists. It helps React optimize rendering."},{id:"rc-12",front:"What is prop drilling?",back:"Prop drilling is the process of passing props through multiple levels of components. It can be avoided using Context or state management libraries."},{id:"rc-13",front:"What is Context?",back:"Context provides a way to pass data through the component tree without having to pass props manually at every level."},{id:"rc-14",front:"What is a ref?",back:"A ref is a way to access and interact with DOM elements or React components directly. It's created using useRef or createRef."},{id:"rc-15",front:"What is a higher-order component (HOC)?",back:"A HOC is a function that takes a component and returns a new component with additional functionality. It's used for code reuse and logic sharing."},{id:"rc-16",front:"What is a custom hook?",back:'A custom hook is a JavaScript function that starts with "use" and can call other hooks. It allows you to extract component logic into reusable functions.'},{id:"rc-17",front:"What is React Router?",back:"React Router is a library for handling routing in React applications. It enables navigation between different components while maintaining the URL."},{id:"rc-18",front:"What is Redux?",back:"Redux is a state management library for JavaScript applications. It provides a predictable state container and helps manage application state."},{id:"rc-19",front:"What is a reducer?",back:"A reducer is a pure function that takes the current state and an action, and returns the new state. It's used in state management to handle state updates."},{id:"rc-20",front:"What is the difference between state and props?",back:"State is managed within a component and can be changed, while props are read-only and passed from parent to child components."}]},{id:"react-advanced",title:"Advanced React Concepts",description:"Understanding advanced React patterns and best practices",cards:[{id:"ra-1",front:"What is code splitting?",back:"Code splitting is a technique that allows you to split your code into various bundles which can then be loaded on demand or in parallel."},{id:"ra-2",front:"What is lazy loading?",back:"Lazy loading is a technique that delays the loading of non-critical resources at page load time. It helps improve initial load performance."},{id:"ra-3",front:"What is memoization?",back:"Memoization is an optimization technique that stores the results of expensive function calls and returns the cached result when the same inputs occur again."},{id:"ra-4",front:"What is React.memo?",back:"React.memo is a higher-order component that memoizes a component. It prevents unnecessary re-renders when props haven't changed."},{id:"ra-5",front:"What is useMemo?",back:"useMemo is a Hook that memoizes a computed value. It only recomputes the value when one of its dependencies has changed."},{id:"ra-6",front:"What is useCallback?",back:"useCallback is a Hook that memoizes a callback function. It returns the same function instance between re-renders unless dependencies change."},{id:"ra-7",front:"What is a portal?",back:"Portals provide a way to render children into a DOM node that exists outside the DOM hierarchy of the parent component."},{id:"ra-8",front:"What is error boundary?",back:"Error boundaries are React components that catch JavaScript errors anywhere in their child component tree and display a fallback UI."},{id:"ra-9",front:"What is a render prop?",back:"A render prop is a technique for sharing code between components using a prop whose value is a function that returns a React element."},{id:"ra-10",front:"What is a compound component?",back:"Compound components are a pattern where components work together to share state and handle logic while giving you a flexible way to customize the UI."},{id:"ra-11",front:"What is the Context API?",back:"The Context API is a React feature that provides a way to pass data through the component tree without having to pass props manually at every level."},{id:"ra-12",front:"What is a custom hook?",back:'A custom hook is a JavaScript function that starts with "use" and can call other hooks. It allows you to extract component logic into reusable functions.'},{id:"ra-13",front:"What is React.lazy?",back:"React.lazy is a function that lets you render a dynamic import as a regular component. It's used for code splitting and lazy loading."},{id:"ra-14",front:"What is Suspense?",back:"Suspense is a React component that lets you specify a loading state while waiting for some code to load. It works with React.lazy for code splitting."},{id:"ra-15",front:"What is a controlled component?",back:"A controlled component is a form element whose value is controlled by React state. The component's value is always in sync with the state."},{id:"ra-16",front:"What is an uncontrolled component?",back:"An uncontrolled component is a form element whose value is controlled by the DOM. It maintains its own internal state."},{id:"ra-17",front:"What is the difference between useEffect and useLayoutEffect?",back:"useEffect runs after the render is committed to the screen, while useLayoutEffect runs synchronously after all DOM mutations."},{id:"ra-18",front:"What is the purpose of useRef?",back:"useRef returns a mutable ref object that persists for the full lifetime of the component. It can be used to access DOM elements or store mutable values."},{id:"ra-19",front:"What is the purpose of useReducer?",back:"useReducer is a Hook that is used for state management. It accepts a reducer function and an initial state, and returns the current state and a dispatch function."},{id:"ra-20",front:"What is the purpose of useImperativeHandle?",back:"useImperativeHandle customizes the instance value that is exposed when using React.forwardRef. It allows you to control what methods are exposed to parent components."}]}],quiz:{questions:[{id:"q1",question:"What is the main purpose of React?",options:["To style web pages","To build user interfaces","To connect to databases","To handle server-side logic"],correctAnswer:1},{id:"q2",question:"What is JSX?",options:["A database query language","A styling language","A syntax extension for JavaScript","A server-side framework"],correctAnswer:2},{id:"q3",question:"What is the difference between state and props?",options:["State is for styling, props are for data","State is mutable, props are read-only","State is for functions, props are for variables","State is for HTML, props are for CSS"],correctAnswer:1},{id:"q4",question:"What is the purpose of useEffect?",options:["To style components","To handle routing","To perform side effects","To create new components"],correctAnswer:2},{id:"q5",question:"What is a controlled component?",options:["A component that uses CSS","A component that uses JavaScript","A component whose value is controlled by React state","A component that controls other components"],correctAnswer:2},{id:"q6",question:"What is the purpose of the key prop?",options:["To style elements","To identify items in lists","To connect to APIs","To handle events"],correctAnswer:1},{id:"q7",question:"What is prop drilling?",options:["A way to style components","A way to handle events","Passing props through multiple levels","A way to create new components"],correctAnswer:2},{id:"q8",question:"What is the purpose of Context?",options:["To style components","To handle routing","To pass data through the component tree","To create new components"],correctAnswer:2},{id:"q9",question:"What is a custom hook?",options:["A way to style components","A way to handle events","A reusable function that can use other hooks","A way to create new components"],correctAnswer:2},{id:"q10",question:"What is the purpose of useMemo?",options:["To style components","To handle routing","To memoize computed values","To create new components"],correctAnswer:2},{id:"q11",question:"What is the purpose of useCallback?",options:["To style components","To memoize callback functions","To handle routing","To create new components"],correctAnswer:1},{id:"q12",question:"What is the purpose of a portal?",options:["To style components","To handle routing","To render children outside the DOM hierarchy","To create new components"],correctAnswer:2},{id:"q13",question:"What is an error boundary?",options:["A way to style components","A way to handle routing","A component that catches JavaScript errors","A way to create new components"],correctAnswer:2},{id:"q14",question:"What is a render prop?",options:["A way to style components","A way to handle routing","A prop whose value is a function that returns a React element","A way to create new components"],correctAnswer:2},{id:"q15",question:"What is a compound component?",options:["A way to style components","A way to handle routing","Components that work together to share state","A way to create new components"],correctAnswer:2},{id:"q16",question:"What is the purpose of React.lazy?",options:["To style components","To handle routing","To render dynamic imports as regular components","To create new components"],correctAnswer:2},{id:"q17",question:"What is the purpose of Suspense?",options:["To style components","To handle routing","To specify a loading state while waiting for code to load","To create new components"],correctAnswer:2},{id:"q18",question:"What is the difference between useEffect and useLayoutEffect?",options:["useEffect is for styling, useLayoutEffect is for data","useEffect runs after render, useLayoutEffect runs synchronously","useEffect is for functions, useLayoutEffect is for variables","useEffect is for HTML, useLayoutEffect is for CSS"],correctAnswer:1},{id:"q19",question:"What is the purpose of useRef?",options:["To style components","To handle routing","To access DOM elements or store mutable values","To create new components"],correctAnswer:2},{id:"q20",question:"What is the purpose of useReducer?",options:["To style components","To handle routing","To manage state with a reducer function","To create new components"],correctAnswer:2}]}},d,u,l,p,h,f,{id:"linux-commands",title:"Linux Commands",description:"Learn essential Linux commands from basics to advanced",level:"beginner",category:"system",createdAt:new Date,updatedAt:new Date,sets:[{id:"linux-beginner",title:"Linux Beginner",description:"Basic Linux commands and file operations",category:"system",createdAt:new Date,updatedAt:new Date,cards:[{id:"linux-b-1",front:"What is the ls command?",back:"The ls command lists directory contents, showing files and directories in the current directory.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-2",front:"What is the cd command?",back:"The cd command changes the current directory. Use cd .. to go up one level, cd ~ to go home.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-3",front:"What is the pwd command?",back:"The pwd (Print Working Directory) command displays the current directory path.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-4",front:"What is the mkdir command?",back:"The mkdir command creates a new directory. Use mkdir -p to create parent directories if needed.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-5",front:"What is the rm command?",back:"The rm command removes files. Use rm -r for directories, rm -f to force removal without confirmation.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-6",front:"What is the cp command?",back:"The cp command copies files and directories. Use cp -r to copy directories recursively.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-7",front:"What is the mv command?",back:"The mv command moves or renames files and directories.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-8",front:"What is the touch command?",back:"The touch command creates an empty file or updates the timestamp of an existing file.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-9",front:"What is the cat command?",back:"The cat command displays file contents. It can also concatenate multiple files.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-10",front:"What is the less command?",back:"The less command displays file contents one page at a time, allowing scrolling and searching.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-11",front:"What is the head command?",back:"The head command displays the first few lines of a file. Use -n to specify number of lines.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-12",front:"What is the tail command?",back:"The tail command displays the last few lines of a file. Use -f to follow file updates in real-time.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-13",front:"What is the grep command?",back:"The grep command searches for patterns in files. Use -i for case-insensitive search, -r for recursive search.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-14",front:"What is the find command?",back:"The find command searches for files in a directory hierarchy based on various criteria.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-15",front:"What is the chmod command?",back:"The chmod command changes file permissions. Use numbers (755) or letters (u+x) to set permissions.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-16",front:"What is the chown command?",back:"The chown command changes file owner and group. Use chown user:group file to change both.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0},{id:"linux-b-17",front:"What is the man command?",back:"The man command displays the manual pages for commands, providing detailed documentation.",category:"system",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"linux-intermediate",title:"Linux Intermediate",description:"Intermediate Linux commands and system operations",category:"system",createdAt:new Date,updatedAt:new Date,cards:[{id:"linux-i-1",front:"What is the ps command?",back:"The ps command displays running processes. Use ps aux for detailed process information.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-2",front:"What is the top command?",back:"The top command displays real-time system information, including process and resource usage.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-3",front:"What is the kill command?",back:"The kill command terminates processes. Use kill -9 for forceful termination.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-4",front:"What is the df command?",back:"The df command displays disk space usage. Use df -h for human-readable format.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-5",front:"What is the du command?",back:"The du command estimates file space usage. Use du -h for human-readable format, du -s for summary.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-6",front:"What is the tar command?",back:"The tar command creates and extracts archive files. Use tar -czf to create, tar -xzf to extract.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-7",front:"What is the gzip command?",back:"The gzip command compresses files. Use gzip -d to decompress.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-8",front:"What is the ssh command?",back:"The ssh command provides secure remote login. Use ssh user@host to connect.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-9",front:"What is the scp command?",back:"The scp command securely copies files between hosts. Use scp file user@host:path to copy.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-10",front:"What is the rsync command?",back:"The rsync command synchronizes files and directories. Use rsync -av for verbose archive mode.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-11",front:"What is the crontab command?",back:"The crontab command manages scheduled tasks. Use crontab -e to edit, crontab -l to list.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-12",front:"What is the systemctl command?",back:"The systemctl command manages systemd services. Use systemctl start/stop/restart service.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-13",front:"What is the journalctl command?",back:"The journalctl command displays systemd journal logs. Use journalctl -f to follow logs.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-14",front:"What is the netstat command?",back:"The netstat command displays network connections. Use netstat -tuln for listening ports.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-15",front:"What is the iptables command?",back:"The iptables command configures firewall rules. Use iptables -L to list rules.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-16",front:"What is the mount command?",back:"The mount command attaches filesystems. Use mount -a to mount all filesystems in /etc/fstab.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0},{id:"linux-i-17",front:"What is the umount command?",back:"The umount command detaches filesystems. Use umount -f for force unmount.",category:"system",difficulty:"medium",reviewCount:0,correctCount:0}]},{id:"linux-advanced",title:"Linux Advanced",description:"Advanced Linux commands and system administration",category:"system",createdAt:new Date,updatedAt:new Date,cards:[{id:"linux-a-1",front:"What is the strace command?",back:"The strace command traces system calls and signals. Use strace -p pid to trace a process.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-2",front:"What is the lsof command?",back:"The lsof command lists open files. Use lsof -i to show network connections.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-3",front:"What is the tcpdump command?",back:"The tcpdump command captures network packets. Use tcpdump -i interface to capture on specific interface.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-4",front:"What is the dd command?",back:"The dd command converts and copies files. Use dd if=input of=output bs=blocksize for disk operations.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-5",front:"What is the fdisk command?",back:"The fdisk command manipulates disk partition tables. Use fdisk -l to list partitions.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-6",front:"What is the lvm command?",back:"The lvm command manages Logical Volume Manager. Use pvcreate, vgcreate, lvcreate for volume management.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-7",front:"What is the iostat command?",back:"The iostat command reports CPU and I/O statistics. Use iostat -x for extended statistics.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-8",front:"What is the vmstat command?",back:"The vmstat command reports virtual memory statistics. Use vmstat 1 for real-time updates.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-9",front:"What is the sar command?",back:"The sar command collects and reports system activity. Use sar -u for CPU statistics.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-10",front:"What is the nmap command?",back:"The nmap command scans networks. Use nmap -sV for service version detection.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-11",front:"What is the htop command?",back:"The htop command is an interactive process viewer. Use F6 to sort, F3 to search.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-12",front:"What is the nc command?",back:"The nc (netcat) command is a networking utility. Use nc -l port to listen, nc host port to connect.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-13",front:"What is the screen command?",back:"The screen command provides terminal multiplexing. Use screen -S name to create, screen -r to attach.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-14",front:"What is the tmux command?",back:"The tmux command is a terminal multiplexer. Use tmux new -s name to create, tmux attach to attach.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-15",front:"What is the awk command?",back:"The awk command is a text processing tool. Use awk '{print $1}' to print first field.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0},{id:"linux-a-16",front:"What is the sed command?",back:"The sed command is a stream editor. Use sed 's/old/new/g' to replace text.",category:"system",difficulty:"hard",reviewCount:0,correctCount:0}]}],quiz:{id:"linux-quiz",title:"Linux Commands Quiz",description:"Test your knowledge of Linux commands.",category:"system",timeLimit:30,passingScore:70,createdAt:new Date,updatedAt:new Date,questions:[{id:"q1",question:"What command is used to list directory contents?",options:["dir","ls","list","show"],correctAnswer:"ls",category:"system",difficulty:"easy"},{id:"q2",question:"What command is used to change directories?",options:["move","cd","change","goto"],correctAnswer:"cd",category:"system",difficulty:"easy"},{id:"q3",question:"What command is used to create a new directory?",options:["newdir","mkdir","createdir","makedir"],correctAnswer:"mkdir",category:"system",difficulty:"easy"},{id:"q4",question:"What command is used to remove a file?",options:["del","rm","remove","delete"],correctAnswer:"rm",category:"system",difficulty:"easy"},{id:"q5",question:"What command is used to copy files?",options:["copy","cp","duplicate","clone"],correctAnswer:"cp",category:"system",difficulty:"easy"},{id:"q6",question:"What command is used to move files?",options:["move","mv","transfer","shift"],correctAnswer:"mv",category:"system",difficulty:"easy"},{id:"q7",question:"What command is used to display file contents?",options:["show","cat","display","view"],correctAnswer:"cat",category:"system",difficulty:"easy"},{id:"q8",question:"What command is used to search for files?",options:["search","find","locate","where"],correctAnswer:"find",category:"system",difficulty:"easy"},{id:"q9",question:"What command is used to display system information?",options:["info","uname","system","about"],correctAnswer:"uname",category:"system",difficulty:"easy"},{id:"q10",question:"What command is used to display disk usage?",options:["disk","df","space","usage"],correctAnswer:"df",category:"system",difficulty:"easy"},{id:"q11",question:"What command is used to display memory usage?",options:["memory","free","mem","ram"],correctAnswer:"free",category:"system",difficulty:"easy"},{id:"q12",question:"What command is used to display process information?",options:["process","ps","proc","task"],correctAnswer:"ps",category:"system",difficulty:"easy"},{id:"q13",question:"What command is used to search within files?",options:["search","grep","find","locate"],correctAnswer:"grep",category:"system",difficulty:"medium"},{id:"q14",question:"What command is used to compress files?",options:["compress","gzip","zip","pack"],correctAnswer:"gzip",category:"system",difficulty:"medium"},{id:"q15",question:"What command is used to decompress files?",options:["decompress","gunzip","unzip","unpack"],correctAnswer:"gunzip",category:"system",difficulty:"medium"},{id:"q16",question:"What command is used to change file permissions?",options:["perm","chmod","access","rights"],correctAnswer:"chmod",category:"system",difficulty:"medium"},{id:"q17",question:"What command is used to change file ownership?",options:["own","chown","owner","possess"],correctAnswer:"chown",category:"system",difficulty:"medium"},{id:"q18",question:"What command is used to display network connections?",options:["net","netstat","network","conn"],correctAnswer:"netstat",category:"system",difficulty:"medium"},{id:"q19",question:"What command is used to test network connectivity?",options:["test","ping","check","verify"],correctAnswer:"ping",category:"system",difficulty:"medium"},{id:"q20",question:"What command is used to display routing table?",options:["route","routing","path","way"],correctAnswer:"route",category:"system",difficulty:"medium"},{id:"q21",question:"What command is used to display DNS information?",options:["dns","dig","domain","name"],correctAnswer:"dig",category:"system",difficulty:"medium"},{id:"q22",question:"What command is used to display system logs?",options:["log","journalctl","logs","history"],correctAnswer:"journalctl",category:"system",difficulty:"medium"},{id:"q23",question:"What command is used to display system services?",options:["service","systemctl","services","daemon"],correctAnswer:"systemctl",category:"system",difficulty:"medium"},{id:"q24",question:"What command is used to display system users?",options:["user","who","users","people"],correctAnswer:"who",category:"system",difficulty:"medium"},{id:"q25",question:"What command is used to monitor system resources?",options:["monitor","top","watch","observe"],correctAnswer:"top",category:"system",difficulty:"hard"},{id:"q26",question:"What command is used to analyze disk usage?",options:["analyze","du","disk","space"],correctAnswer:"du",category:"system",difficulty:"hard"},{id:"q27",question:"What command is used to display system load?",options:["load","uptime","system","cpu"],correctAnswer:"uptime",category:"system",difficulty:"hard"},{id:"q28",question:"What command is used to display system interrupts?",options:["interrupt","vmstat","int","irq"],correctAnswer:"vmstat",category:"system",difficulty:"hard"},{id:"q29",question:"What command is used to display system memory map?",options:["map","pmap","memory","ram"],correctAnswer:"pmap",category:"system",difficulty:"hard"},{id:"q30",question:"What command is used to display system call traces?",options:["trace","strace","call","sys"],correctAnswer:"strace",category:"system",difficulty:"hard"},{id:"q31",question:"What command is used to display system signals?",options:["signal","kill","sig","interrupt"],correctAnswer:"kill",category:"system",difficulty:"hard"},{id:"q32",question:"What command is used to display system timers?",options:["timer","crontab","time","schedule"],correctAnswer:"crontab",category:"system",difficulty:"hard"},{id:"q33",question:"What command is used to display system environment?",options:["env","environment","var","set"],correctAnswer:"env",category:"system",difficulty:"hard"},{id:"q34",question:"What command is used to display system aliases?",options:["alias","aliases","shortcut","name"],correctAnswer:"alias",category:"system",difficulty:"hard"},{id:"q35",question:"What command is used to display system history?",options:["history","hist","past","log"],correctAnswer:"history",category:"system",difficulty:"hard"}]}},{id:"algorithms-data-structures",title:"Algorithms & Data Structures",description:"Master fundamental algorithms and data structures for efficient problem solving",level:"intermediate",sets:[{id:"basic-data-structures",title:"Basic Data Structures",description:"Fundamental data structures every programmer should know",category:"data-structures",cards:[{id:"bds-1",front:"What is an array?",back:"An array is a linear data structure that stores elements in contiguous memory locations. Elements can be accessed directly using an index. Arrays have O(1) access time but O(n) insertion/deletion.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-2",front:"What is a linked list?",back:"A linked list is a linear data structure where elements are stored in nodes, and each node points to the next node. It has O(n) access time but O(1) insertion/deletion at the beginning.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-3",front:"What is a stack?",back:"A stack is a LIFO (Last In, First Out) data structure. Elements can only be added or removed from the top. Common operations are push, pop, and peek, all with O(1) time complexity.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-4",front:"What is a queue?",back:"A queue is a FIFO (First In, First Out) data structure. Elements are added at the rear and removed from the front. Common operations are enqueue, dequeue, and peek, all with O(1) time complexity.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-5",front:"What is a hash table?",back:"A hash table is a data structure that stores key-value pairs. It uses a hash function to map keys to array indices, providing average O(1) time complexity for insert, delete, and search operations.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-6",front:"What is a binary tree?",back:"A binary tree is a hierarchical data structure where each node has at most two children (left and right). It's used for efficient searching, sorting, and hierarchical data representation.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-7",front:"What is a binary search tree (BST)?",back:"A BST is a binary tree where for each node, all values in the left subtree are less than the node's value, and all values in the right subtree are greater. This enables O(log n) search operations.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-8",front:"What is a heap?",back:"A heap is a complete binary tree that satisfies the heap property. In a max heap, parent nodes are always greater than or equal to their children. Used for priority queues and heap sort.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-9",front:"What is a graph?",back:"A graph is a data structure consisting of vertices (nodes) connected by edges. It can be directed or undirected, weighted or unweighted. Used to represent relationships and networks.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-10",front:"What is a set?",back:"A set is a collection of unique elements with no specific order. It supports operations like add, remove, and contains. Implemented using hash tables for O(1) average time complexity.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-11",front:"What is a map/dictionary?",back:"A map is a data structure that stores key-value pairs where each key is unique. It provides fast lookup, insertion, and deletion operations, typically implemented using hash tables.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-12",front:"What is a trie?",back:"A trie (prefix tree) is a tree-like data structure used to store strings. Each node represents a character, and paths from root to leaf represent complete strings. Efficient for prefix searches.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-13",front:"What is a deque?",back:"A deque (double-ended queue) allows insertion and deletion from both ends. It combines the features of stacks and queues, providing O(1) time complexity for operations at both ends.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-14",front:"What is a priority queue?",back:"A priority queue is a data structure where elements are removed based on priority rather than insertion order. Typically implemented using heaps, providing O(log n) insertion and O(1) removal.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-15",front:"What is a union-find data structure?",back:"Union-find (disjoint-set) is a data structure that tracks a set of elements partitioned into disjoint subsets. It supports union and find operations, used in algorithms like Kruskal's MST.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-16",front:"What is a skip list?",back:"A skip list is a probabilistic data structure that allows O(log n) search complexity. It consists of multiple layers of linked lists, with higher layers having fewer elements.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0},{id:"bds-17",front:"What is a bloom filter?",back:"A bloom filter is a probabilistic data structure used to test whether an element is a member of a set. It may have false positives but never false negatives, providing space-efficient membership testing.",category:"data-structures",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"basic-algorithms",title:"Basic Algorithms",description:"Essential algorithms for problem solving",category:"algorithms",cards:[{id:"ba-1",front:"What is linear search?",back:"Linear search is a simple algorithm that checks each element in a list sequentially until the target is found or the end is reached. Time complexity is O(n) in the worst case.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-2",front:"What is binary search?",back:"Binary search is an efficient algorithm for finding an element in a sorted array. It repeatedly divides the search interval in half, achieving O(log n) time complexity.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-3",front:"What is bubble sort?",back:"Bubble sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. Time complexity is O(n\xb2).",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-4",front:"What is selection sort?",back:"Selection sort divides the array into sorted and unsorted regions. It repeatedly selects the smallest element from the unsorted region and places it in the sorted region. Time complexity is O(n\xb2).",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-5",front:"What is insertion sort?",back:"Insertion sort builds the final sorted array one item at a time. It takes each element and inserts it into its correct position in the sorted portion. Time complexity is O(n\xb2) but efficient for small arrays.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-6",front:"What is merge sort?",back:"Merge sort is a divide-and-conquer algorithm that recursively divides the array into halves, sorts them, and merges the sorted halves. Time complexity is O(n log n) and it's stable.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-7",front:"What is quick sort?",back:"Quick sort is a divide-and-conquer algorithm that picks a pivot element and partitions the array around it. Average time complexity is O(n log n), but worst case is O(n\xb2).",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-8",front:"What is heap sort?",back:"Heap sort uses a binary heap data structure to sort elements. It first builds a max heap, then repeatedly extracts the maximum element. Time complexity is O(n log n) and it's in-place.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-9",front:"What is depth-first search (DFS)?",back:"DFS is a graph traversal algorithm that explores as far as possible along each branch before backtracking. It uses a stack (or recursion) and is useful for topological sorting and cycle detection.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-10",front:"What is breadth-first search (BFS)?",back:"BFS is a graph traversal algorithm that explores all vertices at the current depth before moving to vertices at the next depth level. It uses a queue and is useful for shortest path problems.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-11",front:"What is the two-pointer technique?",back:"The two-pointer technique uses two pointers to solve problems efficiently. Common applications include finding pairs in sorted arrays, removing duplicates, and detecting cycles in linked lists.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-12",front:"What is the sliding window technique?",back:"The sliding window technique maintains a subset of elements (window) that slides through the array. It's useful for problems involving subarrays or substrings with specific properties.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-13",front:"What is the greedy approach?",back:"The greedy approach makes locally optimal choices at each step with the hope of finding a global optimum. It's simple but doesn't always guarantee the best solution.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-14",front:"What is dynamic programming?",back:"Dynamic programming solves complex problems by breaking them into simpler subproblems and storing the results. It avoids redundant calculations and is used for optimization problems.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-15",front:"What is backtracking?",back:"Backtracking is a systematic way to search for solutions by trying different choices and undoing them if they don't lead to a solution. Used for constraint satisfaction problems.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0},{id:"ba-16",front:"What is the divide-and-conquer approach?",back:"Divide-and-conquer breaks a problem into smaller subproblems, solves them recursively, and combines the solutions. Examples include merge sort, quick sort, and binary search.",category:"algorithms",difficulty:"easy",reviewCount:0,correctCount:0}]},{id:"advanced-concepts",title:"Advanced Concepts",description:"Advanced algorithms and optimization techniques",category:"advanced",cards:[{id:"ac-1",front:"What is Dijkstra's algorithm?",back:"Dijkstra's algorithm finds the shortest path between nodes in a weighted graph. It uses a priority queue and has O((V + E) log V) time complexity with a binary heap implementation.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-2",front:"What is the Floyd-Warshall algorithm?",back:"Floyd-Warshall finds shortest paths between all pairs of vertices in a weighted graph. It uses dynamic programming and has O(V\xb3) time complexity, working with negative weights (no negative cycles).",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-3",front:"What is Kruskal's algorithm?",back:"Kruskal's algorithm finds a minimum spanning tree for a weighted graph. It sorts edges by weight and uses union-find to avoid cycles. Time complexity is O(E log E) where E is the number of edges.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-4",front:"What is Prim's algorithm?",back:"Prim's algorithm finds a minimum spanning tree by growing it from a starting vertex. It uses a priority queue to select the minimum weight edge. Time complexity is O(E log V) with a binary heap.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-5",front:"What is the Knapsack problem?",back:"The Knapsack problem involves selecting items with given weights and values to maximize total value while staying within a weight limit. It's solved using dynamic programming with O(nW) complexity.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-6",front:"What is the Longest Common Subsequence (LCS)?",back:"LCS finds the longest subsequence present in both strings. It's solved using dynamic programming with O(mn) time complexity, where m and n are the lengths of the input strings.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-7",front:"What is the Edit Distance problem?",back:"Edit Distance (Levenshtein) measures the minimum number of operations (insert, delete, substitute) to transform one string into another. Solved with dynamic programming in O(mn) time.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-8",front:"What is the Traveling Salesman Problem (TSP)?",back:"TSP finds the shortest possible route visiting each city exactly once and returning to the starting city. It's NP-hard, with exact solutions using dynamic programming in O(n\xb22ⁿ) time.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-9",front:"What is memoization?",back:"Memoization is an optimization technique that stores the results of expensive function calls and returns the cached result when the same inputs occur again. It's a top-down approach to dynamic programming.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-10",front:"What is tabulation?",back:"Tabulation is a bottom-up approach to dynamic programming that builds the solution iteratively, starting from the base cases. It avoids recursion overhead and is often more space-efficient.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-11",front:"What is the Boyer-Moore algorithm?",back:"Boyer-Moore is a string searching algorithm that uses two heuristics (bad character and good suffix) to skip comparisons. It has O(nm) worst case but often performs better in practice.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-12",front:"What is the KMP (Knuth-Morris-Pratt) algorithm?",back:"KMP is a string searching algorithm that uses a failure function to avoid unnecessary comparisons. It has O(n + m) time complexity, where n and m are the lengths of the text and pattern.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-13",front:"What is the A* search algorithm?",back:"A* is an informed search algorithm that uses a heuristic function to estimate the cost to reach the goal. It combines the cost to reach a node with the estimated cost to the goal.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-14",front:"What is the Bellman-Ford algorithm?",back:"Bellman-Ford finds shortest paths in a weighted graph and can handle negative weights. It relaxes all edges V-1 times and has O(VE) time complexity. It can detect negative cycles.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-15",front:"What is the Topological Sort algorithm?",back:"Topological sort orders vertices in a directed acyclic graph so that all edges point forward. It uses DFS with a stack or Kahn's algorithm with in-degree counting. Time complexity is O(V + E).",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-16",front:"What is the Tarjan's algorithm?",back:"Tarjan's algorithm finds strongly connected components in a directed graph using DFS. It uses low-link values and a stack to identify components. Time complexity is O(V + E).",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0},{id:"ac-17",front:"What is the Union-Find with path compression?",back:"Union-Find with path compression and union by rank achieves near-constant time complexity for union and find operations. Path compression makes each node point directly to the root.",category:"advanced",difficulty:"hard",reviewCount:0,correctCount:0}]}],quiz:{questions:[{id:"q1",question:"Which data structure provides O(1) average time complexity for insert, delete, and search operations?",options:["Array","Linked List","Hash Table","Binary Tree"],correctAnswer:2},{id:"q2",question:"What is the time complexity of binary search on a sorted array?",options:["O(1)","O(log n)","O(n)","O(n\xb2)"],correctAnswer:1},{id:"q3",question:"Which sorting algorithm has the best average-case time complexity?",options:["Bubble Sort","Quick Sort","Selection Sort","Insertion Sort"],correctAnswer:1},{id:"q4",question:"What is the main advantage of a stack data structure?",options:["Fast random access","LIFO operations are O(1)","Can store unlimited elements","Supports sorting"],correctAnswer:1},{id:"q5",question:"Which graph traversal algorithm uses a queue?",options:["Depth-First Search","Breadth-First Search","Both","Neither"],correctAnswer:1},{id:"q6",question:"What is the time complexity of merge sort?",options:["O(n)","O(n log n)","O(n\xb2)","O(log n)"],correctAnswer:1},{id:"q7",question:"Which data structure is best for implementing a priority queue?",options:["Array","Linked List","Heap","Hash Table"],correctAnswer:2},{id:"q8",question:"What is the main characteristic of a binary search tree?",options:["All nodes have exactly two children","Left subtree values < node < right subtree values","It's always balanced","It has O(1) search time"],correctAnswer:1},{id:"q9",question:"Which algorithm is used to find the shortest path in a weighted graph?",options:["BFS","DFS","Dijkstra's","Quick Sort"],correctAnswer:2},{id:"q10",question:"What is the time complexity of accessing an element in an array?",options:["O(1)","O(log n)","O(n)","O(n\xb2)"],correctAnswer:0},{id:"q11",question:"Which data structure is used to implement a queue?",options:["Stack","Linked List","Tree","Hash Table"],correctAnswer:1},{id:"q12",question:"What is the worst-case time complexity of quick sort?",options:["O(n log n)","O(n\xb2)","O(n)","O(log n)"],correctAnswer:1},{id:"q13",question:"Which algorithm uses divide-and-conquer strategy?",options:["Linear Search","Bubble Sort","Merge Sort","Selection Sort"],correctAnswer:2},{id:"q14",question:"What is the main advantage of dynamic programming?",options:["Always finds optimal solution","Avoids redundant calculations","Works with any problem","Has constant time complexity"],correctAnswer:1},{id:"q15",question:"Which data structure is best for checking if an element exists?",options:["Array","Linked List","Set","Stack"],correctAnswer:2},{id:"q16",question:"What is the time complexity of inserting at the beginning of a linked list?",options:["O(1)","O(log n)","O(n)","O(n\xb2)"],correctAnswer:0},{id:"q17",question:"Which sorting algorithm is stable?",options:["Quick Sort","Heap Sort","Merge Sort","Selection Sort"],correctAnswer:2},{id:"q18",question:"What is the purpose of a hash function in a hash table?",options:["To encrypt data","To map keys to array indices","To sort elements","To compress data"],correctAnswer:1},{id:"q19",question:"Which algorithm is used to find minimum spanning tree?",options:["Dijkstra's","Kruskal's","Floyd-Warshall","Bellman-Ford"],correctAnswer:1},{id:"q20",question:"What is the time complexity of searching in a binary search tree?",options:["O(1)","O(log n)","O(n)","O(n\xb2)"],correctAnswer:1},{id:"q21",question:"Which data structure is used for implementing a stack?",options:["Queue","Array","Tree","Graph"],correctAnswer:1},{id:"q22",question:"What is the main disadvantage of bubble sort?",options:["It's not stable","High time complexity O(n\xb2)","It requires extra space","It doesn't work with strings"],correctAnswer:1},{id:"q23",question:"Which algorithm is used for cycle detection in a graph?",options:["BFS","DFS","Both","Neither"],correctAnswer:2},{id:"q24",question:"What is the time complexity of heap sort?",options:["O(n)","O(n log n)","O(n\xb2)","O(log n)"],correctAnswer:1},{id:"q25",question:"Which data structure is best for implementing a dictionary?",options:["Array","Linked List","Hash Table","Stack"],correctAnswer:2},{id:"q26",question:"What is the main advantage of a trie data structure?",options:["Fast random access","Efficient prefix searches","Constant time operations","Automatic sorting"],correctAnswer:1},{id:"q27",question:"Which algorithm uses the greedy approach?",options:["Quick Sort","Dijkstra's","Merge Sort","Binary Search"],correctAnswer:1},{id:"q28",question:"What is the time complexity of the Floyd-Warshall algorithm?",options:["O(V\xb2)","O(V\xb3)","O(V log V)","O(E log V)"],correctAnswer:1},{id:"q29",question:"Which data structure is used for implementing a bloom filter?",options:["Array","Hash Table","Tree","Graph"],correctAnswer:0},{id:"q30",question:"What is the main characteristic of a max heap?",options:["All nodes are equal","Parent nodes are greater than children","It's always balanced","It has O(1) search time"],correctAnswer:1},{id:"q31",question:"Which algorithm is used for topological sorting?",options:["BFS","DFS","Both","Neither"],correctAnswer:2},{id:"q32",question:"What is the time complexity of union-find with path compression?",options:["O(1)","O(log n)","O(n)","Nearly constant"],correctAnswer:3},{id:"q33",question:"Which data structure is best for implementing a cache?",options:["Array","Linked List","Hash Table","Stack"],correctAnswer:2},{id:"q34",question:"What is the main advantage of memoization?",options:["Reduces space complexity","Avoids redundant calculations","Improves worst-case time","Makes code simpler"],correctAnswer:1},{id:"q35",question:"Which algorithm is used for string pattern matching?",options:["KMP","Quick Sort","Dijkstra's","Merge Sort"],correctAnswer:0}]}}];async function m(){return n.NextResponse.json(y)}let g=new r.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/learning-paths/route",pathname:"/api/learning-paths",filename:"route",bundlePath:"app/api/learning-paths/route"},resolvedPagePath:"/Users/ebrahim/Documents/GitHub/codeFlash/src/app/api/learning-paths/route.ts",nextConfigOutput:"",userland:a}),{workAsyncStorage:b,workUnitAsyncStorage:w,serverHooks:v}=g;function C(){return(0,s.patchFetch)({workAsyncStorage:b,workUnitAsyncStorage:w})}},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),a=t.X(0,[447,580],()=>o(4403));module.exports=a})();