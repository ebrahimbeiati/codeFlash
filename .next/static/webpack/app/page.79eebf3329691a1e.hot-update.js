"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/data/learning-paths/intro-to-digital.ts":
/*!*********************************************************!*\
  !*** ./src/lib/data/learning-paths/intro-to-digital.ts ***!
  \*********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   introToDigital: () => (/* binding */ introToDigital)\n/* harmony export */ });\nconst introToDigital = {\n    id: 'intro-to-digital',\n    title: 'Introduction to Digital',\n    description: 'Master the fundamentals of digital technology and computer basics',\n    level: 'beginner',\n    sets: [\n        {\n            id: 'computer-basics',\n            // title: 'Computer Basics',\n            description: 'Essential knowledge about computers and digital systems',\n            cards: [\n                {\n                    id: 'cb-1',\n                    front: 'What is a CPU?',\n                    back: 'CPU (Central Processing Unit) is the primary component of a computer that processes instructions and performs calculations. It\\'s often called the \"brain\" of the computer.'\n                },\n                {\n                    id: 'cb-2',\n                    front: 'What is RAM?',\n                    back: 'RAM (Random Access Memory) is temporary storage that holds data and instructions for the CPU to process. It\\'s volatile memory, meaning it loses its contents when power is turned off.'\n                },\n                {\n                    id: 'cb-3',\n                    front: 'What is the difference between hardware and software?',\n                    back: 'Hardware refers to physical components of a computer (CPU, RAM, hard drive), while software refers to programs and applications that run on the hardware.'\n                },\n                {\n                    id: 'cb-4',\n                    front: 'What is an operating system?',\n                    back: 'An operating system (OS) is software that manages computer hardware and software resources, providing common services for computer programs.'\n                },\n                {\n                    id: 'cb-5',\n                    front: 'What is a motherboard?',\n                    back: 'The motherboard is the main circuit board of a computer that connects all components together, including CPU, RAM, storage, and other peripherals.'\n                },\n                {\n                    id: 'cb-6',\n                    front: 'What is a GPU?',\n                    back: 'GPU (Graphics Processing Unit) is a specialized processor designed to handle graphics and image processing tasks. It\\'s essential for gaming and visual applications.'\n                },\n                {\n                    id: 'cb-7',\n                    front: 'What is a hard drive?',\n                    back: 'A hard drive is a non-volatile storage device that permanently stores and retrieves data. It can be mechanical (HDD) or solid-state (SSD).'\n                },\n                {\n                    id: 'cb-8',\n                    front: 'What is a network interface card (NIC)?',\n                    back: 'A NIC is a hardware component that allows computers to connect to a network. It can be wired (Ethernet) or wireless (Wi-Fi).'\n                },\n                {\n                    id: 'cb-9',\n                    front: 'What is a power supply unit (PSU)?',\n                    back: 'A PSU converts electrical power from an outlet into usable power for the computer\\'s components. It provides different voltage levels for various parts.'\n                },\n                {\n                    id: 'cb-10',\n                    front: 'What is a BIOS?',\n                    back: 'BIOS (Basic Input/Output System) is firmware that initializes hardware during the boot process and provides runtime services for operating systems.'\n                },\n                {\n                    id: 'cb-11',\n                    front: 'What is a port?',\n                    back: 'A port is a physical or virtual connection point that allows data to be transferred between devices. Examples include USB, HDMI, and network ports.'\n                },\n                {\n                    id: 'cb-12',\n                    front: 'What is a peripheral device?',\n                    back: 'A peripheral is an external device that connects to a computer to provide input or output functionality, such as keyboards, mice, and printers.'\n                },\n                {\n                    id: 'cb-13',\n                    front: 'What is a driver?',\n                    back: 'A driver is software that allows the operating system to communicate with hardware devices. It translates OS commands into device-specific instructions.'\n                },\n                {\n                    id: 'cb-14',\n                    front: 'What is a cache?',\n                    back: 'Cache is a small, fast memory that stores frequently accessed data to improve performance. It exists at multiple levels in a computer system.'\n                },\n                {\n                    id: 'cb-15',\n                    front: 'What is a bus?',\n                    back: 'A bus is a communication system that transfers data between components inside a computer or between computers. It can be parallel or serial.'\n                },\n                {\n                    id: 'cb-16',\n                    front: 'What is a chipset?',\n                    back: 'A chipset is a set of electronic components that manages data flow between the processor, memory, and peripherals. It\\'s part of the motherboard.'\n                },\n                {\n                    id: 'cb-17',\n                    front: 'What is a heat sink?',\n                    back: 'A heat sink is a passive cooling device that absorbs and dissipates heat from electronic components, typically the CPU or GPU.'\n                },\n                {\n                    id: 'cb-18',\n                    front: 'What is a fan?',\n                    back: 'A fan is an active cooling device that moves air to cool computer components. It helps prevent overheating and maintains optimal performance.'\n                },\n                {\n                    id: 'cb-19',\n                    front: 'What is a battery?',\n                    back: 'A battery provides power to portable devices when not connected to an electrical outlet. It stores electrical energy chemically and converts it to electrical power.'\n                },\n                {\n                    id: 'cb-20',\n                    front: 'What is a display?',\n                    back: 'A display is an output device that shows visual information. Common types include LCD, LED, and OLED screens, measured in pixels and refresh rates.'\n                }\n            ]\n        },\n        {\n            id: 'digital-concepts',\n            title: 'Digital Concepts',\n            description: 'Understanding digital data and binary systems',\n            cards: [\n                {\n                    id: 'dc-1',\n                    front: 'What is binary?',\n                    back: 'Binary is a number system that uses only two digits: 0 and 1. It\\'s the fundamental language of computers, where each digit is called a bit.'\n                },\n                {\n                    id: 'dc-2',\n                    front: 'What is a byte?',\n                    back: 'A byte is a unit of digital information that consists of 8 bits. It\\'s the basic unit of storage in computer systems.'\n                },\n                {\n                    id: 'dc-3',\n                    front: 'What is ASCII?',\n                    back: 'ASCII (American Standard Code for Information Interchange) is a character encoding standard that represents text in computers. It uses 7 bits to represent 128 characters.'\n                },\n                {\n                    id: 'dc-4',\n                    front: 'What is Unicode?',\n                    back: 'Unicode is a character encoding standard that can represent almost all characters from all writing systems in the world. It\\'s an extension of ASCII.'\n                },\n                {\n                    id: 'dc-5',\n                    front: 'What is the difference between analog and digital?',\n                    back: 'Analog signals are continuous and can have any value, while digital signals are discrete and can only have specific values (usually 0 and 1).'\n                },\n                {\n                    id: 'dc-6',\n                    front: 'What is a bit?',\n                    back: 'A bit (binary digit) is the smallest unit of data in computing, representing either 0 or 1. It\\'s the fundamental building block of digital information.'\n                },\n                {\n                    id: 'dc-7',\n                    front: 'What is a kilobyte (KB)?',\n                    back: 'A kilobyte is 1024 bytes (2^10 bytes). It\\'s commonly used to measure small amounts of data storage.'\n                },\n                {\n                    id: 'dc-8',\n                    front: 'What is a megabyte (MB)?',\n                    back: 'A megabyte is 1024 kilobytes (2^20 bytes). It\\'s used to measure medium-sized files and storage capacity.'\n                },\n                {\n                    id: 'dc-9',\n                    front: 'What is a gigabyte (GB)?',\n                    back: 'A gigabyte is 1024 megabytes (2^30 bytes). It\\'s used to measure large files and storage devices.'\n                },\n                {\n                    id: 'dc-10',\n                    front: 'What is a terabyte (TB)?',\n                    back: 'A terabyte is 1024 gigabytes (2^40 bytes). It\\'s used to measure very large storage capacities.'\n                },\n                {\n                    id: 'dc-11',\n                    front: 'What is hexadecimal?',\n                    back: 'Hexadecimal is a base-16 number system using digits 0-9 and letters A-F. It\\'s commonly used in computing to represent binary data more compactly.'\n                },\n                {\n                    id: 'dc-12',\n                    front: 'What is a pixel?',\n                    back: 'A pixel (picture element) is the smallest unit of a digital image. It\\'s a single point in a raster image, containing color information.'\n                },\n                {\n                    id: 'dc-13',\n                    front: 'What is resolution?',\n                    back: 'Resolution is the number of pixels in a display or image, typically expressed as width × height (e.g., 1920×1080).'\n                },\n                {\n                    id: 'dc-14',\n                    front: 'What is a color depth?',\n                    back: 'Color depth is the number of bits used to represent the color of a single pixel. Common depths are 8-bit (256 colors) and 24-bit (16.7 million colors).'\n                },\n                {\n                    id: 'dc-15',\n                    front: 'What is a file format?',\n                    back: 'A file format is a standard way of encoding information for storage in a computer file. Examples include JPEG, PNG, MP3, and PDF.'\n                },\n                {\n                    id: 'dc-16',\n                    front: 'What is compression?',\n                    back: 'Compression is the process of reducing the size of data files by encoding information more efficiently. It can be lossless or lossy.'\n                },\n                {\n                    id: 'dc-17',\n                    front: 'What is a protocol?',\n                    back: 'A protocol is a set of rules that define how data is transmitted and received over a network. Examples include HTTP, FTP, and TCP/IP.'\n                },\n                {\n                    id: 'dc-18',\n                    front: 'What is bandwidth?',\n                    back: 'Bandwidth is the maximum rate of data transfer across a network or communication channel, typically measured in bits per second (bps).'\n                },\n                {\n                    id: 'dc-19',\n                    front: 'What is latency?',\n                    back: 'Latency is the time delay between sending and receiving data. It\\'s typically measured in milliseconds and affects real-time applications.'\n                },\n                {\n                    id: 'dc-20',\n                    front: 'What is encryption?',\n                    back: 'Encryption is the process of encoding information to make it secure and unreadable to unauthorized parties. It uses algorithms and keys to protect data.'\n                }\n            ]\n        }\n    ],\n    quiz: {\n        questions: [\n            {\n                id: 'q1',\n                question: 'Which component is often called the \"brain\" of the computer?',\n                options: [\n                    'RAM',\n                    'CPU',\n                    'Hard Drive',\n                    'Motherboard'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q2',\n                question: 'What is the main difference between RAM and ROM?',\n                options: [\n                    'RAM is faster than ROM',\n                    'RAM is volatile, ROM is non-volatile',\n                    'RAM is cheaper than ROM',\n                    'RAM is newer technology than ROM'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q3',\n                question: 'How many bits are in a byte?',\n                options: [\n                    '4',\n                    '8',\n                    '16',\n                    '32'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q4',\n                question: 'What is the purpose of an operating system?',\n                options: [\n                    'To make the computer look pretty',\n                    'To manage hardware and software resources',\n                    'To connect to the internet',\n                    'To store data permanently'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q5',\n                question: 'Which of the following is NOT a binary number?',\n                options: [\n                    '1010',\n                    '1111',\n                    '1234',\n                    '1001'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q6',\n                question: 'What is the main function of a GPU?',\n                options: [\n                    'Process text documents',\n                    'Handle graphics and image processing',\n                    'Store data permanently',\n                    'Connect to the internet'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q7',\n                question: 'What is the difference between HDD and SSD?',\n                options: [\n                    'HDD is faster than SSD',\n                    'SSD has no moving parts, HDD does',\n                    'HDD is newer technology than SSD',\n                    'SSD is always larger than HDD'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q8',\n                question: 'What is the purpose of a network interface card?',\n                options: [\n                    'Process graphics',\n                    'Store data',\n                    'Connect to a network',\n                    'Power the computer'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q9',\n                question: 'What is the main function of a power supply unit?',\n                options: [\n                    'Process data',\n                    'Store information',\n                    'Convert electrical power',\n                    'Display images'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q10',\n                question: 'What is the purpose of a BIOS?',\n                options: [\n                    'Display graphics',\n                    'Store user data',\n                    'Initialize hardware during boot',\n                    'Connect to the internet'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q11',\n                question: 'What is a peripheral device?',\n                options: [\n                    'The main processor',\n                    'An external device that provides input/output',\n                    'The operating system',\n                    'The power supply'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q12',\n                question: 'What is the purpose of a driver?',\n                options: [\n                    'Power the computer',\n                    'Store data',\n                    'Allow OS to communicate with hardware',\n                    'Display graphics'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q13',\n                question: 'What is the main purpose of a cache?',\n                options: [\n                    'Store permanent data',\n                    'Improve performance with frequently accessed data',\n                    'Power the computer',\n                    'Display graphics'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q14',\n                question: 'What is the function of a heat sink?',\n                options: [\n                    'Store data',\n                    'Process information',\n                    'Cool electronic components',\n                    'Display images'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q15',\n                question: 'What is the purpose of a fan in a computer?',\n                options: [\n                    'Store data',\n                    'Process information',\n                    'Cool components',\n                    'Display graphics'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q16',\n                question: 'What is the main difference between analog and digital signals?',\n                options: [\n                    'Digital signals are always faster',\n                    'Analog signals are always more accurate',\n                    'Analog signals are continuous, digital are discrete',\n                    'Digital signals are always more expensive'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q17',\n                question: 'What is the purpose of Unicode?',\n                options: [\n                    'Store binary data',\n                    'Represent characters from all writing systems',\n                    'Process graphics',\n                    'Connect to networks'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q18',\n                question: 'What is the main purpose of compression?',\n                options: [\n                    'Improve image quality',\n                    'Reduce file size',\n                    'Increase processing speed',\n                    'Enhance security'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q19',\n                question: 'What is the purpose of a protocol?',\n                options: [\n                    'Store data',\n                    'Define rules for data transmission',\n                    'Process graphics',\n                    'Power the computer'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q20',\n                question: 'What is the main purpose of encryption?',\n                options: [\n                    'Improve performance',\n                    'Reduce file size',\n                    'Make data secure and unreadable',\n                    'Enhance graphics'\n                ],\n                correctAnswer: 2\n            }\n        ]\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/data/learning-paths/intro-to-digital.ts\n"));

/***/ })

});