"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/data/learning-paths/algorithms-data-structures.ts":
/*!*******************************************************************!*\
  !*** ./src/lib/data/learning-paths/algorithms-data-structures.ts ***!
  \*******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   algorithmsDataStructures: () => (/* binding */ algorithmsDataStructures)\n/* harmony export */ });\nconst algorithmsDataStructures = {\n    id: 'algorithms-data-structures',\n    title: 'Algorithms & Data Structures',\n    description: 'Master fundamental algorithms and data structures with practical examples',\n    level: 'intermediate',\n    sets: [\n        {\n            id: 'basic-data-structures',\n            title: 'Basic Data Structures',\n            description: 'Essential data structures with implementation examples',\n            category: 'data-structures',\n            cards: [\n                {\n                    id: 'array-basics',\n                    front: 'What is an Array and how do you implement basic operations?',\n                    back: \"Array: A collection of elements stored at contiguous memory locations.\\n\\nBasic Operations:\\n• Access: O(1) - arr[index]\\n• Search: O(n) - linear search\\n• Insert: O(n) - shift elements\\n• Delete: O(n) - shift elements\\n\\nExample (JavaScript):\\n```javascript\\nconst arr = [1, 2, 3, 4, 5];\\nconsole.log(arr[2]); // Access: 3\\narr.push(6); // Insert at end: O(1)\\narr.splice(2, 1); // Delete at index 2: O(n)\\n```\\n\\nReal-world use: Lists, sequences, lookup tables\",\n                    category: 'data-structures',\n                    difficulty: 'easy',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'linked-list',\n                    front: 'What is a Linked List and when would you use it?',\n                    back: \"Linked List: A linear data structure where elements are stored in nodes, each pointing to the next node.\\n\\nTypes:\\n• Singly Linked List\\n• Doubly Linked List\\n• Circular Linked List\\n\\nOperations:\\n• Insert at beginning: O(1)\\n• Delete at beginning: O(1)\\n• Search: O(n)\\n• Insert/Delete at end: O(n) for singly, O(1) for doubly\\n\\nExample:\\n```javascript\\nclass Node {\\n  constructor(data) {\\n    this.data = data;\\n    this.next = null;\\n  }\\n}\\n\\nclass LinkedList {\\n  constructor() {\\n    this.head = null;\\n  }\\n  \\n  insertAtBeginning(data) {\\n    const newNode = new Node(data);\\n    newNode.next = this.head;\\n    this.head = newNode;\\n  }\\n}\\n```\\n\\nUse cases: Dynamic memory allocation, undo/redo functionality\",\n                    category: 'data-structures',\n                    difficulty: 'easy',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'stack-implementation',\n                    front: 'How do you implement a Stack and what are its applications?',\n                    back: 'Stack: LIFO (Last In, First Out) data structure.\\n\\nOperations:\\n• Push: O(1) - add to top\\n• Pop: O(1) - remove from top\\n• Peek: O(1) - view top element\\n• isEmpty: O(1)\\n\\nImplementation:\\n```javascript\\nclass Stack {\\n  constructor() {\\n    this.items = [];\\n  }\\n  \\n  push(element) {\\n    this.items.push(element);\\n  }\\n  \\n  pop() {\\n    if (this.isEmpty()) return \"Underflow\";\\n    return this.items.pop();\\n  }\\n  \\n  peek() {\\n    return this.items[this.items.length - 1];\\n  }\\n  \\n  isEmpty() {\\n    return this.items.length === 0;\\n  }\\n}\\n```\\n\\nApplications: Function call stack, undo operations, browser history, expression evaluation',\n                    category: 'data-structures',\n                    difficulty: 'easy',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'queue-implementation',\n                    front: 'How do you implement a Queue and what are its applications?',\n                    back: 'Queue: FIFO (First In, First Out) data structure.\\n\\nOperations:\\n• Enqueue: O(1) - add to back\\n• Dequeue: O(1) - remove from front\\n• Front: O(1) - view front element\\n• isEmpty: O(1)\\n\\nImplementation:\\n```javascript\\nclass Queue {\\n  constructor() {\\n    this.items = [];\\n  }\\n  \\n  enqueue(element) {\\n    this.items.push(element);\\n  }\\n  \\n  dequeue() {\\n    if (this.isEmpty()) return \"Underflow\";\\n    return this.items.shift();\\n  }\\n  \\n  front() {\\n    if (this.isEmpty()) return \"Queue is empty\";\\n    return this.items[0];\\n  }\\n  \\n  isEmpty() {\\n    return this.items.length === 0;\\n  }\\n}\\n```\\n\\nApplications: Task scheduling, breadth-first search, print spooling, web server request handling',\n                    category: 'data-structures',\n                    difficulty: 'easy',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'hash-table',\n                    front: 'What is a Hash Table and how does it achieve O(1) average lookup?',\n                    back: \"Hash Table: Data structure that maps keys to values using a hash function.\\n\\nHow it works:\\n1. Hash function converts key to array index\\n2. Store value at that index\\n3. Handle collisions with chaining or open addressing\\n\\nOperations:\\n• Insert: O(1) average, O(n) worst case\\n• Search: O(1) average, O(n) worst case\\n• Delete: O(1) average, O(n) worst case\\n\\nExample:\\n```javascript\\nclass HashTable {\\n  constructor(size = 53) {\\n    this.keyMap = new Array(size);\\n  }\\n  \\n  _hash(key) {\\n    let total = 0;\\n    let WEIRD_PRIME = 31;\\n    for (let i = 0; i < Math.min(key.length, 100); i++) {\\n      let char = key[i];\\n      let value = char.charCodeAt(0) - 96;\\n      total = (total * WEIRD_PRIME + value) % this.keyMap.length;\\n    }\\n    return total;\\n  }\\n  \\n  set(key, value) {\\n    let index = this._hash(key);\\n    if (!this.keyMap[index]) {\\n      this.keyMap[index] = [];\\n    }\\n    this.keyMap[index].push([key, value]);\\n  }\\n  \\n  get(key) {\\n    let index = this._hash(key);\\n    if (this.keyMap[index]) {\\n      for (let i = 0; i < this.keyMap[index].length; i++) {\\n        if (this.keyMap[index][i][0] === key) {\\n          return this.keyMap[index][i][1];\\n        }\\n      }\\n    }\\n    return undefined;\\n  }\\n}\\n```\\n\\nApplications: Database indexing, caching, symbol tables, spell checkers\",\n                    category: 'data-structures',\n                    difficulty: 'medium',\n                    reviewCount: 0,\n                    correctCount: 0\n                }\n            ]\n        },\n        {\n            id: 'advanced-data-structures',\n            title: 'Advanced Data Structures',\n            description: 'Complex data structures for efficient problem solving',\n            category: 'data-structures',\n            cards: [\n                {\n                    id: 'binary-tree',\n                    front: 'What is a Binary Tree and how do you traverse it?',\n                    back: \"Binary Tree: A tree data structure where each node has at most two children.\\n\\nTypes:\\n• Full Binary Tree: Every node has 0 or 2 children\\n• Complete Binary Tree: All levels filled except last\\n• Perfect Binary Tree: All internal nodes have 2 children\\n• Balanced Binary Tree: Height difference ≤ 1\\n\\nTraversal Methods:\\n1. Inorder (Left → Root → Right)\\n2. Preorder (Root → Left → Right)  \\n3. Postorder (Left → Right → Root)\\n4. Level Order (Breadth-first)\\n\\nExample:\\n```javascript\\nclass Node {\\n  constructor(data) {\\n    this.data = data;\\n    this.left = null;\\n    this.right = null;\\n  }\\n}\\n\\nfunction inorderTraversal(root) {\\n  if (root !== null) {\\n    inorderTraversal(root.left);\\n    console.log(root.data);\\n    inorderTraversal(root.right);\\n  }\\n}\\n\\nfunction preorderTraversal(root) {\\n  if (root !== null) {\\n    console.log(root.data);\\n    preorderTraversal(root.left);\\n    preorderTraversal(root.right);\\n  }\\n}\\n```\\n\\nApplications: Expression trees, file system organization, decision trees\",\n                    category: 'data-structures',\n                    difficulty: 'medium',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'binary-search-tree',\n                    front: 'What is a Binary Search Tree and how do you implement it?',\n                    back: \"Binary Search Tree: A binary tree where for each node:\\n• All nodes in left subtree < node value\\n• All nodes in right subtree > node value\\n\\nOperations:\\n• Search: O(log n) average, O(n) worst\\n• Insert: O(log n) average, O(n) worst\\n• Delete: O(log n) average, O(n) worst\\n\\nImplementation:\\n```javascript\\nclass BST {\\n  constructor() {\\n    this.root = null;\\n  }\\n  \\n  insert(data) {\\n    const newNode = new Node(data);\\n    \\n    if (this.root === null) {\\n      this.root = newNode;\\n      return;\\n    }\\n    \\n    this.insertNode(this.root, newNode);\\n  }\\n  \\n  insertNode(node, newNode) {\\n    if (newNode.data < node.data) {\\n      if (node.left === null) {\\n        node.left = newNode;\\n      } else {\\n        this.insertNode(node.left, newNode);\\n      }\\n    } else {\\n      if (node.right === null) {\\n        node.right = newNode;\\n      } else {\\n        this.insertNode(node.right, newNode);\\n      }\\n    }\\n  }\\n  \\n  search(node, data) {\\n    if (node === null) return null;\\n    \\n    if (data < node.data) {\\n      return this.search(node.left, data);\\n    } else if (data > node.data) {\\n      return this.search(node.right, data);\\n    } else {\\n      return node;\\n    }\\n  }\\n}\\n```\\n\\nApplications: Database indexing, file systems, symbol tables\",\n                    category: 'data-structures',\n                    difficulty: 'medium',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'heap-implementation',\n                    front: 'What is a Heap and how do you implement it?',\n                    back: \"Heap: A complete binary tree that satisfies the heap property.\\n\\nTypes:\\n• Max Heap: Parent ≥ children\\n• Min Heap: Parent ≤ children\\n\\nOperations:\\n• Insert: O(log n)\\n• Extract Max/Min: O(log n)\\n• Build Heap: O(n)\\n\\nImplementation:\\n```javascript\\nclass MaxHeap {\\n  constructor() {\\n    this.heap = [];\\n  }\\n  \\n  parent(i) {\\n    return Math.floor((i - 1) / 2);\\n  }\\n  \\n  leftChild(i) {\\n    return 2 * i + 1;\\n  }\\n  \\n  rightChild(i) {\\n    return 2 * i + 2;\\n  }\\n  \\n  swap(i, j) {\\n    [this.heap[i], this.heap[j]] = [this.heap[j], this.heap[i]];\\n  }\\n  \\n  insert(key) {\\n    this.heap.push(key);\\n    this.heapifyUp(this.heap.length - 1);\\n  }\\n  \\n  heapifyUp(i) {\\n    while (i > 0 && this.heap[this.parent(i)] < this.heap[i]) {\\n      this.swap(i, this.parent(i));\\n      i = this.parent(i);\\n    }\\n  }\\n  \\n  extractMax() {\\n    if (this.heap.length === 0) return null;\\n    \\n    const max = this.heap[0];\\n    this.heap[0] = this.heap.pop();\\n    this.heapifyDown(0);\\n    \\n    return max;\\n  }\\n  \\n  heapifyDown(i) {\\n    let maxIndex = i;\\n    const left = this.leftChild(i);\\n    const right = this.rightChild(i);\\n    \\n    if (left < this.heap.length && this.heap[left] > this.heap[maxIndex]) {\\n      maxIndex = left;\\n    }\\n    \\n    if (right < this.heap.length && this.heap[right] > this.heap[maxIndex]) {\\n      maxIndex = right;\\n    }\\n    \\n    if (i !== maxIndex) {\\n      this.swap(i, maxIndex);\\n      this.heapifyDown(maxIndex);\\n    }\\n  }\\n}\\n```\\n\\nApplications: Priority queues, heap sort, graph algorithms (Dijkstra, Prim)\",\n                    category: 'data-structures',\n                    difficulty: 'medium',\n                    reviewCount: 0,\n                    correctCount: 0\n                }\n            ]\n        },\n        {\n            id: 'searching-algorithms',\n            title: 'Searching Algorithms',\n            description: 'Different approaches to finding elements in data structures',\n            category: 'algorithms',\n            cards: [\n                {\n                    id: 'linear-search',\n                    front: 'How does Linear Search work and when should you use it?',\n                    back: \"Linear Search: Sequentially check each element until target is found.\\n\\nAlgorithm:\\n1. Start from first element\\n2. Compare with target\\n3. If match found, return index\\n4. If not found, move to next element\\n5. Repeat until end of array\\n\\nTime Complexity: O(n)\\nSpace Complexity: O(1)\\n\\nImplementation:\\n```javascript\\nfunction linearSearch(arr, target) {\\n  for (let i = 0; i < arr.length; i++) {\\n    if (arr[i] === target) {\\n      return i; // Found\\n    }\\n  }\\n  return -1; // Not found\\n}\\n\\n// Example usage\\nconst arr = [64, 34, 25, 12, 22, 11, 90];\\nconsole.log(linearSearch(arr, 22)); // 4\\nconsole.log(linearSearch(arr, 99)); // -1\\n```\\n\\nWhen to use:\\n• Small datasets\\n• Unsorted data\\n• Simple implementation needed\\n• Memory constraints\\n\\nReal-world: Finding a book in a small library, checking if a name is on a list\",\n                    category: 'algorithms',\n                    difficulty: 'easy',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'binary-search',\n                    front: 'How does Binary Search work and what are its requirements?',\n                    back: \"Binary Search: Divide and conquer algorithm for sorted arrays.\\n\\nRequirements:\\n• Array must be sorted\\n• Random access to elements\\n\\nAlgorithm:\\n1. Find middle element\\n2. If middle == target, return index\\n3. If middle > target, search left half\\n4. If middle < target, search right half\\n5. Repeat until found or array exhausted\\n\\nTime Complexity: O(log n)\\nSpace Complexity: O(1) iterative, O(log n) recursive\\n\\nImplementation:\\n```javascript\\n// Iterative\\nfunction binarySearch(arr, target) {\\n  let left = 0;\\n  let right = arr.length - 1;\\n  \\n  while (left <= right) {\\n    const mid = Math.floor((left + right) / 2);\\n    \\n    if (arr[mid] === target) {\\n      return mid;\\n    } else if (arr[mid] < target) {\\n      left = mid + 1;\\n    } else {\\n      right = mid - 1;\\n    }\\n  }\\n  \\n  return -1;\\n}\\n\\n// Recursive\\nfunction binarySearchRecursive(arr, target, left = 0, right = arr.length - 1) {\\n  if (left > right) return -1;\\n  \\n  const mid = Math.floor((left + right) / 2);\\n  \\n  if (arr[mid] === target) {\\n    return mid;\\n  } else if (arr[mid] < target) {\\n    return binarySearchRecursive(arr, target, mid + 1, right);\\n  } else {\\n    return binarySearchRecursive(arr, target, left, mid - 1);\\n  }\\n}\\n\\n// Example\\nconst sortedArr = [1, 3, 5, 7, 9, 11, 13, 15];\\nconsole.log(binarySearch(sortedArr, 7)); // 3\\nconsole.log(binarySearch(sortedArr, 10)); // -1\\n```\\n\\nApplications: Dictionary lookup, phone book search, finding elements in sorted databases\",\n                    category: 'algorithms',\n                    difficulty: 'medium',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'depth-first-search',\n                    front: 'How does Depth-First Search (DFS) work and when should you use it?',\n                    back: \"DFS: Explore as far as possible along each branch before backtracking.\\n\\nStrategy: Go deep before going wide\\n\\nAlgorithm:\\n1. Start at root/starting node\\n2. Explore one branch completely\\n3. Backtrack when you reach a leaf/dead end\\n4. Repeat for all branches\\n\\nTime Complexity: O(V + E) where V = vertices, E = edges\\nSpace Complexity: O(V) for recursion stack\\n\\nImplementation:\\n```javascript\\n// Graph representation\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'F'],\\n  'F': ['C', 'E']\\n};\\n\\n// Recursive DFS\\nfunction dfsRecursive(graph, start, visited = new Set()) {\\n  visited.add(start);\\n  console.log(start); // Process node\\n  \\n  for (const neighbor of graph[start]) {\\n    if (!visited.has(neighbor)) {\\n      dfsRecursive(graph, neighbor, visited);\\n    }\\n  }\\n}\\n\\n// Iterative DFS using stack\\nfunction dfsIterative(graph, start) {\\n  const visited = new Set();\\n  const stack = [start];\\n  \\n  while (stack.length > 0) {\\n    const current = stack.pop();\\n    \\n    if (!visited.has(current)) {\\n      visited.add(current);\\n      console.log(current); // Process node\\n      \\n      // Add unvisited neighbors to stack\\n      for (const neighbor of graph[current]) {\\n        if (!visited.has(neighbor)) {\\n          stack.push(neighbor);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n// Example usage\\nconsole.log('Recursive DFS:');\\ndfsRecursive(graph, 'A');\\n\\nconsole.log('Iterative DFS:');\\ndfsIterative(graph, 'A');\\n```\\n\\nUse cases: Maze solving, topological sorting, cycle detection, web crawling\",\n                    category: 'algorithms',\n                    difficulty: 'medium',\n                    reviewCount: 0,\n                    correctCount: 0\n                },\n                {\n                    id: 'breadth-first-search',\n                    front: 'How does Breadth-First Search (BFS) work and what are its advantages?',\n                    back: \"BFS: Explore all neighbors at current depth before moving to next level.\\n\\nStrategy: Go wide before going deep\\n\\nAlgorithm:\\n1. Start at root/starting node\\n2. Visit all immediate neighbors\\n3. Add their neighbors to queue\\n4. Process queue level by level\\n\\nTime Complexity: O(V + E)\\nSpace Complexity: O(V) for queue\\n\\nImplementation:\\n```javascript\\n// Graph representation\\nconst graph = {\\n  'A': ['B', 'C'],\\n  'B': ['A', 'D', 'E'],\\n  'C': ['A', 'F'],\\n  'D': ['B'],\\n  'E': ['B', 'F'],\\n  'F': ['C', 'E']\\n};\\n\\nfunction bfs(graph, start) {\\n  const visited = new Set();\\n  const queue = [start];\\n  visited.add(start);\\n  \\n  while (queue.length > 0) {\\n    const current = queue.shift();\\n    console.log(current); // Process node\\n    \\n    // Add unvisited neighbors to queue\\n    for (const neighbor of graph[current]) {\\n      if (!visited.has(neighbor)) {\\n        visited.add(neighbor);\\n        queue.push(neighbor);\\n      }\\n    }\\n  }\\n}\\n\\n// BFS with distance tracking\\nfunction bfsWithDistance(graph, start) {\\n  const visited = new Set();\\n  const queue = [{ node: start, distance: 0 }];\\n  visited.add(start);\\n  \\n  while (queue.length > 0) {\\n    const { node, distance } = queue.shift();\\n    console.log(`Node: ${node}, Distance: ${distance}`);\\n    \\n    for (const neighbor of graph[node]) {\\n      if (!visited.has(neighbor)) {\\n        visited.add(neighbor);\\n        queue.push({ node: neighbor, distance: distance + 1 });\\n      }\\n    }\\n  }\\n}\\n\\n// Example usage\\nconsole.log('BFS traversal:');\\nbfs(graph, 'A');\\n\\nconsole.log('BFS with distances:');\\nbfsWithDistance(graph, 'A');\\n```\\n\\nAdvantages:\\n• Finds shortest path in unweighted graphs\\n• Guarantees minimum number of edges\\n• Good for level-by-level processing\\n\\nApplications: Shortest path finding, web crawling, GPS navigation, social network connections\",\n                    category: 'algorithms',\n                    difficulty: 'medium',\n                    reviewCount: 0,\n                    correctCount: 0\n                }\n            ]\n        }\n    ],\n    quiz: {\n        questions: [\n            {\n                id: 'q1',\n                question: 'What is the time complexity of accessing an element in an array?',\n                options: [\n                    'O(1)',\n                    'O(log n)',\n                    'O(n)',\n                    'O(n²)'\n                ],\n                correctAnswer: 0\n            },\n            {\n                id: 'q2',\n                question: 'Which data structure follows LIFO principle?',\n                options: [\n                    'Queue',\n                    'Stack',\n                    'Linked List',\n                    'Tree'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q3',\n                question: 'What is the average time complexity of search in a hash table?',\n                options: [\n                    'O(1)',\n                    'O(log n)',\n                    'O(n)',\n                    'O(n²)'\n                ],\n                correctAnswer: 0\n            },\n            {\n                id: 'q4',\n                question: 'Which traversal visits nodes in the order: Left → Root → Right?',\n                options: [\n                    'Preorder',\n                    'Inorder',\n                    'Postorder',\n                    'Level order'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q5',\n                question: 'What is the time complexity of binary search?',\n                options: [\n                    'O(1)',\n                    'O(log n)',\n                    'O(n)',\n                    'O(n²)'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q6',\n                question: 'Which algorithm is better for finding shortest path in unweighted graphs?',\n                options: [\n                    'DFS',\n                    'BFS',\n                    'Both are equal',\n                    'Neither'\n                ],\n                correctAnswer: 1\n            },\n            {\n                id: 'q7',\n                question: 'What is the space complexity of recursive DFS?',\n                options: [\n                    'O(1)',\n                    'O(log n)',\n                    'O(n)',\n                    'O(n²)'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q8',\n                question: 'Which data structure is best for implementing a priority queue?',\n                options: [\n                    'Array',\n                    'Linked List',\n                    'Heap',\n                    'Hash Table'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q9',\n                question: 'What is the worst-case time complexity of BST operations?',\n                options: [\n                    'O(1)',\n                    'O(log n)',\n                    'O(n)',\n                    'O(n²)'\n                ],\n                correctAnswer: 2\n            },\n            {\n                id: 'q10',\n                question: 'Which search algorithm requires the array to be sorted?',\n                options: [\n                    'Linear Search',\n                    'Binary Search',\n                    'Both',\n                    'Neither'\n                ],\n                correctAnswer: 1\n            }\n        ]\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/data/learning-paths/algorithms-data-structures.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/data/learning-paths/index.ts":
/*!**********************************************!*\
  !*** ./src/lib/data/learning-paths/index.ts ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   learningPaths: () => (/* binding */ learningPaths)\n/* harmony export */ });\n/* harmony import */ var _intro_to_digital__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./intro-to-digital */ \"(app-pages-browser)/./src/lib/data/learning-paths/intro-to-digital.ts\");\n/* harmony import */ var _intro_to_programming__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intro-to-programming */ \"(app-pages-browser)/./src/lib/data/learning-paths/intro-to-programming.ts\");\n/* harmony import */ var _html_css_basics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./html-css-basics */ \"(app-pages-browser)/./src/lib/data/learning-paths/html-css-basics.ts\");\n/* harmony import */ var _javascript_fundamentals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./javascript-fundamentals */ \"(app-pages-browser)/./src/lib/data/learning-paths/javascript-fundamentals.ts\");\n/* harmony import */ var _react_basics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./react-basics */ \"(app-pages-browser)/./src/lib/data/learning-paths/react-basics.ts\");\n/* harmony import */ var _typescript_essentials__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./typescript-essentials */ \"(app-pages-browser)/./src/lib/data/learning-paths/typescript-essentials.ts\");\n/* harmony import */ var _git_github_basics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./git-github-basics */ \"(app-pages-browser)/./src/lib/data/learning-paths/git-github-basics.ts\");\n/* harmony import */ var _nodejs_basics__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nodejs-basics */ \"(app-pages-browser)/./src/lib/data/learning-paths/nodejs-basics.ts\");\n/* harmony import */ var _express_basics__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./express-basics */ \"(app-pages-browser)/./src/lib/data/learning-paths/express-basics.ts\");\n/* harmony import */ var _mongodb_basics__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mongodb-basics */ \"(app-pages-browser)/./src/lib/data/learning-paths/mongodb-basics.ts\");\n/* harmony import */ var _sql_basics__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sql-basics */ \"(app-pages-browser)/./src/lib/data/learning-paths/sql-basics.ts\");\n/* harmony import */ var _linux_commands__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./linux-commands */ \"(app-pages-browser)/./src/lib/data/learning-paths/linux-commands.ts\");\n/* harmony import */ var _algorithms_data_structures__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./algorithms-data-structures */ \"(app-pages-browser)/./src/lib/data/learning-paths/algorithms-data-structures.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst learningPaths = [\n    _intro_to_digital__WEBPACK_IMPORTED_MODULE_0__.introToDigital,\n    _intro_to_programming__WEBPACK_IMPORTED_MODULE_1__.introToProgramming,\n    _html_css_basics__WEBPACK_IMPORTED_MODULE_2__.htmlCssBasics,\n    _javascript_fundamentals__WEBPACK_IMPORTED_MODULE_3__.javascriptFundamentals,\n    _react_basics__WEBPACK_IMPORTED_MODULE_4__.reactBasics,\n    _typescript_essentials__WEBPACK_IMPORTED_MODULE_5__.typescriptEssentials,\n    _git_github_basics__WEBPACK_IMPORTED_MODULE_6__.gitGithubBasics,\n    _nodejs_basics__WEBPACK_IMPORTED_MODULE_7__.nodejsBasics,\n    _express_basics__WEBPACK_IMPORTED_MODULE_8__.expressBasics,\n    _mongodb_basics__WEBPACK_IMPORTED_MODULE_9__.mongodbBasics,\n    _sql_basics__WEBPACK_IMPORTED_MODULE_10__.sqlBasics,\n    _linux_commands__WEBPACK_IMPORTED_MODULE_11__.linuxCommands,\n    _algorithms_data_structures__WEBPACK_IMPORTED_MODULE_12__.algorithmsDataStructures\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvZGF0YS9sZWFybmluZy1wYXRocy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNvRDtBQUNRO0FBQ1Y7QUFDaUI7QUFDdEI7QUFDa0I7QUFDVDtBQUNQO0FBQ0U7QUFDQTtBQUNSO0FBQ1E7QUFDdUI7QUFFakUsTUFBTWEsZ0JBQWdDO0lBQzNDYiw2REFBY0E7SUFDZEMscUVBQWtCQTtJQUNsQkMsMkRBQWFBO0lBQ2JDLDRFQUFzQkE7SUFDdEJDLHNEQUFXQTtJQUNYQyx3RUFBb0JBO0lBQ3BCQywrREFBZUE7SUFDZkMsd0RBQVlBO0lBQ1pDLDBEQUFhQTtJQUNiQywwREFBYUE7SUFDYkMsbURBQVNBO0lBQ1RDLDJEQUFhQTtJQUNiQyxrRkFBd0JBO0NBQ3pCLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9lYnJhaGltL0RvY3VtZW50cy9HaXRIdWIvY29kZUZsYXNoL3NyYy9saWIvZGF0YS9sZWFybmluZy1wYXRocy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMZWFybmluZ1BhdGggfSBmcm9tICdAL3R5cGVzL2xlYXJuaW5nUGF0aCc7XG5pbXBvcnQgeyBpbnRyb1RvRGlnaXRhbCB9IGZyb20gJy4vaW50cm8tdG8tZGlnaXRhbCc7XG5pbXBvcnQgeyBpbnRyb1RvUHJvZ3JhbW1pbmcgfSBmcm9tICcuL2ludHJvLXRvLXByb2dyYW1taW5nJztcbmltcG9ydCB7IGh0bWxDc3NCYXNpY3MgfSBmcm9tICcuL2h0bWwtY3NzLWJhc2ljcyc7XG5pbXBvcnQgeyBqYXZhc2NyaXB0RnVuZGFtZW50YWxzIH0gZnJvbSAnLi9qYXZhc2NyaXB0LWZ1bmRhbWVudGFscyc7XG5pbXBvcnQgeyByZWFjdEJhc2ljcyB9IGZyb20gJy4vcmVhY3QtYmFzaWNzJztcbmltcG9ydCB7IHR5cGVzY3JpcHRFc3NlbnRpYWxzIH0gZnJvbSAnLi90eXBlc2NyaXB0LWVzc2VudGlhbHMnO1xuaW1wb3J0IHsgZ2l0R2l0aHViQmFzaWNzIH0gZnJvbSAnLi9naXQtZ2l0aHViLWJhc2ljcyc7XG5pbXBvcnQgeyBub2RlanNCYXNpY3MgfSBmcm9tICcuL25vZGVqcy1iYXNpY3MnO1xuaW1wb3J0IHsgZXhwcmVzc0Jhc2ljcyB9IGZyb20gJy4vZXhwcmVzcy1iYXNpY3MnO1xuaW1wb3J0IHsgbW9uZ29kYkJhc2ljcyB9IGZyb20gJy4vbW9uZ29kYi1iYXNpY3MnO1xuaW1wb3J0IHsgc3FsQmFzaWNzIH0gZnJvbSAnLi9zcWwtYmFzaWNzJztcbmltcG9ydCB7IGxpbnV4Q29tbWFuZHMgfSBmcm9tICcuL2xpbnV4LWNvbW1hbmRzJztcbmltcG9ydCB7IGFsZ29yaXRobXNEYXRhU3RydWN0dXJlcyB9IGZyb20gJy4vYWxnb3JpdGhtcy1kYXRhLXN0cnVjdHVyZXMnO1xuXG5leHBvcnQgY29uc3QgbGVhcm5pbmdQYXRoczogTGVhcm5pbmdQYXRoW10gPSBbXG4gIGludHJvVG9EaWdpdGFsLFxuICBpbnRyb1RvUHJvZ3JhbW1pbmcsXG4gIGh0bWxDc3NCYXNpY3MsXG4gIGphdmFzY3JpcHRGdW5kYW1lbnRhbHMsXG4gIHJlYWN0QmFzaWNzLFxuICB0eXBlc2NyaXB0RXNzZW50aWFscyxcbiAgZ2l0R2l0aHViQmFzaWNzLFxuICBub2RlanNCYXNpY3MsXG4gIGV4cHJlc3NCYXNpY3MsXG4gIG1vbmdvZGJCYXNpY3MsXG4gIHNxbEJhc2ljcyxcbiAgbGludXhDb21tYW5kcyxcbiAgYWxnb3JpdGhtc0RhdGFTdHJ1Y3R1cmVzXG5dOyAiXSwibmFtZXMiOlsiaW50cm9Ub0RpZ2l0YWwiLCJpbnRyb1RvUHJvZ3JhbW1pbmciLCJodG1sQ3NzQmFzaWNzIiwiamF2YXNjcmlwdEZ1bmRhbWVudGFscyIsInJlYWN0QmFzaWNzIiwidHlwZXNjcmlwdEVzc2VudGlhbHMiLCJnaXRHaXRodWJCYXNpY3MiLCJub2RlanNCYXNpY3MiLCJleHByZXNzQmFzaWNzIiwibW9uZ29kYkJhc2ljcyIsInNxbEJhc2ljcyIsImxpbnV4Q29tbWFuZHMiLCJhbGdvcml0aG1zRGF0YVN0cnVjdHVyZXMiLCJsZWFybmluZ1BhdGhzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/data/learning-paths/index.ts\n"));

/***/ })

});